{"version":3,"sources":["components/offcanvas.js"],"names":["dmx","Component","initialData","open","attributes","show","type","Boolean","default","nobackdrop","nokeyboard","scroll","methods","toggle","self","this","requestAnimationFrame","instance","hide","events","Event","shown","hidden","onShown","set","onHidden","render","node","$node","$parse","addEventListener","dispatchEvent","bind","bootstrap","Offcanvas","backdrop","props","keyboard","update","classList"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,gBAAA,CACAC,YAAA,CACAC,MAAA,GAGAC,WAAA,CACAC,KAAA,CACAC,KAAAC,QACAC,SAAA,GAGAC,WAAA,CACAH,KAAAC,QACAC,SAAA,GAGAE,WAAA,CACAJ,KAAAC,QACAC,SAAA,GAGAG,OAAA,CACAL,KAAAC,QACAC,SAAA,IAIAI,QAAA,CACAC,OAAA,WACA,IAAAC,EAAAC,KACAC,sBAAA,WACAF,EAAAG,SAAAJ,YAIAR,KAAA,WACA,IAAAS,EAAAC,KACAC,sBAAA,WACAF,EAAAG,SAAAZ,UAIAa,KAAA,WACA,IAAAJ,EAAAC,KACAC,sBAAA,WACAF,EAAAG,SAAAC,WAKAC,OAAA,CACAd,KAAAe,MACAC,MAAAD,MACAF,KAAAE,MACAE,OAAAF,OAGAG,QAAA,WACAR,KAAAS,IAAA,QAAA,IAGAC,SAAA,WACAV,KAAAS,IAAA,QAAA,IAGAE,OAAA,SAAAC,GACAZ,KAAAa,MAAAD,EACAZ,KAAAc,SAEAd,KAAAa,MAAAE,iBAAA,oBAAAf,KAAAgB,cAAAC,KAAAjB,KAAA,SACAA,KAAAa,MAAAE,iBAAA,qBAAAf,KAAAgB,cAAAC,KAAAjB,KAAA,UACAA,KAAAa,MAAAE,iBAAA,oBAAAf,KAAAgB,cAAAC,KAAAjB,KAAA,SACAA,KAAAa,MAAAE,iBAAA,sBAAAf,KAAAgB,cAAAC,KAAAjB,KAAA,WAEAA,KAAAa,MAAAE,iBAAA,qBAAAf,KAAAQ,QAAAS,KAAAjB,OACAA,KAAAa,MAAAE,iBAAA,sBAAAf,KAAAU,SAAAO,KAAAjB,OAEAA,KAAAE,SAAA,IAAAgB,UAAAC,UAAAnB,KAAAa,MAAA,CACAO,UAAApB,KAAAqB,MAAA3B,WACA4B,UAAAtB,KAAAqB,MAAA1B,WACAC,OAAAI,KAAAqB,MAAAzB,SAGAI,KAAAuB,OAAA,KAGAA,OAAA,SAAAF,GACAA,EAAA/B,MAAAU,KAAAqB,MAAA/B,OACAU,KAAAa,MAAAW,UAAA1B,OAAA,OAAAE,KAAAqB,MAAA/B,MACAU,KAAAS,IAAA,OAAAT,KAAAqB,MAAA/B","file":"../dmxBootstrap5Offcanvas/dmxBootstrap5Offcanvas.js","sourcesContent":["dmx.Component('bs5-offcanvas', {\r\n    initialData: {\r\n        open: false\r\n    },\r\n\r\n    attributes: {\r\n        show: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        nobackdrop: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        nokeyboard: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        scroll: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        toggle: function() {\r\n            var self = this;\r\n            requestAnimationFrame(function() {\r\n                self.instance.toggle();\r\n            });\r\n        },\r\n\r\n        show: function() {\r\n            var self = this;\r\n            requestAnimationFrame(function() {\r\n                self.instance.show();\r\n            });\r\n        },\r\n\r\n        hide: function() {\r\n            var self = this;\r\n            requestAnimationFrame(function() {\r\n                self.instance.hide();\r\n            });\r\n        }\r\n    },\r\n\r\n    events: {\r\n        show: Event,\r\n        shown: Event,\r\n        hide: Event,\r\n        hidden: Event\r\n    },\r\n\r\n    onShown: function() {\r\n        this.set('open', true);\r\n    },\r\n\r\n    onHidden: function() {\r\n        this.set('open', false);\r\n    },\r\n\r\n    render: function(node) {\r\n        this.$node = node;\r\n        this.$parse();\r\n\r\n        this.$node.addEventListener('show.bs.offcanvas', this.dispatchEvent.bind(this, 'show'));\r\n        this.$node.addEventListener('shown.bs.offcanvas', this.dispatchEvent.bind(this, 'shown'));\r\n        this.$node.addEventListener('hide.bs.offcanvas', this.dispatchEvent.bind(this, 'hide'));\r\n        this.$node.addEventListener('hidden.bs.offcanvas', this.dispatchEvent.bind(this, 'hidden'));\r\n\r\n        this.$node.addEventListener('shown.bs.offcanvas', this.onShown.bind(this));\r\n        this.$node.addEventListener('hidden.bs.offcanvas', this.onHidden.bind(this));\r\n\r\n        this.instance = new bootstrap.Offcanvas(this.$node, {\r\n            backdrop: !this.props.nobackdrop,\r\n            keyboard: !this.props.nokeyboard,\r\n            scroll: this.props.scroll\r\n        });\r\n\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.show != this.props.show) {\r\n            this.$node.classList.toggle('show', this.props.show);\r\n            this.set('open', this.props.show);\r\n        }\r\n    }\r\n});"]}