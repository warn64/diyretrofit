{"version":3,"sources":["components/alert.js"],"names":["dmx","Component","constructor","node","parent","this","onTransitionEnd","bind","BaseComponent","call","attributes","show","type","Boolean","default","String","closable","methods","toggle","$node","classList","contains","hide","setType","style","setTextContent","text","render","$parse","setAttribute","add","$closeButton","document","createElement","className","addEventListener","props","setProperty","update","appendChild","remove","removeEventListener","removeProperty","offsetWidth","once","types","map","apply","textContent"],"mappings":";;;;;;AAAAA,IAAAC,UAAA,YAAA,CAEAC,YAAA,SAAAC,EAAAC,GACAC,KAAAC,gBAAAD,KAAAC,gBAAAC,KAAAF,MACAL,IAAAQ,cAAAC,KAAAJ,KAAAF,EAAAC,IAGAM,WAAA,CACAC,KAAA,CACAC,KAAAC,QACAC,SAAA,GAGAF,KAAA,CACAA,KAAAG,OACAD,QAAA,WAGAE,SAAA,CACAJ,KAAAC,QACAC,SAAA,IAIAG,QAAA,CACAC,OAAA,WACAb,KAAAA,KAAAc,MAAAC,UAAAC,SAAA,QAAA,OAAA,WAGAV,KAAA,WACAN,KAAAM,QAGAW,KAAA,WACAjB,KAAAiB,QAGAC,QAAA,SAAAC,GACAnB,KAAAkB,QAAAC,IAGAC,eAAA,SAAAC,GACArB,KAAAoB,eAAAC,KAIAC,OAAA,SAAAxB,GACAE,KAAAc,MAAAhB,EACAE,KAAAuB,SAEAzB,EAAA0B,aAAA,OAAA,SACA1B,EAAAiB,UAAAU,IAAA,SAEAzB,KAAA0B,aAAAC,SAAAC,cAAA,UACA5B,KAAA0B,aAAAF,aAAA,OAAA,UACAxB,KAAA0B,aAAAF,aAAA,aAAA,SACAxB,KAAA0B,aAAAG,UAAA,YACA7B,KAAA0B,aAAAI,iBAAA,QAAA9B,KAAAiB,KAAAf,KAAAF,OAEAA,KAAA+B,MAAAzB,MACAN,KAAAc,MAAAK,MAAAa,YAAA,UAAA,QAGAhC,KAAAiC,OAAA,KAGAA,OAAA,SAAAF,GACAA,EAAAxB,MAAAP,KAAA+B,MAAAxB,MACAP,KAAAkB,QAAAlB,KAAA+B,MAAAxB,MAGAwB,EAAAzB,MAAAN,KAAA+B,MAAAzB,MACAN,KAAAA,KAAA+B,MAAAzB,KAAA,OAAA,UAGAyB,EAAApB,UAAAX,KAAA+B,MAAApB,WACAX,KAAA+B,MAAApB,UACAX,KAAAc,MAAAoB,YAAAlC,KAAA0B,cACA1B,KAAAc,MAAAC,UAAAU,IAAA,uBAEAzB,KAAA0B,aAAAS,SACAnC,KAAAc,MAAAC,UAAAoB,OAAA,wBAKA7B,KAAA,WACAN,KAAAc,MAAAsB,oBAAA,gBAAApC,KAAAC,iBACAD,KAAAc,MAAAK,MAAAkB,eAAA,WACArC,KAAAc,MAAAwB,YACAtC,KAAAc,MAAAC,UAAAU,IAAA,SAGAR,KAAA,WACAjB,KAAAc,MAAAsB,oBAAA,gBAAApC,KAAAC,iBACAD,KAAAc,MAAAC,UAAAC,SAAA,QACAhB,KAAAc,MAAAgB,iBAAA,gBAAA9B,KAAAC,gBAAA,CAAAsC,MAAA,IAEAvC,KAAAc,MAAAK,MAAAa,YAAA,UAAA,QAEAhC,KAAAc,MAAAC,UAAAoB,OAAA,SAGAlC,gBAAA,WACAD,KAAAc,MAAAK,MAAAa,YAAA,UAAA,SAGAd,QAAA,SAAAX,GACA,IAAAiC,EAAA,CAAA,UAAA,YAAA,UAAA,SAAA,UAAA,OAAA,QAAA,QAAAC,IAAA,SAAAlC,GAAA,MAAA,SAAAA,IACAP,KAAAc,MAAAC,UAAAoB,OAAAO,MAAA1C,KAAAc,MAAAC,UAAAyB,GACAxC,KAAAc,MAAAC,UAAAU,IAAA,SAAAlB,IAGAa,eAAA,SAAAC,GACArB,KAAA0B,aAAAS,SACAnC,KAAAc,MAAA6B,YAAAtB,EACArB,KAAA+B,MAAApB,UACAX,KAAAc,MAAAoB,YAAAlC,KAAA0B","file":"../dmxBootstrap5Alert/dmxBootstrap5Alert.js","sourcesContent":["dmx.Component('bs5-alert', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.onTransitionEnd = this.onTransitionEnd.bind(this);\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    attributes: {\r\n        show: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        type: {\r\n            type: String,\r\n            default: 'primary' // primary, secondary, success, danger, warning, info, light, dark\r\n        },\r\n\r\n        closable: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        toggle: function() {\r\n            this[this.$node.classList.contains('show') ? 'hide' : 'show']();\r\n        },\r\n\r\n        show: function() {\r\n            this.show();\r\n        },\r\n\r\n        hide: function() {\r\n            this.hide();\r\n        },\r\n\r\n        setType: function(style) {\r\n            this.setType(style);\r\n        },\r\n\r\n        setTextContent: function(text) {\r\n            this.setTextContent(text)\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        this.$node = node;\r\n        this.$parse();\r\n\r\n        node.setAttribute('role', 'alert');\r\n        node.classList.add('alert');\r\n\r\n        this.$closeButton = document.createElement('button');\r\n        this.$closeButton.setAttribute('type', 'button');\r\n        this.$closeButton.setAttribute('aria-label', 'Close');\r\n        this.$closeButton.className = 'btn-close';\r\n        this.$closeButton.addEventListener('click', this.hide.bind(this));\r\n        \r\n        if (!this.props.show) {\r\n            this.$node.style.setProperty('display', 'none');\r\n        }\r\n\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.type != this.props.type) {\r\n            this.setType(this.props.type);\r\n        }\r\n\r\n        if (props.show != this.props.show) {\r\n            this[this.props.show ? 'show' : 'hide']();\r\n        }\r\n\r\n        if (props.closable != this.props.closable) {\r\n            if (this.props.closable) {\r\n                this.$node.appendChild(this.$closeButton);\r\n                this.$node.classList.add('alert-dismissible');\r\n            } else {\r\n                this.$closeButton.remove();\r\n                this.$node.classList.remove('alert-dismissible');\r\n            }\r\n        }\r\n    },\r\n\r\n    show: function() {\r\n        this.$node.removeEventListener('transitionend', this.onTransitionEnd);\r\n        this.$node.style.removeProperty('display');\r\n        this.$node.offsetWidth;\r\n        this.$node.classList.add('show');\r\n    },\r\n\r\n    hide: function() {\r\n        this.$node.removeEventListener('transitionend', this.onTransitionEnd);\r\n        if (this.$node.classList.contains('fade')) {\r\n            this.$node.addEventListener('transitionend', this.onTransitionEnd, { once: true });\r\n        } else {\r\n            this.$node.style.setProperty('display', 'none');\r\n        }\r\n        this.$node.classList.remove('show');\r\n    },\r\n\r\n    onTransitionEnd: function() {\r\n        this.$node.style.setProperty('display', 'none');\r\n    },\r\n\r\n    setType: function(type) {\r\n        var types = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'].map(function(type) { return 'alert-' + type });\r\n        this.$node.classList.remove.apply(this.$node.classList, types);\r\n        this.$node.classList.add('alert-' + type);\r\n    },\r\n\r\n    setTextContent: function(text) {\r\n        this.$closeButton.remove();\r\n        this.$node.textContent = text;\r\n        if (this.props.closable) {\r\n            this.$node.appendChild(this.$closeButton);\r\n        }\r\n    }\r\n\r\n});\r\n"]}