{"version":3,"sources":["core/oauth2.js","components/oauth2.js","components/google.js"],"names":["dmx","oauth2","sha256","ascii","rightRotate","value","amount","i","j","mathPow","Math","pow","maxWord","result","words","asciiBitLength","hash","h","k","primeCounter","isComposite","candidate","charCodeAt","w","slice","oldHash","w15","w2","a","e","temp1","concat","b","toString","hex2bin","s","l","ret","length","c","parseInt","substr","isNaN","push","String","fromCharCode","apply","dec2hex","dec","dec2bin","arr","Array","from","join","sha256bin","base64_urlencode","str","btoa","replace","random_string","len","Uint8Array","window","crypto","getRandomValues","substring","generate_state","generate_auth_code","generate_code_verifier","generate_code_challenge","verifier","Component","attributes","flow","type","default","scope","username","password","methods","authorize","this","render","params","location","search","URLSearchParams","get","code","state","sessionStorage","getItem","getToken","set","access_token","token_type","expires_in","props","code_verifier","code_challenge","setItem","redirect","response_type","client_id","redirect_uri","getRedirectURI","code_challenge_method","grant_type","post","href","uri","xhr","XMLHttpRequest","addEventListener","JSON","parse","responseText","bind","open","send","queryString","assign","Object","keys","map","key","encodeURIComponent","authEndpoint","tokenEndpoint","revokeEndpoint","initialData","token","error","client","Boolean","prompt","refresh","refresh_token","revoke","validateState","form","document","createElement","setAttribute","generateState","p","generateCodeChallenge","hasOwnProperty","input","appendChild","body","submit","setRequestHeader"],"mappings":"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","file":"../dmxOauth2/dmxOauth2.js","sourcesContent":["// supports all modern browsers (not IE, minimal edge)\r\n// if IE support is required then search for polyfills\r\n// https://caniuse.com/#feat=getrandomvalues\r\n// https://caniuse.com/#feat=typedarrays\r\n// http://kangax.github.io/compat-table/es6/#test-Array.from\r\n\r\ndmx.oauth2 = {\r\n\r\n  sha256: function(ascii) {\r\n    function rightRotate(value, amount) {\r\n      return (value>>>amount) | (value<<(32 - amount));\r\n    }\r\n\r\n    var mathPow = Math.pow;\r\n    var maxWord = mathPow(2, 32);\r\n    var lengthProperty = 'length';\r\n    var i, j; // Used as a counter across the whole file\r\n    var result = '';\r\n\r\n    var words = [];\r\n    var asciiBitLength = ascii[lengthProperty]*8;\r\n\r\n    var hash = dmx.oauth2.sha256.h = dmx.oauth2.sha256.h || [];\r\n    var k = dmx.oauth2.sha256.k = dmx.oauth2.sha256.k || [];\r\n    var primeCounter = k[lengthProperty];\r\n\r\n    var isComposite = {};\r\n    for (var candidate = 2; primeCounter < 64; candidate++) {\r\n      if (!isComposite[candidate]) {\r\n        for (i = 0; i < 313; i += candidate) {\r\n          isComposite[i] = candidate;\r\n        }\r\n        hash[primeCounter] = (mathPow(candidate, 0.5)*maxWord)|0;\r\n        k[primeCounter++] = (mathPow(candidate, 1/3)*maxWord)|0;\r\n      }\r\n    }\r\n\r\n    ascii += '\\x80'; // Append '1' bit (plus zero padding)\r\n    while (ascii[lengthProperty]%64 - 56) ascii += '\\x00'; // More zero padding\r\n    for (i = 0; i < ascii[lengthProperty]; i++) {\r\n      j = ascii.charCodeAt(i);\r\n      if (j>>8) return; // ASCII check: only accept characters in range 0-255\r\n      words[i>>2] |= j << ((3 - i)%4)*8;\r\n    }\r\n    words[words[lengthProperty]] = ((asciiBitLength/maxWord)|0);\r\n    words[words[lengthProperty]] = (asciiBitLength);\r\n\r\n    for (j = 0; j < words[lengthProperty];) {\r\n      var w = words.slice(j, j += 16);\r\n      var oldHash = hash;\r\n      hash = hash.slice(0, 8);\r\n\r\n      for (i = 0; i < 64; i++) {\r\n        var i2 = i + j;\r\n        var w15 = w[i - 15], w2 = w[i - 2];\r\n        var a = hash[0], e = hash[4];\r\n        var temp1 = hash[7] +\r\n          (rightRotate(e, 6) ^ rightRotate(e, 11) ^ rightRotate(e, 25)) + // S1\r\n          ((e&hash[5])^((~e)&hash[6])) + // ch\r\n          k[i] +\r\n          (w[i] = (i < 16) ? w[i] : (\r\n              w[i - 16] +\r\n              (rightRotate(w15, 7) ^ rightRotate(w15, 18) ^ (w15>>>3)) + // s0\r\n              w[i - 7] +\r\n              (rightRotate(w2, 17) ^ rightRotate(w2, 19) ^ (w2>>>10)) // s1\r\n            )|0\r\n          );\r\n        var temp2 = (rightRotate(a, 2) ^ rightRotate(a, 13) ^ rightRotate(a, 22)) + // S0\r\n          ((a&hash[1])^(a&hash[2])^(hash[1]&hash[2])); // maj\r\n\r\n        hash = [(temp1 + temp2)|0].concat(hash);\r\n        hash[4] = (hash[4] + temp1)|0;\r\n      }\r\n\r\n      for (i = 0; i < 8; i++) {\r\n        hash[i] = (hash[i] + oldHash[i])|0;\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < 8; i++) {\r\n      for (j = 3; j + 1; j--) {\r\n        var b = (hash[i]>>(j*8))&255;\r\n        result += ((b < 16) ? 0 : '') + b.toString(16);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  },\r\n\r\n  hex2bin: function(s) {\r\n    var ret = [], i = 0, l;\r\n\r\n    s += '';\r\n\r\n    for (l = s.length; i < l; i += 2) {\r\n      var c = parseInt(s.substr(i, 1), 16);\r\n      var k = parseInt(s.substr(i + 1, 1), 16);\r\n      if (isNaN(c) || isNaN(k)) return false;\r\n      ret.push((c << 4) | k);\r\n    }\r\n\r\n    return String.fromCharCode.apply(String, ret);\r\n  },\r\n\r\n  dec2hex: function(dec) {\r\n    return ('0' + dec.toString(16)).substr(-2);\r\n  },\r\n\r\n  dec2bin: function(arr) {\r\n    return dmx.oauth2.hex2bin(Array.from(arr, dmx.oauth2.dec2hex).join(''));\r\n  },\r\n\r\n  sha256bin: function(ascii) {\r\n    return dmx.oauth2.hex2bin(dmx.oauth2.sha256(ascii));\r\n  },\r\n\r\n  base64_urlencode: function(str) {\r\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n  },\r\n\r\n  random_string: function(len) {\r\n    var arr = new Uint8Array(len);\r\n    window.crypto.getRandomValues(arr);\r\n    var str = dmx.oauth2.base64_urlencode(dmx.oauth2.dec2bin(arr));\r\n    return str.substring(0, len);\r\n  },\r\n\r\n  generate_state: function() {\r\n    return dmx.oauth2.random_string(16);\r\n  },\r\n\r\n  generate_auth_code: function() {\r\n    return dmx.oauth2.random_string(48);\r\n  },\r\n\r\n  generate_code_verifier: function() {\r\n    return dmx.oauth2.random_string(48);\r\n  },\r\n\r\n  generate_code_challenge: function(verifier) {\r\n    return dmx.oauth2.base64_urlencode(dmx.oauth2.sha256bin(verifier));\r\n  }\r\n\r\n};\r\n","dmx.Component('oauth2', {\r\n\r\n  attributes: {\r\n    'flow': {\r\n      type: String,\r\n      default: 'PKCE' // 'Authorization Code', 'PKCE', 'Implicit', 'Password'\r\n    },\r\n\r\n    'authorize-uri': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'token-uri': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'redirect-uri': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'client-id': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'scope': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'username': {\r\n      type: String,\r\n      default: ''\r\n    },\r\n\r\n    'password': {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    authorize: function() {\r\n      this.authorize();\r\n    }\r\n  },\r\n\r\n  render: function() {\r\n    if (window.location.search) {\r\n      var params = new URLSearchParams(location.search.slice(1));\r\n\r\n      if (params.get('code')) {\r\n        var code = params.get('code');\r\n        var state = params.get('state');\r\n\r\n        if (state == sessionStorage.getItem('oauth2-state')) {\r\n          this.getToken(code);\r\n        } else {\r\n          this.set('error', 'Invalid state');\r\n        }\r\n      } else if (params.get('error')) {\r\n        this.set('error', params.get('error_description'));\r\n      }\r\n    }\r\n\r\n    if (window.location.hash) {\r\n      var params = new URLSearchParams(location.hash.slice(1));\r\n\r\n      if (params.get('access_token')) {\r\n        if (state == sessionStorage.getItem('oauth2-state')) {\r\n          this.set('token', {\r\n            access_token: params.get('access_token'),\r\n            token_type: params.get('token_type'),\r\n            expires_in: params.get('expires_in'),\r\n            scope: params.get('scope')\r\n          });\r\n        } else {\r\n          this.set('error', 'Invalid state');\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  authorize: function() {\r\n    if (this.props.flow == 'PKCE') {\r\n      var code_verifier = dmx.oauth2.generate_code_verifier();\r\n      var code_challenge = dmx.oauth2.generate_code_challenge(code_verifier);\r\n      var state = dmx.oauth2.generate_state();\r\n\r\n      // store code_verifier and state\r\n      sessionStorage.setItem('oauth2-code-verifier', code_verifier);\r\n      sessionStorage.setItem('oauth2-state', state);\r\n\r\n      // redirect\r\n      this.redirect(this.props['authorize-uri'], {\r\n        response_type: 'code',\r\n        client_id: this.props['client-id'],\r\n        redirect_uri: this.getRedirectURI(),\r\n        scope: this.props.scope,\r\n        state: state,\r\n        code_challenge: code_challenge,\r\n        code_challenge_method: 'S256'\r\n      });\r\n    } else if (this.props.flow == 'Authorization Code' || this.props.flow == 'Implicit') {\r\n      var state = dmx.oauth2.generate_state();\r\n\r\n      // store state\r\n      sessionStorage.setItem('oauth2-state', state);\r\n\r\n      // redirect\r\n      this.redirect(this.props['authorize-uri'], {\r\n        response_type: 'code',\r\n        client_id: this.props['client-id'],\r\n        redirect_uri: this.getRedirectURI(),\r\n        scope: this.props.scope,\r\n        state: state\r\n      });\r\n    } else if (this.props.flow == 'Password') {\r\n      var params = {\r\n        grant_type: 'password',\r\n        client_id: this.props['client-id'],\r\n        username: this.props.username,\r\n        password: this.props.password\r\n      };\r\n\r\n      this.post(this.props['token-uri'], params);\r\n    }\r\n  },\r\n\r\n  getToken: function(code) {\r\n    var params = {\r\n      grant_type: 'authorization_code',\r\n      client_id: this.props['client-id'],\r\n      redirect_uri: this.getRedirectURI(),\r\n      code: code\r\n    };\r\n\r\n    if (this.props.flow == 'PKCE') {\r\n      params.code_verifier = sessionStorage.getItem('oauth2-code-verifier');\r\n    }\r\n\r\n    this.post(this.props['token-uri'], params);\r\n  },\r\n\r\n  getRedirectURI: function() {\r\n    var redirect_uri = this.props['redirect-uri'];\r\n\r\n    if (!redirect_uri) {\r\n      redirect_uri = location.href.replace(/\\?.*$/, '').replace(/#.*$/, '');\r\n    }\r\n\r\n    return redirect_uri;\r\n  },\r\n\r\n  post: function(uri, params) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.addEventListener('load', (function() {\r\n      this.set('token', JSON.parse(xhr.responseText));\r\n    }).bind(this));\r\n    xhr.open('POST', uri);\r\n    xhr.send(this.queryString(params));\r\n  },\r\n\r\n  redirect: function(uri, params) {\r\n    window.location.assign(uri + '?' + this.queryString(params));\r\n  },\r\n\r\n  queryString: function(params) {\r\n    return Object.keys(params).map(function(key) {\r\n      return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n    }).join('&');\r\n  }\r\n\r\n});\r\n","dmx.Component('google', {\r\n\r\n    // JavaScript Web Apps - https://developers.google.com/identity/protocols/OAuth2UserAgent\r\n    // Mobile & Desktop Apps - https://developers.google.com/identity/protocols/OAuth2InstalledApp\r\n\r\n    authEndpoint: 'https://accounts.google.com/o/oauth2/v2/auth',\r\n    tokenEndpoint: 'https://www.googleapis.com/oauth2/v4/token',\r\n    revokeEndpoint: 'https://accounts.google.com/o/oauth2/v2/revoke',\r\n\r\n    initialData: {\r\n        token: null,\r\n        error: null,\r\n    },\r\n\r\n    attributes: {\r\n        'client': {\r\n            type: String,\r\n            default: 'web' // web or app\r\n        },\r\n\r\n        'client-id': { // required\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'scope': { // required (https://developers.google.com/identity/protocols/googlescopes)\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'include-granted-scopes': {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'login-hint': { // prefill email address of user if known\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        'prompt': {\r\n            /*\r\n                A space-delimited, case-sensitive list of prompts to present the user. If you don't specify this parameter, the user will be prompted only the first time your app requests access. Possible values are:\r\n                none            - Do not display any authentication or consent screens. Must not be specified with other values.\r\n                consent\t        - Prompt the user for consent.\r\n                select_account  - Prompt the user to select an account.\r\n            */\r\n            type: String,\r\n            default: null\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        authorize: function() {\r\n            this.authorize();\r\n        },\r\n\r\n        refresh: function(refresh_token) {\r\n            this.refresh(refresh_token);\r\n        },\r\n\r\n        revoke: function(token) {\r\n            this.revoke(token);\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        // Check answer of google in hash fragment\r\n        if (location.hash) {\r\n            var params = new URLSearchParams(location.hash.slice(1));\r\n\r\n            if (params.get('error')) {\r\n                this.set('error', params.get('error'));\r\n            } else if (params.get('access_token')) {\r\n                if (this.validateState(params.get('state'))) {\r\n                    this.set('token', {\r\n                        access_token: params.get('access_token'),\r\n                        token_type: params.get('token_type'),\r\n                        expires_in: params.get('expires_in'),\r\n                    });\r\n                }\r\n            } else if (params.get('code')) {\r\n                if (this.validateState(params.get('state'))) {\r\n                    this.getToken(params.get('code'));\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    authorize: function() {\r\n        var form = document.createElement('form');\r\n        form.setAttribute('method', 'GET');\r\n        form.setAttribute('action', this.authEndpoint);\r\n\r\n        var params = {\r\n            'client_id': this.props['client-id'],\r\n            'redirect_uri': this.getRedirectURI(),\r\n            'response_type': 'token',\r\n            'scope': this.props['scope'],\r\n            'state': this.generateState(),\r\n        }\r\n\r\n        if (this.props['include-granted-scopes']) {\r\n            params['include_granted_scopes'] = 'true';\r\n        }\r\n\r\n        if (this.props['login-hint']) {\r\n            params['login_hint'] = this.props['login-hint']\r\n        }\r\n\r\n        if (this.props['prompt']) {\r\n            params['prompt'] = this.props['prompt']\r\n        }\r\n\r\n        if (this.props['client'] == 'app') {\r\n            params['code_challenge_method'] = 'S256';\r\n            params['code_challenge'] = this.generateCodeChallenge();\r\n        }\r\n\r\n        for (var p in params) {\r\n            if (!params.hasOwnProperty(p)) continue;\r\n            var input = document.createElement('input');\r\n            input.setAttribute('type', 'hidden');\r\n            input.setAttribute('name', p);\r\n            input.setAttribute('value', params[p]);\r\n            form.appendChild(input);\r\n        }\r\n\r\n        document.body.appendChild(form);\r\n        form.submit();\r\n    },\r\n\r\n    refresh: function(refresh_token) {\r\n        this.post(this.tokenEndpoint, {\r\n            'client_id': this.props['client-id'],\r\n            'refresh_token': refresh_token,\r\n            'grant_type': 'refresh_token'\r\n        });\r\n    },\r\n\r\n    revoke: function(token) {\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        xhr.addEventListener('load', (function() {\r\n            this.set('token', null);\r\n        }).bind(this));\r\n\r\n        xhr.open('GET', this.revokeEndpoint + '?token=' + encodeURIComponent(token));\r\n\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n        xhr.send();\r\n    },\r\n\r\n    getRedirectURI: function() {\r\n        return location.href.replace(/\\?.*$/, '').replace(/#.*$/, '');\r\n    },\r\n\r\n    generateState: function() {\r\n        var state = dmx.oauth2.generate_state();\r\n        sessionStorage.setItem('google-state', state);\r\n        return state;\r\n    },\r\n\r\n    validateState: function(state) {\r\n        if (!state || state != sessionStorage.getItem('google-state')) {\r\n            this.set('error', 'Invalid State');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    generateCodeChallenge: function() {\r\n        var verifier = dmx.oauth2.generate_code_verifier();\r\n        sessionStorage.setItem('google-verifier', verifier);\r\n        return dmx.oauth2.generate_code_challenge(verifier);\r\n    },\r\n\r\n    getToken: function(code) {\r\n        this.post(this.tokenEndpoint, {\r\n            'code': code,\r\n            'client_id': this.props['client-id'],\r\n            'redirect_uri': this.getRedirectURI(),\r\n            'grant_type': 'authorization_code',\r\n            'code_verifier': sessionStorage.getItem('google-verifier'),\r\n        });\r\n    },\r\n\r\n    post: function(uri, params) {\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        xhr.addEventListener('load', (function() {\r\n            this.set('token', JSON.parse(xhr.responseText));\r\n        }).bind(this));\r\n\r\n        xhr.open('POST', uri);\r\n\r\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n        xhr.send(Object.keys(params).map(function(key) {\r\n          return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        }).join('&'));\r\n    },\r\n\r\n});\r\n"]}