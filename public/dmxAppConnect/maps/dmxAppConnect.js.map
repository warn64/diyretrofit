{"version":3,"sources":["core/polyfills.js","core/clone.js","core/equal.js","appConnect.js","core/dom.js","core/parser.js","core/dataScope.js","core/BaseComponent.js","core/pathToRegexp.js","core/hjson.js","core/flow.js","components/app.js","components/form.js","components/formElement.js","components/textarea.js","components/input.js","components/inputFile.js","components/inputFileMultiple.js","components/inputNumber.js","components/button.js","components/radio.js","components/radioGroup.js","components/checkbox.js","components/checkboxGroup.js","components/select.js","components/selectMultiple.js","components/value.js","components/repeat.js","components/repeatItem.js","components/fetch.js","components/serverconnect.js","components/serverconnectForm.js","components/if.js","components/datetime.js","components/apiAction.js","components/apiForm.js","components/array.js","components/group.js","components/flow.js","components/toggle.js","attributes/bind.js","attributes/on.js","attributes/repeat.js","attributes/class.js","attributes/hide.js","attributes/show.js","attributes/html.js","attributes/text.js","attributes/style.js","formatters/global.js","actions/core.js","actions/collections.js","actions/console.js"],"names":["window","Element","prototype","closest","s","i","matches","this","document","ownerDocument","querySelectorAll","el","length","item","parentElement","NodeList","forEach","Array","dmx","toString","Object","hasOwnProperty","reFlags","reTypedType","eq","value","other","assocIndexOf","array","key","getMapData","data","type","isKeyable","map","Hash","entries","index","clear","entry","set","__data__","create","size","delete","result","has","get","HASH_UNDEFINED","undefined","ListCache","pop","splice","push","MapCache","hash","Map","string","Stack","pairs","LARGE_ARRAY_SIZE","getType","call","slice","isArray","isObject","cloneArrayBuffer","arrayBuffer","constructor","byteLength","Uint8Array","cloneTypedArray","typedArray","buffer","byteOffset","initType","object","imageData","regexp","dataView","Ctor","source","exec","lastIndex","width","height","clone","stack","stacked","subValue","add","test","isTypedArray","props","keys","iteratee","arrayEach","objValue","assignValue","equalArrays","arrLength","arrValue","othValue","equal","equalDeep","objIsArr","othIsArr","objType","othType","isSameType","String","from","equalByType","objProps","objLength","objCtor","othCtor","equalObjects","__components","__attributes","before","mount","mounted","__formatters","boolean","global","number","__adapters","__actions","config","mapping","form","input","textarea","select","reIgnoreElement","rePrefixed","reExpression","reExpressionReplace","reToggleAttribute","reDashAlpha","reUppercase","_wr","orig","history","rv","apply","arguments","e","Event","toLowerCase","dispatchEvent","pushState","replaceState","appConnect","node","cb","app","alert","title","onpopstate","state","requestUpdate","onhashchange","App","Component","$update","documentElement","style","visibility","addEventListener","location","protocol","appNode","querySelector","removeAttribute","useHistory","extend","extended","deep","merge","obj","prop","noop","isset","val","v","parseDate","struct","d","offset","n","Date","k","UTC","setHours","setMinutes","setSeconds","arr","hashCode","o","str","JSON","stringify","charCodeAt","Math","abs","randomizer","seed","repeatItems","repeat","items","l","assign","$key","$index","$value","escapeRegExp","replace","validate","checkValidity","validateReset","queue","event","task","shift","fn","context","nextTick","postMessage","updateRequested","Set","idents","debounce","delay","timeout","clearTimeout","setTimeout","cancelAnimationFrame","requestAnimationFrame","throttle","args","keyCodes","bs","tab","enter","esc","space","left","up","right","down","backspace","pause","capslock","escape","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","numlock","scrolllock","semicolon","comma","minus","period","slash","backquote","bracketleft","backslash","bracketright","quote","numpad0","numpad1","numpad2","numpad3","numpad4","numpad5","numpad6","numpad7","numpad8","numpad9","numpadmultiply","numpadadd","numpadsubstract","numpaddivide","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","keya","keyb","keyc","keyd","keye","keyf","keyg","keyh","keyi","keyj","keyk","keyl","keym","keyn","keyo","keyp","keyq","keyr","keyt","keyu","keyv","keyw","keyx","keyy","keyz","eventListener","target","eventType","handler","modifiers","listener","self","currentTarget","ctrl","ctrlKey","alt","altKey","shiftKey","meta","metaKey","originalEvent","nsp","includes","MouseEvent","button","parseInt","button0","button1","button2","button3","button4","KeyboardEvent","keyVal","which","stop","stopPropagation","prevent","preventDefault","$data","pageX","pageY","x","clientX","y","clientY","WheelEvent","deltaX","deltaY","deltaZ","deltaMode","PointerEvent","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","TouchEvent","touchMap","touch","identifier","screenX","screenY","touches","changedTouches","targetTouches","rotation","scale","code","Dom7","nodeType","once","capture","jQuery","passive","createClass","proto","parentClass","Cls","Config","tag","extends","BaseComponent","initialData","attributes","methods","events","parent","Attribute","name","hook","Formatters","Formatter","Adapter","Actions","actions","Action","action","$","selector","len","addClass","className","classList","removeClass","remove","toggleClass","toggle","hasClass","contains","attr","attrs","getAttribute","setAttribute","removeAttr","css","getComputedStyle","getPropertyValue","setProperty","each","callback","append","children","j","appendChild","appendTo","detach","parentNode","removeChild","empty","innerHTML","dom","id","getElementById","query","tagName","elem","createElement","walk","hasChildNodes","childNodes","getAttributes","attribute","specified","substr","argument","split","part","pos","indexOf","fullName","oldNode","newNode","replaceChild","cache","SUPPORTED_TYPES","Boolean","Null","Undefinec","Number","BigInt","RegExp","Blob","File","FileList","ArrayBuffer","ImageBitmap","ImageData","DataView","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","OPERATORS","in","ESCAPE","f","r","t","EXPRESSIONS","a","b","pow","c","RESERVED","scope","null","true","false","_","__dmxScope__","ZERO","getIdents","tokens","match","concat","lexer","filter","token","exp","start","ch","ch2","ch3","op","isQuote","read","readString","isDigid","is","peek","readNumber","isAlpha","readIdent","testRegexp","readRegexp","isWhitespace","Error","chars","isAlphaNum","isExpOperator","hex","fromCharCode","rep","exponent","next","ident","idx","ok","parse","substring","trim","expression","expect","doParse","err","console","error","consume","conditional","middle","logicalAnd","logicalOr","bitwiseXor","bitwiseOr","bitwiseAnd","equality","relational","addictive","bitwiseShift","multiplicative","unary","primary","objectMember","warn","functionCall","objectIndex","func","ctx","argsFn","indexFn","log","random","del","DataScope","$node","bindings","propBindings","listeners","dmxDomId","$parseAttributes","$initialData","render","beforeMount","$mount","$customAttributes","dmxComponent","dmxRendered","destroy","$parse","find","found","__find","__replace","child","$destroy","$type","component","__remove","beforeUpdate","update","updated","beforeDestroy","destroyed","removeEventListener","ComponentEvent","createEvent","initEvent","bubbles","cancelable","defineProperty","defaultPrevented","$addChild","debug","hasAttribute","findIndex","isComponent","__WAPPLER__","nodeValue","$addBinding","oldValue","updatedProps","$updateBindings","$updatePropBindings","$canSkip","binding","didUpdate","callbacks","options","default","isNaN","$propBinding","bind","Function","$event","$originalEvent","method","$placeholder","$destroyChildren","ignoreParents","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","join","res","path","defaultDelimiter","delimiter","whitelist","pathEscaped","m","escaped","prev","group","modifier","optional","pattern","prefix","escapeGroup","escapeString","encode","encodeURIComponent","segment","TypeError","flags","sensitive","strict","endsWith","route","endToken","isEndDelimited","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","Hjson","text","at","escapee","isPunctuatorChar","col","line","charAt","offs","allowML","exitCh","mlString","uffff","triple","indent","skipIndent","skip","keyname","white","tryParseNumber","stopAtNext","leadingZeros","testLeading","isFinite","errorClosingHint","search","report","possibleErr","hint","withoutBraces","isEol","chf","tfnns","checkTrailing","rootValue","Flow","Promise","_execStep","output","run","flow","_exec","then","_each","resolve","reduce","curr","steps","promise","catch","step","disabled","valueOf","onload","ready","load","parseQuery","querystring","p","decodeURIComponent","base","content","decodeURI","pathname","novalidate","submit","direct","_submit","reset","invalid","noValidate","onsubmit","onreset","elm","elements","validity","valid","focus","HTMLFormElement","grecaptcha","updateData","validationMessage","focused","setValue","disable","changed","defaultValue","fields","dirty","activeElement","file","onchange","files","date","lastModified","lastModifiedDate","toISOString","dataUrl","reader","FileReader","readAsDataURL","checked","check","defaultChecked","updateValue","values","radio","isDefault","checkbox","selectedIndex","selectedValue","selectedText","optionText","optionValue","setSelectedIndex","renderOptions","option","selected","defaultSelected","innerText","rerender","prevItems","childKeys","$template","createDocumentFragment","firstChild","_rerender","_willUpdate","_update","_clear","RepeatItem","nextPos","_clone","aStart","bStart","aEnd","bEnd","outer","_moveChild","_insertChild","_removeChild","aLength","bLength","aNullable","sources","fill","moved","synced","keyIndex","seq","_lis","fragment","cloneNode","$nodes","u","il","insertBefore","fetch","status","links","paging","headers","executing","uploading","processing","downloading","uploadProgress","position","total","percent","downloadProgress","lastError","message","response","url","params","noload","ttl","credentials","abort","reload","_reset","done","unauthorized","forbidden","success","upload","ProgressEvent","download","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","qs","startsWith","_url","WebviewProxy","convertProxyUrl","now","created","toUpperCase","FormData","open","header","setRequestHeader","withCredentials","send","_done","responseText","arrHeaders","getAllResponseHeaders","linkHeader","link","linkUrl","qry","acc","info","rel","page","pages","first","last","countHeader","statusText","loaded","lengthComputable","ceil","sockets","eventName","socket","Socket","on","refresh","emit","autosubmit","clearData","dmxExtraData","dmxExtraElements","extra","element","selectedOptions","multiple","setCustomValidity","bootstrap5forms","setBootstrap5Message","bootstrap4forms","setBootstrap4Message","bootstrap3forms","setBootstrapMessage","setErrorMessage","condition","show","hide","nodes","template","_render","_destroy","datetime","interval","utc","timer","year","month","day","hours","minutes","seconds","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dateString","tz","count","newItem","addUniq","insertAfter","replaceAt","removeAt","reverse","sort","$param","running","src","preload","autorun","param","throwError","runSub","textContent","uri","reject","isUpdated","uncheck","nodeName","returnValue","placeholder","createComment","fast","orgValue","orgPriority","getPropertyPriority","property","important","json","subflow","comment","wait","lower","upper","floating","rnd","floor","round","confirm","else","prompt","parentScope","parentOutput","$name","$number","$oddeven","outputFields","field","if","conditions","when","cases","while","loop","switch","case","tryCatch","try","runJS","function","setGlobal","setSession","sessionStorage","setItem","getSession","getItem","removeSession","removeItem","setStorage","localStorage","getStorage","removeStorage","dataType","body","collection","overwrite","row","column","columns","keep","newRow","rename","toFill","rows","startAt","desc","collection1","collection2","matchAll","l2","row2","hasMatch","label","time","timeEnd","groupEnd"],"mappings":"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","file":"../dmxAppConnect.js","sourcesContent":["// https://caniuse.com/element-closest\r\nif (window.Element && !Element.prototype.closest) {\r\n  Element.prototype.closest =\r\n  function(s) {\r\n      var matches = (this.document || this.ownerDocument).querySelectorAll(s),\r\n          i,\r\n          el = this;\r\n      do {\r\n          i = matches.length;\r\n          while (--i >= 0 && matches.item(i) !== el) {};\r\n      } while ((i < 0) && (el = el.parentElement));\r\n      return el;\r\n  };\r\n}\r\n\r\n// https://caniuse.com/mdn-api_nodelist_foreach\r\nif (window.NodeList && !NodeList.prototype.forEach) {\r\n  NodeList.prototype.forEach = Array.prototype.forEach;\r\n}","(function() {\r\n\r\n  window.dmx = window.dmx || {};\r\n\r\n  // unsupported types: ImageBitmap\r\n\r\n  var LARGE_ARRAY_SIZE = 200;\r\n\r\n  var toString = Object.prototype.toString;\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n  var reFlags = /\\w*$/;\r\n  var reTypedType = /^(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array$/;\r\n\r\n  var eq = function(value, other) {\r\n    return value === other || (value !== value && other !== other);\r\n  }\r\n\r\n  var assocIndexOf = function(array, key) {\r\n    var length = array.length;\r\n    while (length--) {\r\n      if (eq(array[length][0], key)) {\r\n        return length;\r\n      }\r\n    }\r\n    return -1;\r\n  };\r\n\r\n  var isKeyable = function(value) {\r\n    var type = typeof value;\r\n    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\r\n      ? (value !== '__proto__')\r\n      : (value === null);\r\n  };\r\n\r\n  var getMapData = function(data, key) {\r\n    return isKeyable(key)\r\n      ? data[typeof key == 'string' ? 'string' : 'hash']\r\n      : data.map;\r\n  };\r\n\r\n  var Hash = function(entries) {\r\n    var index = -1,\r\n        length = entries == null ? 0 : entries.length;\r\n\r\n    this.clear();\r\n    while (++index < length) {\r\n      var entry = entries[index];\r\n      this.set(entry[0], entry[1]);\r\n    }\r\n  }\r\n\r\n  Hash.prototype = {\r\n    clear: function() {\r\n      this.__data__ = Object.create(null);\r\n      this.size = 0;\r\n    },\r\n\r\n    delete: function(key) {\r\n      var result = this.has(key) && delete this.__data__[key];\r\n      this.size -= result ? 1 : 0;\r\n      return result;\r\n    },\r\n\r\n    get: function(key) {\r\n      var result = this.__data__[key];\r\n      return result === HASH_UNDEFINED ? undefined : result;\r\n    },\r\n\r\n    has: function(key) {\r\n      return this.__data__[key] !== undefined;\r\n    },\r\n\r\n    set: function(key, value) {\r\n      this.size += this.has(key) ? 0 : 1;\r\n      this.__data__[key] = value === undefined ? HASH_UNDEFINED : value;\r\n      return this;\r\n    }\r\n  }\r\n\r\n  var ListCache = function(entries) {\r\n    var index = -1;\r\n    var length = entries == null ? 0 : entries.length;\r\n    this.clear();\r\n    while (++index < length) {\r\n      var entry = entries[index];\r\n      this.set(entry[0], entry[1]);\r\n    }\r\n  };\r\n\r\n  ListCache.prototype = {\r\n    clear: function() {\r\n      this.__data__ = [];\r\n      this.size = 0;\r\n    },\r\n\r\n    delete: function(key) {\r\n      var data = this.__data__;\r\n      var index = assocIndexOf(data, key);\r\n      if (index < 0) {\r\n        return false;\r\n      }\r\n      var lastIndex = data.length - 1;\r\n      if (index == lastIndex) {\r\n        data.pop();\r\n      } else {\r\n        data.splice(index, 1);\r\n      }\r\n      --this.size;\r\n      return true;\r\n    },\r\n\r\n    get: function(key) {\r\n      var data = this.__data__;\r\n      var index = assocIndexOf(data, key);\r\n      return index < 0 ? undefined : data[index][1];\r\n    },\r\n\r\n    has: function(key) {\r\n      return assocIndexOf(this.__data__, key) > -1;\r\n    },\r\n\r\n    set: function(key, value) {\r\n      var data = this.__data__;\r\n      var index = assocIndexOf(data, key);\r\n      if (index < 0) {\r\n        ++this.size;\r\n        data.push([key, value]);\r\n      } else {\r\n        data[index][1] = value;\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n\r\n  var MapCache = function(entries) {\r\n    var index = -1;\r\n    var length = entries == null ? 0 : entries.length;\r\n    this.clear();\r\n    while (++index < length) {\r\n      var entry = entries[index];\r\n      this.set(entry[0], entry[1]);\r\n    }\r\n  };\r\n\r\n  MapCache.prototype = {\r\n    clear: function() {\r\n      this.size = 0;\r\n      this.__data__ = {\r\n        'hash': new Hash(),\r\n        'map': new Map(),\r\n        'string': new Hash()\r\n      };\r\n    },\r\n\r\n    delete: function(key) {\r\n      var result = getMapData(this.__data__, key)['delete'](key);\r\n      this.size -= result ? 1 : 0;\r\n      return result;\r\n    },\r\n\r\n    get: function(key) {\r\n      return getMapData(this.__data__, key).get(key);\r\n    },\r\n\r\n    has: function(key) {\r\n      return getMapData(this.__data__, key).has(key);\r\n    },\r\n\r\n    set: function(key, value) {\r\n      var data = getMapData(this.__data__, key);\r\n      var size = data.size;\r\n      data.set(key, value);\r\n      this.size += data.size == size ? 0 : 1;\r\n      return this;\r\n    }\r\n  };\r\n\r\n  var Stack = function(entries) {\r\n    var data = this.__data__ = new ListCache(entries);\r\n    this.size = data.size;\r\n  };\r\n\r\n  Stack.prototype = {\r\n    clear: function() {\r\n      this.__data__ = new ListCache();\r\n      this.size = 0;\r\n    },\r\n\r\n    delete: function(key) {\r\n      var data = this.__data__;\r\n      var result = data['delete'](key);\r\n      this.size = data.size;\r\n      return result;\r\n    },\r\n\r\n    get: function(key) {\r\n      return this.__data__.get(key);\r\n    },\r\n\r\n    has: function(key) {\r\n      return this.__data__.has(key);\r\n    },\r\n\r\n    set: function(key, value) {\r\n      var data = this.__data__;\r\n      if (data instanceof ListCache) {\r\n        var pairs = data.__data__;\r\n        if (pairs.length < LARGE_ARRAY_SIZE - 1) {\r\n          pairs.push([key, value]);\r\n          this.size = ++data.size;\r\n          return this;\r\n        }\r\n        data = this.__data__ = new MapCache(pairs);\r\n      }\r\n      data.set(key, value);\r\n      this.size = data.size;\r\n      return this;\r\n    }\r\n  };\r\n\r\n  var arrayEach = function(array, iteratee) {\r\n    var index = -1;\r\n    var length = array.length;\r\n    while (++index < length) {\r\n      if (iteratee(array[index], index, array) === false) {\r\n        break;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var getType = function(value) {\r\n    return toString.call(value).slice(8, -1);\r\n  };\r\n\r\n  var isArray = function(value) {\r\n    return Array.isArray(value);\r\n  };\r\n\r\n  var isObject = function(value) {\r\n    return value != null && typeof value == 'object'\r\n  };\r\n\r\n  var isTypedArray = function(value) {\r\n    return isObject(value) && reTypedType.test(getType(value));\r\n  };\r\n\r\n  var assignValue = function(object, key, value) {\r\n    // Prototype polution protection\r\n    if (key == '__proto__') return;\r\n\r\n    var objValue = object[key];\r\n\r\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value))) {\r\n      //if (value !== 0 || (1 / value) === (1 / objValue)) {\r\n        object[key] = value;\r\n      //}\r\n    } else if (value === undefined && !(key in object)) {\r\n      object[key] = value;\r\n    }\r\n  };\r\n\r\n  var cloneArrayBuffer = function(arrayBuffer) {\r\n    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\r\n    new Uint8Array(result).set(new Uint8Array(arrayBuffer));\r\n    return result;\r\n  };\r\n\r\n  var cloneDataView = function(dataView) {\r\n    var buffer = cloneArrayBuffer(dataView.buffer);\r\n    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\r\n  };\r\n\r\n  var cloneTypedArray = function(typedArray) {\r\n    var buffer = cloneArrayBuffer(typedArray.buffer);\r\n    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\r\n  };\r\n\r\n  var cloneRegExp = function(regexp) {\r\n    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\r\n    result.lastIndex = regexp.lastIndex;\r\n    return result;\r\n  };\r\n\r\n  var cloneImageData = function(imageData) {\r\n    var data = cloneTypedArray(imageData.data);\r\n    return new imageData.constructor(data, imageData.width, imageData.height);\r\n  }\r\n\r\n  var initArray = function(array) {\r\n    return new array.constructor(array.length);\r\n  };\r\n\r\n  var initType = function(object, type) {\r\n    var Ctor = object.constructor;\r\n\r\n    switch (type) {\r\n      case 'ArrayBuffer':\r\n        return cloneArrayBuffer();\r\n      \r\n      case 'Boolean':\r\n      case 'Date':\r\n        return new Ctor(+object);\r\n\r\n      case 'DataView':\r\n        return cloneDataView(object);\r\n\r\n      case 'Float32Array':\r\n      case 'Float64Array':\r\n      case 'Int8Array':\r\n      case 'Int16Array':\r\n      case 'Int32Array':\r\n      case 'Uint8Array':\r\n      case 'Uint8ClampedArray':\r\n      case 'Uint16Array':\r\n      case 'Uint32Array':\r\n        return cloneTypedArray(object);\r\n\r\n      case 'Map':\r\n      case 'Set':\r\n        return new Ctor();\r\n\r\n      case 'Number':\r\n      case 'String':\r\n        return new Ctor(object);\r\n\r\n      case 'RegExp':\r\n        return cloneRegExp(object);\r\n\r\n      case 'ImageData':\r\n        return cloneImageData(object);\r\n    }\r\n  };\r\n\r\n  var clone = function(value, key, object, stack) {\r\n    var result;\r\n\r\n    if (!isObject(value)) {\r\n      return value;\r\n    }\r\n    \r\n    var type = getType(value);\r\n\r\n    if (isArray(value)) {\r\n      result = initArray(value);\r\n    } else {\r\n      if (type == 'Object') {\r\n        result = {};\r\n      } else {\r\n        result = initType(value, type);\r\n      }\r\n    }  \r\n    \r\n    stack = stack || new Stack();\r\n\r\n    var stacked = stack.get(value);\r\n    if (stacked) {\r\n      return stacked;\r\n    }\r\n    stack.set(value, result);\r\n\r\n    if (type == 'Map') {\r\n      value.forEach(function(subValue, key) {\r\n        result.set(key, clone(subValue, key, value, stack));\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    if (type == 'Set') {\r\n      value.forEach(function(subValue) {\r\n        result.add(clone(subValue, subValue, value, stack));\r\n      });\r\n\r\n      return result;\r\n    }\r\n\r\n    if (isTypedArray(value)) {\r\n      return result;\r\n    }\r\n\r\n    var props = isArray(value) ? undefined : Object.keys(Object(value));\r\n    arrayEach(props || value, function(subValue, key) {\r\n        if (props) {\r\n          key = subValue;\r\n          subValue = value[key];\r\n        }\r\n        assignValue(result, key, clone(subValue, key, value, stack));\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  dmx.clone = clone;\r\n\r\n})();","(function() {\r\n\r\n  window.dmx = window.dmx || {};\r\n\r\n  // TODO: ImageData compare\r\n\r\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n  var reTypedType = /^(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)Array$/;\r\n\r\n  var eq = function(value, other) {\r\n    return value === other || (value !== value && other !== other);\r\n  }\r\n\r\n  var getType = function(value) {\r\n    return toString.call(value).slice(8, -1);\r\n  };\r\n\r\n  var isObject = function(value) {\r\n    return typeof value === 'object' && value !== null;\r\n  };\r\n\r\n  var isTypedArray = function(value) {\r\n    return isObject(value) && reTypedType.test(getType(value));\r\n  };\r\n\r\n  var mapToArray = function(map) {\r\n    var index = -1;\r\n    var result = new Array(map.size);\r\n    map.forEach(function(value, key) {\r\n      result[++index] = [key, value];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  var setToArray = function(set) {\r\n    var index = -1;\r\n    var result = new Array(set.size);\r\n    set.forEach(function(value) {\r\n      result[++index] = value;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  var equalByType = function(object, other, type) {\r\n    switch (type) {\r\n      case 'DataView':\r\n        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\r\n          return false;\r\n        }\r\n        object = object.buffer;\r\n        other = other.buffer;\r\n\r\n      case 'ArrayBuffer':\r\n        if (object.byteLength != other.byteLength || !equal(new Uint8Array(object), new Uint8Array(other))) {\r\n          return false;\r\n        }\r\n        return true;\r\n\r\n      case 'Boolean':\r\n      case 'Date':\r\n      case 'Number':\r\n        return eq(+object, +other);\r\n\r\n      case 'RegExp':\r\n      case 'String':\r\n        return object == String(other);\r\n\r\n      case 'Map':\r\n      case 'Set':\r\n        if (object.size != other.size) return false;\r\n        return equalArrays(Array.from(object), Array.from(other));\r\n    }\r\n  };\r\n\r\n  var equalArrays = function(array, other) {\r\n    var arrLength = array.length;\r\n    var othLength = other.length;\r\n\r\n    if (arrLength != othLength) {\r\n      return false;\r\n    }\r\n\r\n    var index = -1;\r\n\r\n    while (++index < arrLength) {\r\n      var arrValue = array[index];\r\n      var othValue = other[index];\r\n\r\n      if (!(arrValue === othValue || equal(arrValue, othValue))) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  var equalObjects = function(object, other) {\r\n    var objProps = Object.keys(object);\r\n    var objLength = objProps.length;\r\n    var othProps = Object.keys(other);\r\n    var othLength = othProps.length;\r\n\r\n    if (objLength != othLength) {\r\n      return false;\r\n    }\r\n\r\n    var key, index = objLength;\r\n    \r\n    while (index--) {\r\n      key = objProps[index];\r\n      if (!hasOwnProperty.call(other, key)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var result = true;\r\n\r\n    while (++index < objLength) {\r\n      key = objProps[index];\r\n      var objValue = object[key];\r\n      var othValue = other[key];\r\n\r\n      if (!(objValue === othValue || equal(objValue, othValue))) {\r\n        result = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (result) {\r\n      var objCtor = object.constructor;\r\n      var othCtor = other.constructor;\r\n\r\n      if (objCtor != othCtor &&\r\n        ('constructor' in object && 'constructor' in other) &&\r\n        !(typeof objCtor === 'function' && objCtor instanceof objCtor &&\r\n          typeof othCtor === 'function' && othCtor instanceof othCtor)) {\r\n        result = false;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  var equalDeep = function(object, other) {\r\n    var objIsArr = Array.isArray(object);\r\n    var othIsArr = Array.isArray(other);\r\n    var objType = objIsArr ? 'Array' : getType(object);\r\n    var othType = othIsArr ? 'Array' : getType(other);\r\n    var objIsObj = objType == 'Object';\r\n    var othIsObj = othType == 'Object';\r\n    var isSameType = objType == othType;\r\n\r\n    if (isSameType && !objIsObj) {\r\n      return (objIsArr || isTypedArray(object))\r\n        ? equalArrays(object, other)\r\n        : equalByType(object, other, objType);\r\n    }\r\n\r\n    if (!isSameType) {\r\n      return false;\r\n    }\r\n\r\n    return equalObjects(object, other);\r\n  };\r\n\r\n  var equal = function(value, other) {\r\n    if (value === other) {\r\n      return true;\r\n    }\r\n    if (value == null || other == null || (!isObject(value) && !isObject(other))) {\r\n      return value !== value && other !== other;\r\n    }\r\n    return equalDeep(value, other);\r\n  };\r\n\r\n  dmx.equal = equal;\r\n\r\n})();","window.dmx = window.dmx || {};\r\n\r\ndmx.__components = {};\r\ndmx.__attributes = {\r\n    before: {},\r\n    mount: {},\r\n    mounted: {}\r\n};\r\ndmx.__formatters = {\r\n    boolean: {},\r\n    global: {},\r\n    string: {},\r\n    number: {},\r\n    object: {},\r\n    array: {}\r\n};\r\ndmx.__adapters = {};\r\ndmx.__actions = {};\r\n\r\n// default options\r\ndmx.config = {\r\n    mapping: {\r\n        'form': 'form',\r\n        'button, input[type=button], input[type=submit], input[type=reset]': 'button',\r\n        'input[type=radio]': 'radio',\r\n        'input[type=checkbox]': 'checkbox',\r\n        'input[type=file][multiple]': 'input-file-multiple',\r\n        'input[type=file]': 'input-file',\r\n        //'input[type=number]': 'input-number',\r\n        'input': 'input',\r\n        'textarea': 'textarea',\r\n        'select[multiple]': 'select-multiple',\r\n        'select': 'select',\r\n        '.checkbox-group': 'checkbox-group',\r\n        '.radio-group': 'radio-group'\r\n    }\r\n};\r\n\r\ndmx.reIgnoreElement = /^(script|style)$/i;\r\ndmx.rePrefixed = /^dmx-/i;\r\ndmx.reExpression = /\\{\\{(.+?)\\}\\}/;\r\ndmx.reExpressionReplace = /\\{\\{(.+?)\\}\\}/g;\r\ndmx.reToggleAttribute = /^(checked|selected|disabled|required|hidden|async|autofocus|autoplay|default|defer|multiple|muted|novalidate|open|readonly|reversed|scoped)$/i;\r\ndmx.reDashAlpha = /-([a-z])/g;\r\ndmx.reUppercase = /[A-Z]/g;\r\n\r\n// Trigger event on postState and replaceState\r\n// https://stackoverflow.com/questions/5129386/how-to-detect-when-history-pushstate-and-history-replacestate-are-used/25673911#25673911\r\n(function() {\r\n    const _wr = function(type) {\r\n        const orig = history[type];\r\n\r\n        return function() {\r\n            const rv = orig.apply(this, arguments);\r\n            const e = new Event(type.toLowerCase());\r\n            e.arguments = arguments;\r\n            window.dispatchEvent(e);\r\n            return rv;\r\n        };\r\n    };\r\n\r\n    history.pushState = _wr('pushState');\r\n    history.replaceState = _wr('replaceState');\r\n})();\r\n\r\ndmx.appConnect = function(node, cb) {\r\n    if (dmx.app) {\r\n        return alert('App already running!');\r\n    }\r\n\r\n    if (!node) {\r\n        if (cb) cb();\r\n        return;\r\n    }\r\n\r\n    history.replaceState({ title: document.title }, '');\r\n\r\n    window.onpopstate = function(e) {\r\n        if (e.state && e.state.title) {\r\n            document.title = e.state.title;\r\n        }\r\n        dmx.requestUpdate();\r\n    };\r\n\r\n    window.onhashchange = function() {\r\n        dmx.requestUpdate();\r\n    };\r\n\r\n    var App = dmx.Component('app');\r\n\r\n    dmx.app = new App(node, dmx.global);\r\n    dmx.app.$update();\r\n    if (cb) cb();\r\n};\r\n\r\ndocument.documentElement.style.visibility = 'hidden';\r\n\r\ndocument.addEventListener(document.location.protocol == 'app:' ? 'deviceready' : 'DOMContentLoaded', function() {\r\n    var appNode = document.querySelector(':root[dmx-app], [dmx-app], :root[is=\"dmx-app\"], [is=\"dmx-app\"]');\r\n\r\n    dmx.appConnect(appNode, function() {\r\n        document.documentElement.style.visibility = '';\r\n        appNode && appNode.removeAttribute('dmx-app');\r\n    });\r\n});\r\n\r\ndmx.useHistory = window.history && window.history.pushState;\r\n\r\ndmx.extend = function () {\r\n    // Variables\r\n    var extended = {};\r\n    var deep = false;\r\n    var i = 0;\r\n    var length = arguments.length;\r\n\r\n    // Check if a deep merge\r\n    if ( Object.prototype.toString.call( arguments[0] ) === '[object Boolean]' ) {\r\n        deep = arguments[0];\r\n        i++;\r\n    }\r\n\r\n    // Merge the object into the extended object\r\n    var merge = function (obj) {\r\n        for ( var prop in obj ) {\r\n            // Prototype polution protection\r\n            if (prop == '__proto__') continue;\r\n\r\n            if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\r\n                // If deep merge and property is an object, merge properties\r\n                if ( deep && Object.prototype.toString.call(obj[prop]) === '[object Object]' ) {\r\n                    extended[prop] = dmx.extend( true, extended[prop], obj[prop] );\r\n                } else {\r\n                    if (obj[prop] != null) {\r\n                        extended[prop] = obj[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Loop through each object and conduct a merge\r\n    for ( ; i < length; i++ ) {\r\n        var obj = arguments[i];\r\n        merge(obj);\r\n    }\r\n\r\n    return extended;\r\n};\r\n\r\ndmx.noop = function() {};\r\n\r\ndmx.isset = function(val) {\r\n    return v !== undefined;\r\n};\r\n\r\ndmx.parseDate = function(obj) {\r\n    if (typeof obj == 'string') {\r\n        var d, struct, offset = 0, n = [1,4,5,6,7,10,11];\r\n\r\n        if (obj.toLowerCase() == 'now') {\r\n            return new Date();\r\n        }\r\n\r\n        if ((struct = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:[T ](\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/.exec(obj))) {\r\n            for (var i = 0, k; (k = n[i]); ++i) {\r\n                struct[k] = +struct[k] || 0;\r\n            }\r\n\r\n            struct[2] = (+struct[2] || 1) - 1;\r\n            struct[3] = +struct[3] || 1;\r\n\r\n            if (struct[8] === undefined) {\r\n                return new Date(struct[1], struct[2], struct[3], struct[4], struct[5], struct[6], struct[7]);\r\n            } else {\r\n                if (struct[8] !== 'Z' && struct[9] !== undefined) {\r\n                    offset = struct[10] * 60 + struct[11];\r\n                    if (struct[9] === '+') offset = 0 - offset;\r\n                }\r\n\r\n                return new Date(Date.UTC(struct[1], struct[2], struct[3], struct[4], struct[5] + offset, struct[6], struct[7]));\r\n            }\r\n        } else if ((struct = /^(\\d{2}):(\\d{2})(?::(\\d{2}))?$/.exec(obj))) {\r\n            var d = new Date();\r\n            d.setHours(+struct[1] || 0);\r\n            d.setMinutes(+struct[2] || 0);\r\n            d.setSeconds(+struct[3] || 0);\r\n            return d;\r\n        }\r\n\r\n        return new Date(obj);\r\n    } else if (typeof obj == 'number') {\r\n        return new Date(obj * 1000);\r\n    } else {\r\n        return new Date('');\r\n    }\r\n};\r\n\r\ndmx.array = function(arr) {\r\n    if (arr == null) return [];\r\n    return Array.prototype.slice.call(arr);\r\n};\r\n\r\ndmx.hashCode = function(o) {\r\n    if (o == null) return 0;\r\n    var str = JSON.stringify(o);\r\n    var i, hash = 0;\r\n    for (i = 0; i < str.length; i++) {\r\n        hash = ((hash << 5) - hash) + str.charCodeAt(i);\r\n        hash = hash & hash;\r\n    }\r\n    return Math.abs(hash);\r\n};\r\n\r\ndmx.randomizer = function(seed) {\r\n    seed = +seed || 0;\r\n    return function() {\r\n        seed = (seed * 9301 + 49297) % 233280;\r\n        return seed / 233280;\r\n    };\r\n};\r\n\r\ndmx.repeatItems = function(repeat) {\r\n    const items = [];\r\n\r\n    if (repeat) {\r\n        if (typeof repeat == 'object') {\r\n            if (Array.isArray(repeat)) {\r\n                for (let i = 0, l = repeat.length; i < l; i++) {\r\n                    const item = dmx.clone(repeat[i]);\r\n                    items.push(Object.assign({}, item, {\r\n                        $key: i,\r\n                        $index: i,\r\n                        $value: item\r\n                    }));\r\n                }\r\n            } else {\r\n                let i = 0;\r\n                for (const key in repeat) {\r\n                    if (repeat.hasOwnProperty(key)) {\r\n                        const item = dmx.clone(repeat[key]);\r\n                        items.push(Object.assign({}, item, {\r\n                            $key: key,\r\n                            $index: i,\r\n                            $value: item\r\n                        }));\r\n                        i++;\r\n                    }\r\n                }\r\n            }\r\n        } else if (typeof repeat == 'number') {\r\n            for (let n = 0; n < repeat; n++) {\r\n                items.push({\r\n                    $key: String(n),\r\n                    $index: n,\r\n                    $value: n + 1\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return items;\r\n};\r\n\r\ndmx.escapeRegExp = function(val) {\r\n    // https://github.com/benjamingr/RegExp.escape\r\n    return val.replace(/[\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n};\r\n\r\ndmx.validate = function(node) {\r\n    return node.checkValidity();\r\n};\r\n\r\ndmx.validateReset = function(node) {\r\n    // reset validation?\r\n};\r\n\r\n(() => {\r\n    const queue = [];\r\n\r\n    window.addEventListener('message', event => {\r\n        if (event.source === window && event.data === 'dmxNextTick' && queue.length) {\r\n            const task = queue.shift();\r\n            task.fn.call(task.context);\r\n        }\r\n    });\r\n\r\n    dmx.nextTick = (fn, context) => {\r\n        queue.push({ fn, context });\r\n        window.postMessage('dmxNextTick', '*');\r\n    }\r\n})();\r\n\r\n/*\r\n// promises are to fast, need more time before executing\r\ndmx.nextTick = function(fn, context) {\r\n    return Promise.resolve().then(fn.bind(context));\r\n}\r\n*/\r\n\r\ndmx.requestUpdate = function() {\r\n    var updateRequested = false;\r\n    var props = new Set();\r\n\r\n    return function(prop) {\r\n        props.add(prop || '*');\r\n\r\n        if (!updateRequested) {\r\n            updateRequested = true;\r\n\r\n            dmx.nextTick(function() {\r\n                updateRequested = false;\r\n                if (dmx.app) {\r\n                    // clone props\r\n                    var idents = new Set(props);\r\n                    // we need to clear props before updated because new requestUpdate can be called inside the $update\r\n                    props.clear();\r\n                    // run update\r\n                    dmx.app.$update(idents);\r\n                }\r\n            });\r\n        }\r\n    };\r\n}();\r\n\r\ndmx.debounce = function(fn, delay) {\r\n    let timeout;\r\n\r\n    return function() {\r\n        const cb = () => {\r\n            fn.apply(this, arguments);\r\n        };\r\n\r\n        if (delay) {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(cb, delay);\r\n        } else {\r\n            cancelAnimationFrame(timeout);\r\n            timeout = requestAnimationFrame(cb);\r\n        }\r\n    };\r\n};\r\n\r\ndmx.throttle = function(fn, delay) {\r\n    let throttle = false;\r\n    let args;\r\n\r\n    return function() {\r\n        args = Array.from(arguments);\r\n\r\n        if (!throttle) {\r\n            const cb = () => {\r\n                throttle = false;\r\n                if (args) fn.apply(this, args);\r\n            };\r\n\r\n            fn.apply(this, args);\r\n\r\n            args = undefined;\r\n            throttle = true;\r\n\r\n            if (delay) {\r\n                setTimeout(cb, delay);\r\n            } else {\r\n                requestAnimationFrame(cb);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\ndmx.keyCodes = {\r\n    'bs': 8,\r\n    'tab': 9,\r\n    'enter': 13,\r\n    'esc': 27,\r\n    'space': 32,\r\n    'left': 37,\r\n    'up': 38,\r\n    'right': 39,\r\n    'down': 40,\r\n    'delete': 46,\r\n\r\n    'backspace': 8,\r\n    'pause': 19,\r\n    'capslock': 20,\r\n    'escape': 27,\r\n    'pageup': 33,\r\n    'pagedown': 34,\r\n    'end': 35,\r\n    'home': 36,\r\n    'arrowleft': 37,\r\n    'arrowup': 38,\r\n    'arrowright': 39,\r\n    'arrowdown': 40,\r\n    'insert': 45,\r\n    'numlock': 144,\r\n    'scrolllock': 145,\r\n    'semicolon': 186,\r\n    'equal': 187,\r\n    'comma': 188,\r\n    'minus': 189,\r\n    'period': 190,\r\n    'slash': 191,\r\n    'backquote': 192,\r\n    'bracketleft': 219,\r\n    'backslash': 220,\r\n    'bracketright': 221,\r\n    'quote': 222,\r\n\r\n    'numpad0': 96,\r\n    'numpad1': 97,\r\n    'numpad2': 98,\r\n    'numpad3': 99,\r\n    'numpad4': 100,\r\n    'numpad5': 101,\r\n    'numpad6': 102,\r\n    'numpad7': 103,\r\n    'numpad8': 104,\r\n    'numpad9': 105,\r\n    'numpadmultiply': 106,\r\n    'numpadadd': 107,\r\n    'numpadsubstract': 109,\r\n    'numpaddivide': 111,\r\n\r\n    'f1': 112,\r\n    'f2': 113,\r\n    'f3': 114,\r\n    'f4': 115,\r\n    'f5': 116,\r\n    'f6': 117,\r\n    'f7': 118,\r\n    'f8': 119,\r\n    'f9': 120,\r\n    'f10': 121,\r\n    'f11': 122,\r\n    'f12': 123,\r\n\r\n    'digit0': 48,\r\n    'digit1': 49,\r\n    'digit2': 50,\r\n    'digit3': 51,\r\n    'digit4': 52,\r\n    'digit5': 53,\r\n    'digit6': 54,\r\n    'digit7': 55,\r\n    'digit8': 56,\r\n    'digit9': 57,\r\n\r\n    'keya': [65, 97],\r\n    'keyb': [66, 98],\r\n    'keyc': [67, 99],\r\n    'keyd': [68, 100],\r\n    'keye': [69, 101],\r\n    'keyf': [70, 102],\r\n    'keyg': [71, 103],\r\n    'keyh': [72, 104],\r\n    'keyi': [73, 105],\r\n    'keyj': [74, 106],\r\n    'keyk': [75, 107],\r\n    'keyl': [76, 108],\r\n    'keym': [77, 109],\r\n    'keyn': [78, 110],\r\n    'keyo': [79, 111],\r\n    'keyp': [80, 112],\r\n    'keyq': [81, 113],\r\n    'keyr': [82, 114],\r\n    'keys': [83, 115],\r\n    'keyt': [84, 116],\r\n    'keyu': [85, 117],\r\n    'keyv': [86, 118],\r\n    'keyw': [87, 119],\r\n    'keyx': [88, 120],\r\n    'keyy': [89, 121],\r\n    'keyz': [90, 122]\r\n};\r\n\r\ndmx.eventListener = function(target, eventType, handler, modifiers) {\r\n    let timeout, throttle;\r\n    \r\n    const listener = function(event) {\r\n        if (modifiers.self && event.target !== event.currentTarget) return;\r\n        if (modifiers.ctrl && !event.ctrlKey) return;\r\n        if (modifiers.alt && !event.altKey) return;\r\n        if (modifiers.shift && !event.shiftKey) return;\r\n        if (modifiers.meta && !event.metaKey) return;\r\n\r\n        if ((event.originalEvent || event).nsp && !Object.keys(modifiers).includes((event.originalEvent || event).nsp)) {\r\n            return;\r\n        }\r\n\r\n        if ((event.originalEvent || event) instanceof MouseEvent) {\r\n            if (modifiers.button != null && event.button != (parseInt(modifiers.button, 10) || 0)) return;\r\n            if (modifiers.button0 && event.button != 0) return;\r\n            if (modifiers.button1 && event.button != 1) return;\r\n            if (modifiers.button2 && event.button != 2) return;\r\n            if (modifiers.button3 && event.button != 3) return;\r\n            if (modifiers.button4 && event.button != 4) return;\r\n        }\r\n\r\n        if ((event.originalEvent || event) instanceof KeyboardEvent) {\r\n            var keys = [];\r\n\r\n            Object.keys(modifiers).forEach(function(key) {\r\n                var keyVal = parseInt(key, 10);\r\n\r\n                if (keyVal) {\r\n                    keys.push(keyVal);\r\n                } else if (dmx.keyCodes[key]) {\r\n                    keys.push(dmx.keyCodes[key]);\r\n                }\r\n            });\r\n\r\n            for (var i = 0; i < keys.length; i++) {\r\n                if (Array.isArray(keys[i])) {\r\n                    if (!keys[i].includes(event.which)) return;\r\n                } else if (event.which !== keys[i]) return;\r\n            }\r\n        }\r\n\r\n        if (modifiers.stop) event.stopPropagation();\r\n        if (modifiers.prevent) event.preventDefault();\r\n        \r\n        if (event.originalEvent) event = event.originalEvent;\r\n\r\n        if (!event.$data) event.$data = {};\r\n\r\n        if (event instanceof MouseEvent) {\r\n            event.$data.altKey = event.altKey;\r\n            event.$data.ctrlKey = event.ctrlKey;\r\n            event.$data.metaKey = event.metaKey;\r\n            event.$data.shiftKey = event.shiftKey;\r\n            event.$data.pageX = event.pageX;\r\n            event.$data.pageY = event.pageY;\r\n            event.$data.x = event.x || event.clientX;\r\n            event.$data.y = event.y || event.clientY;\r\n            event.$data.button = event.button;\r\n        }\r\n\r\n        if (event instanceof WheelEvent) {\r\n            event.$data.deltaX = event.deltaX;\r\n            event.$data.deltaY = event.deltaY;\r\n            event.$data.deltaZ = event.deltaZ;\r\n            event.$data.deltaMode = event.deltaMode;\r\n        }\r\n\r\n        if (window.PointerEvent && event instanceof PointerEvent) {\r\n            event.$data.pointerId = event.pointerId;\r\n            event.$data.width = event.width;\r\n            event.$data.height = event.height;\r\n            event.$data.pressure = event.pressure;\r\n            event.$data.tangentialPressure = event.tangentialPressure;\r\n            event.$data.tiltX = event.tiltX;\r\n            event.$data.tiltY = event.tiltY;\r\n            event.$data.twist = event.twist;\r\n            event.$data.pointerType = event.pointerType;\r\n            event.$data.isPrimary = event.isPrimary;\r\n        }\r\n\r\n        if (window.TouchEvent && event instanceof TouchEvent) {\r\n            const touchMap = touch => ({\r\n                identifier: touch.identifier,\r\n                screenX: touch.screenX,\r\n                screenY: touch.screenY,\r\n                clientX: touch.clientX,\r\n                clientY: touch.clientY,\r\n                pageX: touch.pageX,\r\n                pageY: touch.pageY\r\n            });\r\n\r\n            event.$data.altKey = event.altKey;\r\n            event.$data.ctrlKey = event.ctrlKey;\r\n            event.$data.metaKey = event.metaKey;\r\n            event.$data.shiftKey = event.shiftKey;\r\n            event.$data.touches = Array.from(event.touches).map(touchMap);\r\n            event.$data.changedTouches = Array.from(event.changedTouches).map(touchMap);\r\n            event.$data.targetTouches = Array.from(event.targetTouches).map(touchMap);\r\n            event.$data.rotation = event.rotation;\r\n            event.$data.scale = event.scale;\r\n        }\r\n\r\n        if (event instanceof KeyboardEvent) {\r\n            event.$data.altKey = event.altKey;\r\n            event.$data.ctrlKey = event.ctrlKey;\r\n            event.$data.metaKey = event.metaKey;\r\n            event.$data.shiftKey = event.shiftKey;\r\n            event.$data.location = event.location;\r\n            event.$data.repeat = event.repeat;\r\n            event.$data.code = event.code;\r\n            event.$data.key = event.key;\r\n        }\r\n\r\n        if (modifiers.debounce) {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(() => {\r\n                handler.apply(this, arguments);\r\n            }, parseInt(modifiers.debounce, 10) || 0);\r\n        } else if (modifiers.throttle) {\r\n            if (!throttle) {\r\n                throttle = true;\r\n                handler.apply(this, arguments);\r\n                setTimeout(() => {\r\n                    throttle = false\r\n                }, parseInt(modifiers.throttle, 10) || 0);\r\n            }\r\n        } else {\r\n            return handler.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    modifiers = modifiers || {};\r\n\r\n    if (window.Dom7 && target.nodeType === 1) {\r\n        Dom7(target)[modifiers.once ? 'once' : 'on'](eventType.replace(/-/g, '.'), listener, !!modifiers.capture);\r\n    } else if (window.jQuery && !modifiers.capture) {\r\n        jQuery(target)[modifiers.once ? 'one' : 'on'](eventType.replace(/-/g, '.'), listener);\r\n    } else {\r\n        target.addEventListener(eventType.replace(/-/g, '.'), listener, {\r\n            capture: !!modifiers.capture,\r\n            once: !!modifiers.once,\r\n            passive: !!modifiers.passive\r\n        });\r\n    }\r\n};\r\n\r\ndmx.createClass = function(proto, parentClass) {\r\n    var Cls = function() {\r\n        if (proto.constructor) {\r\n            proto.constructor.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    if (parentClass && parentClass.prototype) {\r\n        Cls.prototype = Object.create(parentClass.prototype);\r\n    }\r\n\r\n    Object.assign(Cls.prototype, proto);\r\n\r\n    Cls.prototype.constructor = Cls;\r\n\r\n    return Cls;\r\n};\r\n\r\ndmx.Config = function(config) {\r\n    Object.assign(dmx.config, config);\r\n};\r\n\r\ndmx.Component = function(tag, proto) {\r\n    if (proto) {\r\n        var parentClass = dmx.Component(proto.extends) || dmx.BaseComponent;\r\n\r\n        proto.initialData = Object.assign({}, parentClass.prototype.initialData, proto.initialData);\r\n        proto.attributes = Object.assign({}, parentClass.prototype.attributes, proto.attributes);\r\n        proto.methods = Object.assign({}, parentClass.prototype.methods, proto.methods);\r\n        proto.events = Object.assign({}, parentClass.prototype.events, proto.events);\r\n\r\n        if (!proto.hasOwnProperty('constructor')) {\r\n            proto.constructor = function(node, parent) {\r\n                parentClass.call(this, node, parent);\r\n            };\r\n        }\r\n\r\n        proto.type = tag;\r\n\r\n        var Component = dmx.createClass(proto, parentClass);\r\n        Component.extends = proto.extends;\r\n\r\n        dmx.__components[tag] = Component;\r\n    }\r\n\r\n    return dmx.__components[tag];\r\n};\r\n\r\ndmx.Attribute = function(name, hook, fn) {\r\n    if (!dmx.__attributes[hook]) {\r\n        dmx.__attributes[hook] = {};\r\n    }\r\n    dmx.__attributes[hook][name] = fn;\r\n};\r\n\r\ndmx.Formatters = function(type, o) {\r\n    if (!dmx.__formatters[type]) {\r\n        dmx.__formatters[type] = {};\r\n    }\r\n    for (var name in o) {\r\n        if (o.hasOwnProperty(name)) {\r\n            dmx.__formatters[type][name] = o[name];\r\n        }\r\n    }\r\n};\r\n\r\ndmx.Formatter = function(type, name, fn) {\r\n    if (!dmx.__formatters[type]) {\r\n        dmx.__formatters[type] = {};\r\n    }\r\n    dmx.__formatters[type][name] = fn;\r\n};\r\n\r\ndmx.Adapter = function(type, name, fn) {\r\n    if (!dmx.__adapters[type]) {\r\n        dmx.__adapters[type] = {};\r\n    }\r\n\r\n    if (fn) {\r\n        dmx.__adapters[type][name] = fn;\r\n    }\r\n\r\n    return dmx.__adapters[type][name];\r\n};\r\n\r\ndmx.Actions = function(actions) {\r\n    for (var name in actions) {\r\n        if (actions.hasOwnProperty(name)) {\r\n            dmx.__actions[name] = actions[name];\r\n        }\r\n    }\r\n}\r\n\r\ndmx.Action = function(name, action) {\r\n    dmx.__actions[name] = action;\r\n};\r\n","(function() {\r\n\r\n    var $ = function(selector) {\r\n        if (!(this instanceof $)) {\r\n            return new $(selector);\r\n        }\r\n        if (selector instanceof $) {\r\n            return selector;\r\n        }\r\n        if (!selector) return this;\r\n        var len = selector.length;\r\n        if (selector.nodeType) {\r\n            this[0] = selector;\r\n            this.length = 1;\r\n        } else if (typeof selector == 'string') {\r\n            return $(document.querySelectorAll(selector));\r\n        } else if (len) {\r\n            for (var i = 0; i < len; i++) {\r\n                if (selector[i] && selector[i].nodeType) {\r\n                    this[this.length] = selector[i];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n\r\n    $.prototype = {\r\n        constructor: $,\r\n        length: 0,\r\n\r\n        addClass: function(className) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                this[i].classList.add(className);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        removeClass: function(className) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                this[i].classList.remove(className);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        toggleClass: function(className) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                this[i].classList.toggle(className);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        hasClass: function(className) {\r\n            if (!this[0]) return false;\r\n            return this[0].classList.contains(className);\r\n        },\r\n\r\n        attr: function(attrs, value) {\r\n            if (arguments.length === 1 && typeof attrs === 'string') {\r\n                return this[0] && this[0].getAttribute(attrs);\r\n            } else {\r\n                for (var i = 0; i < this.length; i++) {\r\n                    if (arguments.length === 2) {\r\n                        this[i].setAttribute(attrs, value);\r\n                    } else {\r\n                        for (var attr in attrs) {\r\n                            if (attrs.hasOwnProperty(attr)) {\r\n                                this[i].setAttribute(attr, attrs[attr]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        removeAttr: function(attr) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                this[i].removeAttribute(attr);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        prop: function(props, value) {\r\n            if (arguments.length === 1 && typeof props === 'string') {\r\n                return this[0] && this[0][props];\r\n            } else {\r\n                for (var i = 0; i < this.length; i++) {\r\n                    if (arguments.length === 2) {\r\n                        this[i][props] = value;\r\n                    } else {\r\n                        for (var prop in props) {\r\n                            if (props.hasOwnProperty(prop)) {\r\n                                this[i][prop] = props[prop];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        css: function(props, value) {\r\n            if (arguments.length === 1 && typeof props === 'string') {\r\n                return this[0] && window.getComputedStyle(this[0], null).getPropertyValue(props);\r\n            } else {\r\n                for (var i = 0; i < this.length; i++) {\r\n                    if (arguments.length === 2) {\r\n                        this[i].style.setProperty(props, value);\r\n                    } else {\r\n                        for (var prop in props) {\r\n                            if (props.hasOwnProperty(prop)) {\r\n                                this[i].style.setProperty(prop, props[prop]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        each: function(callback, context) {\r\n            if (!callback) return this;\r\n            for (var i = 0; i < this.length; i++) {\r\n                if (callback.call(context || this[i], i, this[i]) === false) {\r\n                    return this;\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        append: function() {\r\n            for (var i = 0; i < arguments.length; i++) {\r\n                var children = $(arguments[i]);\r\n\r\n                for (var j = 0; j < children.length; j++) {\r\n                    this[0].appendChild(children[j]);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        appendTo: function(parent) {\r\n            $(parent).append(this);\r\n            return this;\r\n        },\r\n\r\n        detach: function() {\r\n            for (var i = 0; i < this.length; i++) {\r\n                if (this[i].parentNode) {\r\n                    this[i].parentNode.removeChild(this[i]);\r\n                }\r\n            }\r\n            return this;\r\n        },\r\n\r\n        empty: function() {\r\n            for (var i = 0; i < this.length; i++) {\r\n                this[i].innerHTML = '';\r\n            }\r\n            return this;\r\n        }\r\n    };\r\n\r\n    dmx.dom = {\r\n\r\n        get: function(id) {\r\n            return $(document.getElementById(id));\r\n        },\r\n\r\n        select: function(query) {\r\n            return $(query);\r\n        },\r\n\r\n        create: function(tagName) {\r\n            var elem = document.createElement(tagName);\r\n            return $(elem);\r\n        },\r\n\r\n        contains: function(node) {\r\n            return document.documentElement.contains(node);\r\n        },\r\n\r\n        walk: function(node, fn, context) {\r\n            if (node) {\r\n                if (fn.call(context, node) === false) {\r\n                    // stop going deeper when callback returns false\r\n                    return;\r\n                } else if (node.hasChildNodes()) {\r\n                    Array.prototype.slice.call(node.childNodes, 0).forEach(function(node) {\r\n                        dmx.dom.walk(node, fn, context);\r\n                    });\r\n                }\r\n            }\r\n        },\r\n\r\n        getAttributes: function(node) {\r\n            var attributes = [];\r\n\r\n            if (node.nodeType == 1) {\r\n                for (var i = 0; i < node.attributes.length; i++) {\r\n                    var attribute = node.attributes[i];\r\n\r\n                    if (attribute && attribute.specified && dmx.rePrefixed.test(attribute.name)) {\r\n                        var name = attribute.name.substr(4);\r\n                        var argument = null;\r\n                        var modifiers = {};\r\n\r\n                        name.split('.').forEach(function(part, i) {\r\n                            if (i === 0) {\r\n                                name = part;\r\n                            } else {\r\n                                var pos = part.indexOf(':');\r\n                                if (pos > 0) {\r\n                                    modifiers[part.substr(0, pos)] = part.substr(pos + 1);\r\n                                } else {\r\n                                    modifiers[part] = true;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        var pos = name.indexOf(':');\r\n                        if (pos > 0) {\r\n                            argument = name.substr(pos + 1);\r\n                            name = name.substr(0, pos);\r\n                        }\r\n\r\n                        attributes.push({\r\n                            name: name,\r\n                            fullName: attribute.name,\r\n                            value: attribute.value,\r\n                            argument: argument,\r\n                            modifiers: modifiers\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return attributes;\r\n        },\r\n\r\n        remove: function(node) {\r\n            if (Array.isArray(node)) {\r\n                node.forEach(function(node) {\r\n                    dmx.dom.remove(node);\r\n                });\r\n            } else {\r\n                node.remove()\r\n            }\r\n        },\r\n\r\n        replace: function(oldNode, newNode) {\r\n            if (oldNode.parentNode) {\r\n                oldNode.parentNode.replaceChild(newNode, oldNode);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n})();\r\n","(function() {\r\n\r\n    var cache = {};\r\n\r\n\t// support all types that is supported with structured clone\r\n\tvar SUPPORTED_TYPES = {\r\n\t\t'Boolean': 'boolean',\r\n\t\t'Null': 'null',\r\n\t\t'Undefinec': 'undefined',\r\n\t\t'Number': 'number',\r\n\t\t'BigInt': 'number',\r\n\t\t'String': 'string',\r\n\t\t'Date': 'date',\r\n\t\t'RegExp': 'regexp',\r\n\t\t'Blob': 'blob',\r\n\t\t'File': 'file',\r\n\t\t'FileList': 'filelist',\r\n\t\t'ArrayBuffer': 'arraybuffer',\r\n\t\t'ImageBitmap': 'imagebitmap',\r\n\t\t'ImageData': 'imagedata',\r\n\t\t'Array': 'array',\r\n\t\t'Object': 'object',\r\n\t\t'Map': 'map',\r\n\t\t'Set': 'set',\r\n\t\t'DataView': 'array',\r\n\t\t'Int8Array': 'array',\r\n\t\t'Uint8Array': 'array',\r\n\t\t'Uint8ClampedArray': 'array',\r\n\t\t'Int16Array': 'array',\r\n\t\t'Uint16Array': 'array',\r\n\t\t'Int32Array': 'array',\r\n\t\t'Uint32Array': 'array',\r\n\t\t'Float32Array': 'array',\r\n\t\t'Float64Array': 'array',\r\n\t\t'BigInt64Array': 'array',\r\n\t\t'BigUint64Array': 'array'\r\n\t};\r\n\r\n    var OPERATORS = {\r\n        '{': 'L_CURLY',\r\n        '}': 'R_CURLY',\r\n        '(': 'L_PAREN',\r\n        ')': 'R_PAREN',\r\n        '[': 'L_BRACKET',\r\n        ']': 'R_BRACKET',\r\n        '.': 'PERIOD',\r\n        ',': 'COMMA',\r\n        ';': 'SEMI', // Multiple statements are not supported\r\n        ':': 'COLON',\r\n        '?': 'QUESTION',\r\n        // Arithmetic operators\r\n        '+': 'ADDICTIVE',\r\n        '-': 'ADDICTIVE',\r\n        '*': 'MULTIPLICATIVE',\r\n        '/': 'MULTIPLICATIVE',\r\n        '%': 'MULTIPLICATIVE',\r\n        // Comparison operators\r\n        '===': 'EQUALITY',\r\n        '!==': 'EQUALITY',\r\n        '==': 'EQUALITY',\r\n        '!=': 'EQUALITY',\r\n        '<': 'RELATIONAL',\r\n        '>': 'RELATIONAL',\r\n        '<=': 'RELATIONAL',\r\n        '>=': 'RELATIONAL',\r\n        'in': 'RELATIONAL',\r\n        // Logical operators\r\n        '&&': 'LOGICAL_AND',\r\n        '||': 'LOGICAL_OR',\r\n        '!': 'LOGICAL_NOT',\r\n        // Bitwise operators\r\n        '&': 'BITWISE_AND',\r\n        '|': 'BITWISE_OR',\r\n        '^': 'BITWISE_XOR',\r\n        '~': 'BITWISE_NOT',\r\n        '<<': 'BITWISE_SHIFT',\r\n        '>>': 'BITWISE_SHIFT',\r\n        '>>>': 'BITWISE_SHIFT'\r\n    };\r\n\r\n    var ESCAPE = {\r\n        'n': '\\n',\r\n        'f': '\\f',\r\n        'r': '\\r',\r\n        't': '\\t',\r\n        'v': '\\v',\r\n        \"'\": \"'\",\r\n        '\"': '\"',\r\n        '`': '`'\r\n    };\r\n\r\n    var EXPRESSIONS = {\r\n\t\t'**': function(a, b) { return Math.pow(a(), b()) }, // Use Math.pow for older browsers\r\n\t\t'??': function(a, b) { a = a(); return a == null ? b() : a }, // nullish-coalescing\r\n        'in': function(a, b) { return a() in b(); },\r\n        '?': function(a, b, c) { return a() ? b() : c(); },\r\n        '+': function(a, b) { a = a(); b = b(); return a == null ? b : b == null ? a : a + b; },\r\n        '-': function(a, b) { return a() - b(); },\r\n        '*': function(a, b) { return a() * b(); },\r\n        '/': function(a, b) { return a() / b(); },\r\n        '%': function(a, b) { return a() % b(); },\r\n        '===': function(a, b) { return a() === b(); },\r\n        '!==': function(a, b) { return a() !== b(); },\r\n        '==': function(a, b) { return a() == b(); },\r\n        '!=': function(a, b) { return a() != b(); },\r\n        '<': function(a, b) { return a() < b(); },\r\n        '>': function(a, b) { return a() > b(); },\r\n        '<=': function(a, b) { return a() <= b(); },\r\n        '>=': function(a, b) { return a() >= b(); },\r\n        '&&': function(a, b) { return a() && b(); },\r\n        '||': function(a, b) { return a() || b(); },\r\n        '&': function(a, b) { return a() & b(); },\r\n        '|': function(a, b) { return a() | b(); },\r\n        '^': function(a, b) { return a() ^ b(); },\r\n        '<<': function(a, b) { return a() << b(); },\r\n        '>>': function(a, b) { return a() >> b(); },\r\n        '>>>': function(a, b) { return a() >>> b(); },\r\n        '~': function(a) { return ~a(); },\r\n        '!': function(a) { return !a(); }\r\n    };\r\n\r\n    var RESERVED = {\r\n        'this': function(scope) { return function() { return scope.data; }; },\r\n        'undefined': function() { return function() { return undefined; }; },\r\n        'null': function() { return function() { return null; }; },\r\n        'true': function() { return function() { return true; }; },\r\n\t\t'false': function() { return function() { return false; }; },\r\n\t\t'_': function() { return function() { return { __dmxScope__: true }; }; }\r\n    };\r\n\r\n    var ZERO = function() { return 0; };\r\n\r\n\tdmx.getType = function(obj) {\r\n\t\treturn SUPPORTED_TYPES[Object.prototype.toString.call(obj).slice(8, -1)];\r\n\t};\r\n\r\n\tdmx.getIdents = function(str) {\r\n\t\tif (typeof str != 'string') return [];\r\n\t\t\r\n\t\tlet tokens = [];\r\n\r\n\t\tif (str.includes('{{')) {\r\n\t\t\tlet match;\r\n\r\n\t\t\twhile ((match = dmx.reExpressionReplace.exec(str)) != null) {\r\n\t\t\t\ttokens = tokens.concat(dmx.lexer(match[1]));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttokens = dmx.lexer(str);\r\n\t\t}\r\n\r\n\t\treturn tokens.filter(token => token.name == 'IDENT').map(token => token.value);\r\n\t};\r\n\r\n    dmx.lexer = function(exp) {\r\n        if (cache[exp]) {\r\n            return cache[exp];\r\n        }\r\n\r\n        var tokens = [], token, name, start, index = 0, op = true, ch, ch2, ch3;\r\n\r\n        while (index < exp.length) {\r\n            start = index;\r\n\r\n            ch = read();\r\n\r\n    \t\tif (isQuote(ch) && op) {\r\n    \t\t\tname = 'STRING';\r\n    \t\t\ttoken = readString(ch);\r\n    \t\t\top = false;\r\n    \t\t}\r\n    \t\telse if ((isDigid(ch) || (is('.') && peek() && isDigid(peek()))) && op) {\r\n    \t\t\tname = 'NUMBER';\r\n    \t\t\ttoken = readNumber();\r\n    \t\t\top = false;\r\n    \t\t}\r\n    \t\telse if (isAlpha(ch) && op) {\r\n    \t\t\tname = 'IDENT';\r\n    \t\t\ttoken = readIdent();\r\n    \t\t\tif (is('(')) {\r\n    \t\t\t\tname = 'METHOD';\r\n    \t\t\t}\r\n    \t\t\top = false;\r\n    \t\t}\r\n    \t\telse if (is('/') && op && (token == '(' || token == ',' || token == '?' || token == ':') && testRegexp()) {\r\n    \t\t\tname = 'REGEXP';\r\n    \t\t\ttoken = readRegexp();\r\n    \t\t\top = false;\r\n    \t\t}\r\n    \t\telse if ( isWhitespace(ch) ) {\r\n    \t\t\t// WHITESPACE (SKIP)\r\n    \t\t\tindex++;\r\n    \t\t\tcontinue;\r\n    \t\t}\r\n    \t\telse if ((ch3 = read(3)) && OPERATORS[ch3]) {\r\n    \t\t\tname = OPERATORS[ch3];\r\n    \t\t\ttoken = ch3;\r\n    \t\t\top = true;\r\n    \t\t\tindex += 3;\r\n    \t\t}\r\n    \t\telse if ((ch2 = read(2)) && OPERATORS[ch2]) {\r\n    \t\t\tname = OPERATORS[ch2];\r\n    \t\t\ttoken = ch2;\r\n    \t\t\top = true;\r\n    \t\t\tindex += 2;\r\n    \t\t}\r\n    \t\telse if (OPERATORS[ch]) {\r\n    \t\t\tname = OPERATORS[ch];\r\n    \t\t\ttoken = ch;\r\n    \t\t\top = true;\r\n    \t\t\tindex++;\r\n    \t\t}\r\n    \t\telse {\r\n    \t\t\t// ERROR\r\n    \t\t\tthrow Error(\"Lexer Error: Unexpected token '\" + ch + \"' at column \" + index + \" in expression [\" + exp + \"]\");\r\n    \t\t}\r\n\r\n    \t\ttokens.push({\r\n    \t\t\tname : name,\r\n    \t\t\tindex: start,\r\n    \t\t\tvalue: token\r\n    \t\t});\r\n        }\r\n\r\n        cache[exp] = tokens;\r\n\r\n        return tokens;\r\n\r\n        function read(n) {\r\n    \t\treturn (n > 1) ? exp.substr(index, n) : exp[index];\r\n    \t}\r\n\r\n    \tfunction peek(n) {\r\n    \t\tn = n || 1;\r\n    \t\treturn index + n < exp.length ? exp[index + n] : false;\r\n    \t}\r\n\r\n    \tfunction is(chars) {\r\n    \t\treturn chars.indexOf(ch) != -1;\r\n    \t}\r\n\r\n    \tfunction isQuote(ch) {\r\n    \t\treturn ch == '\"' || ch == \"'\" || ch == '`';\r\n    \t}\r\n\r\n    \tfunction isDigid(ch) {\r\n    \t\treturn ch >= '0' && ch <= '9';\r\n    \t}\r\n\r\n    \tfunction isAlpha(ch) {\r\n    \t\treturn (ch >= 'a' && ch <= 'z') ||\r\n    \t\t       (ch >= 'A' && ch <= 'Z') ||\r\n    \t\t        ch == '_' || ch == '$';\r\n    \t}\r\n\r\n    \tfunction isAlphaNum(ch) {\r\n    \t\treturn isAlpha(ch) || isDigid(ch);\r\n    \t}\r\n\r\n    \tfunction isWhitespace(ch) {\r\n    \t\treturn ch == ' ' || ch == '\\r' || ch == '\\t' || ch == '\\n' || ch == '\\v' || ch == '\\u00A0';\r\n    \t}\r\n\r\n    \tfunction isExpOperator(ch) {\r\n    \t\treturn ch == '-' || ch == '+' || isDigid(ch);\r\n    \t}\r\n\r\n    \tfunction readString(quote) {\r\n    \t\tvar string = '', escape = false;\r\n\r\n    \t\tindex++;\r\n\r\n    \t\twhile (index < exp.length) {\r\n    \t\t\tch = read();\r\n\r\n    \t\t\t// was previous an escape character\r\n    \t\t\tif ( escape ) {\r\n    \t\t\t\t// unicode escape\r\n    \t\t\t\tif (ch == 'u') {\r\n    \t\t\t\t\tindex++;\r\n    \t\t\t\t\tvar hex = read(4);\r\n    \t\t\t\t\tif (hex.match(/[\\da-f]{4}/i)) {\r\n    \t\t\t\t\t\tthrow Error('Invalid unicode escape at column ' + index + ' in expression [' + exp + ']');\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tstring += String.fromCharCode(parseInt(hex, 16));\r\n    \t\t\t\t\tindex += 3;\r\n    \t\t\t\t}\r\n    \t\t\t\telse {\r\n    \t\t\t\t\tvar rep = ESCAPE[ch];\r\n    \t\t\t\t\tstring += rep ? rep : ch;\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tescape = false;\r\n    \t\t\t}\r\n    \t\t\telse if (ch == '\\\\') {\r\n    \t\t\t\t// escape character\r\n    \t\t\t\tescape = true;\r\n    \t\t\t}\r\n    \t\t\telse if (ch == quote) {\r\n    \t\t\t\t// end of string\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tif (quote == '`') {\r\n\t\t\t\t\t\tstring = '{{' + string + '}}';\r\n\t\t\t\t\t}\r\n    \t\t\t\treturn string;\r\n    \t\t\t}\r\n    \t\t\telse {\r\n    \t\t\t\tstring += ch;\r\n    \t\t\t}\r\n\r\n    \t\t\tindex++;\r\n    \t\t}\r\n\r\n    \t\tthrow Error('Unterminated quote in expression [' + exp + ']');\r\n    \t}\r\n\r\n    \tfunction readNumber() {\r\n    \t\tvar number = '', exponent = false;\r\n\r\n    \t\twhile (index < exp.length) {\r\n    \t\t\tch = read();\r\n\r\n    \t\t\tif (is('.') && peek() && isDigid(peek()) || isDigid(ch)) {\r\n    \t\t\t\tnumber += ch;\r\n    \t\t\t}\r\n    \t\t\telse {\r\n    \t\t\t\tvar next = peek();\r\n\r\n    \t\t\t\tif (is('eE') && isExpOperator(next)) {\r\n    \t\t\t\t\tnumber += 'e';\r\n    \t\t\t\t\texponent = true;\r\n    \t\t\t\t}\r\n    \t\t\t\telse if (isExpOperator(ch) && next && isDigid(next) && exponent) {\r\n    \t\t\t\t\tnumber += ch;\r\n    \t\t\t\t\texponent = false;\r\n    \t\t\t\t}\r\n    \t\t\t\telse if (isExpOperator(ch) && (!next || !isDigid(next)) && exponent) {\r\n    \t\t\t\t\tthrow Error('Invalid exponent \"' + ch + '\" in expression [' + exp + ']');\r\n    \t\t\t\t}\r\n    \t\t\t\telse {\r\n    \t\t\t\t\tbreak;\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n\r\n    \t\t\tindex++;\r\n    \t\t}\r\n\r\n\t\t\t// TODO: Support BigInt type\r\n\r\n    \t\treturn +number;\r\n    \t}\r\n\r\n    \tfunction readIdent() {\r\n    \t\tvar ident = '';\r\n\r\n    \t\twhile (index < exp.length) {\r\n    \t\t\tch = read();\r\n\r\n    \t\t\tif (isAlphaNum(ch)) {\r\n    \t\t\t\tident += ch;\r\n    \t\t\t}\r\n    \t\t\telse {\r\n    \t\t\t\tbreak;\r\n    \t\t\t}\r\n\r\n    \t\t\tindex++;\r\n    \t\t}\r\n\r\n    \t\treturn ident;\r\n    \t}\r\n\r\n    \tfunction readRegexp() {\r\n    \t\tvar regexp = '', modifiers = '', escape = false;\r\n\r\n    \t\tindex++;\r\n\r\n    \t\twhile (index < exp.length) {\r\n    \t\t\tch = read();\r\n\r\n    \t\t\t// was previous an escape character\r\n    \t\t\tif (escape) {\r\n    \t\t\t\tescape = false;\r\n    \t\t\t}\r\n    \t\t\telse if (ch == '\\\\') {\r\n    \t\t\t\t// escape character\r\n    \t\t\t\tescape = true;\r\n    \t\t\t}\r\n    \t\t\telse if (ch == '/') {\r\n    \t\t\t\t// end of regexp\r\n    \t\t\t\tindex++;\r\n\r\n    \t\t\t\twhile ('ign'.indexOf(ch = read()) != -1) {\r\n    \t\t\t\t\tmodifiers += ch;\r\n    \t\t\t\t\tindex++;\r\n    \t\t\t\t}\r\n\r\n\t\t\t\t\t// return the actual regexp object (new structured data support)\r\n    \t\t\t\treturn new RegExp(regexp, modifiers);\r\n    \t\t\t}\r\n\r\n    \t\t\tregexp += ch;\r\n    \t\t\tindex++;\r\n    \t\t}\r\n\r\n    \t\tthrow Error('Unterminated regexp in expression [' + exp + ']');\r\n    \t}\r\n\r\n    \tfunction testRegexp() {\r\n    \t\tvar idx = index, ok = true;\r\n\r\n    \t\ttry {\r\n    \t\t\treadRegexp();\r\n    \t\t} catch (e) {\r\n    \t\t\tok = false;\r\n    \t\t}\r\n\r\n    \t\t// reset our index and ch\r\n    \t\tindex = idx;\r\n    \t\tch = '/';\r\n\r\n    \t\treturn ok;\r\n    \t}\r\n    };\r\n\r\n    dmx.parse = function(exp, scope) {\r\n        scope = scope || dmx.app;\r\n\r\n        // check templates\r\n        if (dmx.reExpression.test(exp)) {\r\n            if (exp.substr(0, 2) == '{{' && exp.substr(-2) == '}}' && exp.indexOf('{{', 2) == -1) {\r\n                return dmx.parse(exp.substring(2, exp.length - 2), scope);\r\n            }\r\n\r\n            return exp.replace(dmx.reExpressionReplace, function(token, exp) {\r\n                var value = dmx.parse(exp, scope);\r\n                return value == null ? '' : value;\r\n            });\r\n\t\t}\r\n\t\t\r\n\t\tif (!exp.trim()) return undefined;\r\n\r\n        var value;\r\n\r\n        try {\r\n            var tokens = dmx.lexer(exp).slice(0), context;\r\n            value = doParse();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n        return value;\r\n\r\n        //return doParse();\r\n\r\n        function read() {\r\n    \t\tif (tokens.length === 0) {\r\n    \t\t\tthrow Error('Unexpected end in expression [' + exp + ']');\r\n    \t\t}\r\n\r\n    \t\treturn tokens[0];\r\n    \t}\r\n\r\n    \tfunction peek(e) {\r\n    \t\tif (tokens.length > 0) {\r\n    \t\t\tvar token = tokens[0];\r\n\r\n    \t\t\tif (!e || token.name == e) {\r\n    \t\t\t\treturn token;\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t\treturn false;\r\n    \t}\r\n\r\n    \tfunction expect(e) {\r\n    \t\tvar token = peek(e);\r\n\r\n    \t\tif (token) {\r\n    \t\t\ttokens.shift();\r\n    \t\t\treturn token;\r\n    \t\t}\r\n\r\n    \t\treturn false;\r\n    \t}\r\n\r\n    \tfunction consume(e) {\r\n    \t\tif (!expect(e)) {\r\n    \t\t\tthrow Error('Unexpected token, expecting [' + e + '] in expression [' + exp + ']');\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction fn(exp) {\r\n    \t\tvar args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    \t\treturn function() {\r\n    \t\t\tif (EXPRESSIONS.hasOwnProperty(exp)) {\r\n    \t\t\t\treturn EXPRESSIONS[exp].apply(scope, args);\r\n    \t\t\t} else {\r\n    \t\t\t\treturn exp;\r\n    \t\t\t}\r\n    \t\t};\r\n    \t}\r\n\r\n    \tfunction doParse() {\r\n    \t\tvar a = [];\r\n\r\n    \t\twhile (true) {\r\n    \t\t\tif (tokens.length > 0 && !(peek('R_PAREN') || peek('R_BRACKET') || peek('R_CURLY') || peek('COMMA') || peek('SEMI'))) {\r\n    \t\t\t\ta.push(expression());\r\n    \t\t\t}\r\n\r\n                if (!(expect('COMMA') || expect('SEMI'))) {\r\n    \t\t\t    return (a.length == 1 ? a[0] : b)();\r\n                }\r\n    \t\t}\r\n\r\n    \t\tfunction b() {\r\n    \t\t\tvar value;\r\n\r\n    \t\t\tfor (var i = 0; i < a.length; i++) {\r\n    \t\t\t\tvar e = a[i];\r\n    \t\t\t\tif (e) { value = e(); }\r\n    \t\t\t}\r\n\r\n    \t\t\treturn value;\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction expression() {\r\n    \t\treturn conditional();\r\n    \t}\r\n\r\n    \tfunction conditional() {\r\n    \t\tvar left = logicalOr(), middle, token;\r\n\r\n    \t\tif ((token = expect('QUESTION'))) {\r\n    \t\t\tmiddle = conditional();\r\n\r\n    \t\t\tif ((token = expect('COLON'))) {\r\n    \t\t\t\treturn fn('?', left, middle, conditional());\r\n    \t\t\t} else {\r\n    \t\t\t\tthrow Error('Expecting a \":\" in expression [' + exp + ']');\r\n    \t\t\t}\r\n    \t\t} else {\r\n    \t\t\treturn left;\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction logicalOr() {\r\n    \t\tvar left = logicalAnd(), token;\r\n\r\n    \t\twhile (true) {\r\n    \t\t\tif ((token = expect('LOGICAL_OR'))) {\r\n    \t\t\t\tleft = fn(token.value, left, logicalAnd());\r\n    \t\t\t} else {\r\n    \t\t\t\treturn left;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction logicalAnd() {\r\n    \t\tvar left = bitwiseOr(), token;\r\n\r\n    \t\tif ((token = expect('LOGICAL_AND'))) {\r\n    \t\t\tleft = fn(token.value, left, logicalAnd());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction bitwiseOr() {\r\n    \t\tvar left = bitwiseXor(), token;\r\n\r\n    \t\tif ((token = expect('BITWISE_OR'))) {\r\n    \t\t\tleft = fn(token.value, left, bitwiseXor());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction bitwiseXor() {\r\n    \t\tvar left = bitwiseAnd(), token;\r\n\r\n    \t\tif ((token = expect('BITWISE_XOR'))) {\r\n    \t\t\tleft = fn(token.value, left, bitwiseAnd());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction bitwiseAnd() {\r\n    \t\tvar left = equality(), token;\r\n\r\n    \t\tif ((token = expect('BITWISE_AND'))) {\r\n    \t\t\tleft = fn(token.value, left, bitwiseAnd());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction equality() {\r\n    \t\tvar left = relational(), token;\r\n\r\n    \t\tif ((token = expect('EQUALITY'))) {\r\n    \t\t\tleft = fn(token.value, left, equality());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction relational() {\r\n    \t\tvar left = bitwiseShift(), token;\r\n\r\n    \t\tif ((token = expect('RELATIONAL'))) {\r\n    \t\t\tleft = fn(token.value, left, relational());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \t// bitwise shift here\r\n\r\n    \tfunction bitwiseShift() {\r\n    \t\tvar left = addictive(), token;\r\n\r\n    \t\twhile ((token = expect('BITWISE_SHIFT'))) {\r\n    \t\t\tleft = fn(token.value, left, addictive());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction addictive() {\r\n    \t\tvar left = multiplicative(), token;\r\n\r\n    \t\twhile ((token = expect('ADDICTIVE'))) {\r\n    \t\t\tleft = fn(token.value, left, multiplicative());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction multiplicative() {\r\n    \t\tvar left = unary(), token;\r\n\r\n    \t\twhile ((token = expect('MULTIPLICATIVE'))) {\r\n    \t\t\tleft = fn(token.value, left, unary());\r\n    \t\t}\r\n\r\n    \t\treturn left;\r\n    \t}\r\n\r\n    \tfunction unary() {\r\n    \t\tvar token;\r\n\r\n    \t\tif ((token = expect('ADDICTIVE'))) {\r\n    \t\t\tif (token.value == '+') {\r\n    \t\t\t\treturn primary();\r\n    \t\t\t} else {\r\n    \t\t\t\treturn fn(token.value, ZERO, unary());\r\n    \t\t\t}\r\n    \t\t} else if ((token = expect('LOGICAL_NOT'))) {\r\n    \t\t\treturn fn(token.value, unary());\r\n    \t\t} else {\r\n    \t\t\treturn primary();\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction primary() {\r\n    \t\tvar value, next;\r\n\r\n    \t\tif (expect('L_PAREN')) {\r\n    \t\t\tvalue = expression();\r\n    \t\t\tconsume('R_PAREN');\r\n            } else if (expect('L_CURLY')) {\r\n                var obj = {};\r\n\r\n                if (read().name != 'R_CURLY') {\r\n                    do {\r\n                        var key = expect().value;\r\n                        consume('COLON');\r\n                        obj[key] = expression()();\r\n                    } while (expect('COMMA'))\r\n                }\r\n\r\n                value = fn(obj);\r\n\r\n    \t\t\tconsume('R_CURLY');\r\n    \t\t} else if (expect('L_BRACKET')) {\r\n                var arr = [];\r\n\r\n        \t\tif (read().name != 'R_BRACKET') {\r\n        \t\t\tdo {\r\n        \t\t\t\tarr.push(expression()());\r\n        \t\t\t} while (expect('COMMA'));\r\n        \t\t}\r\n\r\n                value = fn(arr);\r\n\r\n        \t\tconsume('R_BRACKET');\r\n    \t\t} else if (expect('PERIOD')) {\r\n    \t\t\tvalue = peek() ? objectMember(fn(scope.data)) : fn(scope.data);\r\n    \t\t} else {\r\n    \t\t\tvar token = expect();\r\n\r\n    \t\t\tif (token === false) {\r\n    \t\t\t\tthrow Error('Not a primary expression [' + exp + ']');\r\n    \t\t\t}\r\n\r\n    \t\t\tif (token.name == 'IDENT') {\r\n    \t\t\t\tvalue = RESERVED.hasOwnProperty(token.value) ?\r\n    \t\t\t\t\tRESERVED[token.value](scope) :\r\n    \t\t\t\t\tfunction() { return scope.get(token.value); };\r\n    \t\t\t} else if (token.name == 'METHOD') {\r\n                    value = fn(dmx.__formatters.global[token.value] || function() {\r\n    \t\t\t\t\tif (window.warn) console.warn('Formatter ' + token.value + ' in expression [' + exp + '] doesn\\'t exist');\r\n    \t\t\t\t\treturn undefined;\r\n                    });\r\n    \t\t\t} else {\r\n    \t\t\t\tvalue = function() { return token.value; };\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t\twhile ((next = expect('L_PAREN') || expect('L_BRACKET') || expect('PERIOD'))) {\r\n    \t\t\tif (next.value == '(') {\r\n    \t\t\t\tvalue = functionCall(value, context);\r\n    \t\t\t} else if (next.value == '[') {\r\n    \t\t\t\tcontext = value;\r\n    \t\t\t\tvalue = objectIndex(value);\r\n    \t\t\t} else if (next.value == '.') {\r\n    \t\t\t\tcontext = value;\r\n    \t\t\t\tvalue = objectMember(value);\r\n    \t\t\t} else {\r\n    \t\t\t\tthrow Error('Parse Error in expression [' + exp + ']');\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t\tcontext = null;\r\n\r\n    \t\treturn value;\r\n    \t}\r\n\r\n    \tfunction functionCall(func, ctx) {\r\n    \t\tvar argsFn = [];\r\n\r\n    \t\tif (read().name != 'R_PAREN') {\r\n    \t\t\tdo {\r\n    \t\t\t\targsFn.push(expression());\r\n    \t\t\t} while (expect('COMMA'));\r\n    \t\t}\r\n\r\n    \t\tconsume('R_PAREN');\r\n\r\n    \t\treturn function() {\r\n    \t\t\tvar args = []; //[ctx()];\r\n\r\n                if (ctx) {\r\n                    args.push(ctx());\r\n                }\r\n\r\n    \t\t\tfor (var i = 0; i < argsFn.length; i++) {\r\n    \t\t\t\targs.push(argsFn[i]());\r\n    \t\t\t}\r\n\r\n    \t\t\tvar fnPtr = func() || dmx.noop;\r\n\r\n    \t\t\treturn fnPtr.apply(scope, args);\r\n    \t\t};\r\n    \t}\r\n\r\n    \tfunction objectIndex(object) {\r\n    \t\tvar indexFn = expression();\r\n\r\n    \t\tconsume('R_BRACKET');\r\n\r\n    \t\treturn function() {\r\n    \t\t\tvar o = object(),\r\n    \t\t\t\ti = indexFn();\r\n\r\n\t\t\t\tif (typeof o != 'object' || o == null) return undefined;\r\n\t\t\t\t\r\n\t\t\t\tif (o.__dmxScope__) {\r\n\t\t\t\t\treturn scope.get(i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dmx.getType(o) == 'map') {\r\n\t\t\t\t\treturn o.get(i);\r\n\t\t\t\t}\r\n\r\n    \t\t\treturn o[i];\r\n    \t\t};\r\n    \t}\r\n\r\n    \tfunction objectMember(object) {\r\n    \t\tvar token = expect();\r\n\r\n    \t\treturn function() {\r\n    \t\t\tvar o = object();\r\n\t\t\t\tvar type = dmx.getType(o);\r\n\r\n    \t\t\tif (token.name == 'METHOD') {\r\n\t\t\t\t\tif (type == 'map' && typeof o.get('__' + token.value) == 'function') {\r\n\t\t\t\t\t\tconsole.log('function', token.value, o.get('__' + token.value));\r\n\t\t\t\t\t\treturn o.get('__' + token.value);\r\n\t\t\t\t\t}\r\n\r\n                    if (type == 'object' && typeof o['__' + token.value] == 'function') {\r\n                        return o['__' + token.value];\r\n                    }\r\n\r\n                    if (dmx.__formatters[type] && dmx.__formatters[type][token.value]) {\r\n                        return dmx.__formatters[type][token.value];\r\n                    }\r\n\r\n\t\t\t\t\tif (dmx.__formatters['any'] && dmx.__formatters['any'][token.value]) {\r\n\t\t\t\t\t\treturn dmx.__formatters['any'][token.value];\r\n\t\t\t\t\t}\r\n\r\n    \t\t\t\treturn function() {\r\n    \t\t\t\t\tif (o != null && console.warn) console.warn('Formatter ' + token.value + ' in expression [' + exp + '] doesn\\'t exist for type ' + type);\r\n    \t\t\t\t\treturn undefined;\r\n    \t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (o && o.__dmxScope__) {\r\n\t\t\t\t\treturn scope.get(token.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (type == 'map') {\r\n\t\t\t\t\treturn o.get(token.value);\r\n\t\t\t\t}\r\n\r\n    \t\t\treturn o && o.hasOwnProperty(token.value) ? o[token.value] : undefined;\r\n    \t\t};\r\n    \t}\r\n    };\r\n\r\n})();\r\n","dmx.global = {\r\n    data: {},\r\n    seed: Math.random(),\r\n    get: function(name) {\r\n        if (this.data.hasOwnProperty(name)) {\r\n            return this.data[name];\r\n        }\r\n\r\n        return undefined;\r\n    },\r\n    set: function(name, value) {\r\n        if (typeof name == 'object') {\r\n            for (var prop in name) {\r\n                if (name.hasOwnProperty(prop)) {\r\n                    this.set(prop, name[prop]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!dmx.equal(this.data[name], value)) {\r\n            this.data[name] = value;\r\n            dmx.requestUpdate(name);\r\n        }\r\n    },\r\n    del: function(name) {\r\n        delete this.data[name];\r\n        dmx.requestUpdate(name);\r\n    }\r\n}\r\n\r\ndmx.DataScope = function(data, parent) {\r\n    if (typeof data != 'object') {\r\n        data = { $value: data };\r\n    }\r\n\r\n    return {\r\n        parent: parent || dmx.global,\r\n        data: data,\r\n        seed: Math.random(),\r\n        get: function(name) {\r\n            if (this.data.hasOwnProperty(name)) {\r\n                return this.data[name];\r\n            }\r\n\r\n            if (this.parent) {\r\n                if (name == 'parent') {\r\n                    return this.parent.data;\r\n                }\r\n\r\n                return this.parent.get(name);\r\n            }\r\n\r\n            return undefined;\r\n        },\r\n        set: function(name, value) {\r\n            if (typeof name == 'object') {\r\n                for (var prop in name) {\r\n                    if (name.hasOwnProperty(prop)) {\r\n                        this.set(prop, name[prop]);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n    \r\n            if (!dmx.equal(this.data[name], value)) {\r\n                this.data[name] = value;\r\n            }\r\n        },\r\n        del: function(name) {\r\n            delete this.data[name];\r\n        }\r\n    };\r\n};","dmx.BaseComponent = dmx.createClass({\r\n\r\n    constructor: function(node, parent) {\r\n        this.$node = node;\r\n        this.parent = parent;\r\n        this.bindings = {};\r\n        this.propBindings = {};\r\n        this.children = [];\r\n        this.listeners = {};\r\n        this.props = {};\r\n        this.data = {};\r\n        this.seed = Math.random();\r\n\r\n        this.name = node.getAttribute('id') || node.getAttribute('name') || this.type.toLowerCase().replace(/^dmx-/, '');\r\n        this.name = this.name.replace(/[^\\w]/g, '');\r\n        this.dmxDomId = node.getAttribute('dmxDomId');\r\n\r\n        try {\r\n            this.$parseAttributes(node);\r\n            this.$initialData();\r\n            this.render(node);\r\n            if (this.beforeMount(node) !== false) {\r\n                this.$mount(node);\r\n                if (this.$node) {\r\n                    //this.$customAttributes('mount', this.$node);\r\n                    this.$customAttributes('mounted', this.$node);\r\n                    if (this.dmxDomId) {\r\n                        // Restore dmxDomId for Wappler\r\n                        this.$node.setAttribute('dmxDomId', this.dmxDomId);\r\n                    }\r\n                    this.$node.dmxComponent = this;\r\n                    this.$node.dmxRendered = true;\r\n                }\r\n                this.dispatchEvent('mount');\r\n                this.mounted();\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    },\r\n\r\n    tag: null,\r\n    initialData: {},\r\n    attributes: {},\r\n    methods: {},\r\n    events: {\r\n        mount: Event,\r\n        destroy: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        if (this.$node) {\r\n            this.$parse();\r\n        }\r\n    },\r\n\r\n    // find component based on name inside children\r\n    find: function(name) {\r\n        if (this.name == name) return this;\r\n\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            var found = this.children[i].find(name);\r\n            if (found) return found;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    // internal method for Wappler\r\n    __find: function(dmxDomId) {\r\n        if (this.dmxDomId == dmxDomId) return this;\r\n\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            var found = this.children[i].__find(dmxDomId);\r\n            if (found) return found;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    // internal method for Wappler\r\n    __replace: function(dmxDomId) {\r\n        var child = this.__find(dmxDomId);\r\n\r\n        if (child) {\r\n            child.$destroy();\r\n\r\n            var node = document.querySelector('[dmxDomId=\"' + dmxDomId + '\"]');\r\n            if (node) {\r\n                var index = child.parent.children.indexOf(child);\r\n                var Component = dmx.__components[child.data.$type];\r\n\r\n                if (index > -1 && Component) {\r\n                    var component = new Component(node, child.parent);\r\n                    child.parent.children.splice(index, 1, component);\r\n                    if (component.name) {\r\n                        child.parent.add(component.name, component.data);\r\n                    }\r\n                }\r\n            }\r\n\r\n            dmx.requestUpdate();\r\n        }\r\n    },\r\n\r\n    // internal method for Wappler\r\n    __remove: function(dmxDomId) {\r\n        var child = this.__find(dmxDomId);\r\n\r\n        if (child) {\r\n            child.$destroy();\r\n\r\n            var index = child.parent.children.indexOf(this);\r\n            if (index > -1) {\r\n                child.parent.children.splice(index, 1);\r\n            }\r\n\r\n            dmx.requestUpdate();\r\n        }\r\n    },\r\n\r\n    beforeMount: dmx.noop,\r\n    mounted: dmx.noop,\r\n\r\n    beforeUpdate: dmx.noop,\r\n    update: dmx.noop,\r\n    updated: dmx.noop,\r\n\r\n    beforeDestroy: dmx.noop,\r\n    destroyed: dmx.noop,\r\n\r\n    addEventListener: function(type, callback) {\r\n        if (!(type in this.listeners)) {\r\n            this.listeners[type] = new Set();\r\n        }\r\n        this.listeners[type].add(callback);\r\n    },\r\n\r\n    removeEventListener: function(type, callback) {\r\n        if (!(type in this.listeners)) return;\r\n        this.listeners[type].delete(callback);\r\n    },\r\n\r\n    dispatchEvent: function(event, props, data, nsp) {\r\n        if (typeof event == 'string') {\r\n            try {\r\n                var ComponentEvent = this.events[event];\r\n                event = new ComponentEvent(event, props);\r\n            } catch (err) {\r\n                var eventType = event;\r\n                event = document.createEvent('CustomEvent');\r\n                event.initEvent(eventType, props && props.bubbles, props && props.cancelable);\r\n                if (!(event instanceof Event)) {\r\n                    console.warn('Unknown event ' + event, this.events);\r\n                    return false;\r\n                }\r\n                var preventDefault = event.preventDefault;\r\n                event.preventDefault = function() {\r\n                    preventDefault.call(this);\r\n                    try {\r\n                        Object.defineProperty(this, 'defaultPrevented', {\r\n                            get: function () {\r\n                                return true;\r\n                            }\r\n                        });\r\n                    } catch(e) {\r\n                        this.defaultPrevented = true;\r\n                    }\r\n                    return event;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!(event.type in this.listeners)) return true;\r\n\r\n        event.nsp = nsp;\r\n        event.target = this;\r\n        event.$data = data || {};\r\n        for (let listener of this.listeners[event.type]) {\r\n            if (listener.call(this, event) === false) {\r\n                event.preventDefault();\r\n            }\r\n        }\r\n\r\n        return !event.defaultPrevented;\r\n    },\r\n\r\n    $addChild: function(name, node) {\r\n        var Component = dmx.__components[name];\r\n        var component = new Component(node, this);\r\n        this.children.push(component);\r\n        if (component.name) {\r\n            if (this.data[component.name] && dmx.debug) {\r\n                console.warn('Duplicate name \"' + component.name + '\" found, component not added to scope.');\r\n                //return;\r\n            }\r\n            this.set(component.name, component.data);\r\n        }\r\n    },\r\n\r\n    $customAttributes: function(hook, node) {\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (dmx.__attributes[hook][attr.name]) {\r\n                node.removeAttribute(attr.fullName);\r\n                dmx.__attributes[hook][attr.name].call(this, node, attr);\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    $parse: function(node) {\r\n        node = node || this.$node;\r\n\r\n        if (!node) return;\r\n\r\n        if (node.nodeType === 3) {\r\n            if (dmx.reExpression.test(node.nodeValue)) {\r\n                var nodeValue = node.nodeValue;\r\n\r\n                if (nodeValue.substr(0, 2) == '{{' && nodeValue.substr(-2) == '}}' && nodeValue.indexOf('{{', 2) == -1) {\r\n                    nodeValue = nodeValue.substring(2, nodeValue.length - 2);\r\n                }\r\n\r\n                /*if (nodeValue.substr(0, 2) == '{{' && nodeValue.substr(-2) == '}}' && nodeValue.indexOf('{{', 2) == -1) {\r\n                    nodeValue = nodeValue.substring(2, nodeValue.length - 2);\r\n                } else {\r\n                    var fragment = new DocumentFragment();\r\n                    var parts = nodeValue.split(/\\{\\{|\\}\\}/);\r\n\r\n                    parts.forEach(function(part, i) {\r\n                        var textNode = document.createTextNode('');\r\n                        fragment.appendChild(textNode);\r\n\r\n                        if (i % 2 == 0) {\r\n                            textNode.nodeValue = part;\r\n                        } else {\r\n                            this.$addBinding(part, function(value, oldValue) {\r\n                                textNode.nodeValue = value;\r\n                            });\r\n                        }\r\n                    }, this);\r\n\r\n                    node.parentNode.replaceChild(fragment, node);\r\n\r\n                    return;\r\n                }*/\r\n\r\n                this.$addBinding(nodeValue, function(value, oldValue) {\r\n                    node.nodeValue = value;\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (node.nodeType !== 1) return;\r\n\r\n        if (dmx.config.mapping) {\r\n            Object.keys(dmx.config.mapping).forEach(function(map) {\r\n                dmx.array(node.querySelectorAll(map)).forEach(function(node) {\r\n                    if (!node.hasAttribute('is')) {\r\n                        node.setAttribute('is', 'dmx-' + dmx.config.mapping[map]);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        dmx.dom.walk(node, function(node) {\r\n            if (node == this.$node) {\r\n                // skip current node\r\n                return;\r\n            }\r\n\r\n            // Element Node\r\n            if (node.nodeType === 1) {\r\n                var tagName = node.tagName.toLowerCase();\r\n                var attributes = dmx.dom.getAttributes(node);\r\n\r\n                if (node.hasAttribute('is')) {\r\n                    tagName = node.getAttribute('is');\r\n                }\r\n\r\n                if (dmx.reIgnoreElement.test(tagName)) {\r\n                    // ignore element\r\n                    return false;\r\n                }\r\n\r\n                this.$customAttributes('before', node);\r\n                var idx = attributes.findIndex(function(attr) { return attr.name === 'repeat'; });\r\n                if (idx !== -1) return false;\r\n\r\n                if (dmx.rePrefixed.test(tagName)) {\r\n                    tagName = tagName.replace(/^dmx-/i, '');\r\n\r\n                    if (tagName in dmx.__components) {\r\n                        node.isComponent = true;\r\n                        if (!node.dmxRendered) {\r\n                          this.$addChild(tagName, node);\r\n                        } else if (window.__WAPPLER__) {\r\n                            if (node.dmxComponent && node.dmxComponent.$parse) {\r\n                                node.dmxComponent.$parse();\r\n                            }\r\n                        }\r\n                        return false;\r\n                    } else {\r\n                        console.warn('Unknown component found! ' + tagName);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                //this.$customAttributes('mount', node);\r\n                this.$customAttributes('mounted', node);\r\n            }\r\n\r\n            // Text Node\r\n            if (node.nodeType === 3) {\r\n                if (dmx.reExpression.test(node.nodeValue)) {\r\n                    var nodeValue = node.nodeValue;\r\n\r\n                    if (nodeValue.substr(0, 2) == '{{' && nodeValue.substr(-2) == '}}' && nodeValue.indexOf('{{', 2) == -1) {\r\n                        nodeValue = nodeValue.substring(2, nodeValue.length - 2);\r\n                    }\r\n    \r\n                    /*if (nodeValue.substr(0, 2) == '{{' && nodeValue.substr(-2) == '}}' && nodeValue.indexOf('{{', 2) == -1) {\r\n                        nodeValue = nodeValue.substring(2, nodeValue.length - 2);\r\n                    } else {\r\n                        var fragment = new DocumentFragment();\r\n                        var parts = nodeValue.split(/\\{\\{|\\}\\}/);\r\n\r\n                        parts.forEach(function(part, i) {\r\n                            var textNode = document.createTextNode('');\r\n                            fragment.appendChild(textNode);\r\n\r\n                            if (i % 2 == 0) {\r\n                                textNode.nodeValue = part;\r\n                            } else {\r\n                                this.$addBinding(part, function(value, oldValue) {\r\n                                    textNode.nodeValue = value;\r\n                                });\r\n                            }\r\n                        }, this);\r\n\r\n                        node.parentNode.replaceChild(fragment, node);\r\n\r\n                        return;\r\n                    }*/\r\n                    this.$addBinding(nodeValue, function(value, oldValue) {\r\n                        node.nodeValue = value;\r\n                    });\r\n                }\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    $update: function(idents) {\r\n        try {\r\n            if (this.beforeUpdate(idents) !== false) {\r\n                const props = dmx.clone(this.props);\r\n                const didUpdate = this.$updateBindings(this.bindings, idents);\r\n                const updatedProps = this.$updatePropBindings(idents);\r\n\r\n                // TODO: until all components are update call update always\r\n                //if (didUpdate || updatedProps.size || (idents && idents.has('*'))) {\r\n                    try {\r\n                        this.update(props, updatedProps);\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                    }\r\n                //}\r\n\r\n                this.children.forEach(function(child) {\r\n                    child.$update(idents);\r\n                });\r\n\r\n                this.updated();\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    },\r\n\r\n    $canSkip: function(binding, idents) {\r\n        if (idents && !idents.has('*')) {\r\n            for (const ident of binding.idents) {\r\n                if (idents.has(ident)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    $updateBindings: function(bindings, idents) {\r\n        let didUpdate = false;\r\n\r\n        for (const expression in bindings) {\r\n            if (bindings.hasOwnProperty(expression)) {\r\n                const binding = bindings[expression];\r\n\r\n                if (this.$canSkip(binding, idents)) continue;\r\n\r\n                const value = dmx.parse(expression, this);\r\n\r\n                if (!dmx.equal(value, binding.value)) {\r\n                    for (const callback of binding.callbacks) {\r\n                        callback.call(this, value, binding.value);\r\n                    }\r\n\r\n                    didUpdate = true;\r\n                    binding.value = dmx.clone(value);\r\n                }\r\n            }\r\n        }\r\n\r\n        return didUpdate;\r\n    },\r\n\r\n    $updatePropBindings: function(idents) {\r\n        const updated = new Set();\r\n\r\n        for (const prop in this.propBindings) {\r\n            if (this.propBindings.hasOwnProperty(prop)) {\r\n                const binding = this.propBindings[prop];\r\n\r\n                if (this.$canSkip(binding, idents)) continue;\r\n\r\n                const value = dmx.parse(binding.expression, this);\r\n\r\n                if (!dmx.equal(value, binding.value)) {\r\n                    binding.callback.call(this, value);\r\n                    binding.value = dmx.clone(value);\r\n                    updated.add(prop);\r\n                }\r\n            }\r\n        }\r\n\r\n        return updated;\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        var self = this;\r\n\r\n        if (this.attributes) {\r\n            Object.keys(this.attributes).forEach(function(prop) {\r\n                var options = self.attributes[prop];\r\n                var value = options.default;\r\n\r\n                if (node.hasAttribute(prop)) {\r\n                    if (options.type == Boolean) {\r\n                        value = true;\r\n                    } else {\r\n                        value = node.getAttribute(prop);\r\n\r\n                        if (options.type == Number) {\r\n                            // Only set number is a valid number is given\r\n                            if (value && !isNaN(Number(value))) {\r\n                                value = Number(value);\r\n                            }\r\n                        }\r\n\r\n                        if (options.type == String) {\r\n                            value = String(value);\r\n                        }\r\n\r\n                        if (options.validate && !options.validate(value)) {\r\n                            value = options.default;\r\n                        }\r\n                    }\r\n\r\n                    node.removeAttribute(prop);\r\n                }\r\n\r\n                if (node.hasAttribute('dmx-bind:' + prop)) {\r\n                    const expression = node.getAttribute('dmx-bind:' + prop);\r\n                    const callback = this.$propBinding(prop).bind(this);\r\n\r\n                    this.propBindings[prop] = {\r\n                        expression: expression,\r\n                        callback: callback,\r\n                        idents: dmx.getIdents(expression),\r\n                        value: null\r\n                    };\r\n\r\n                    node.removeAttribute('dmx-bind:' + prop);\r\n                }\r\n\r\n                self.props[prop] = dmx.clone(value);\r\n            }, this);\r\n\r\n            this.$updatePropBindings();\r\n        }\r\n\r\n        if (this.events) {\r\n            Object.keys(this.events).forEach(function(event) {\r\n                if (node.hasAttribute('on' + event)) {\r\n                    //self.addEventListener(event, Function('event', node.getAttribute('on' + event)));\r\n                    dmx.eventListener(self, event, Function('event', node.getAttribute('on' + event)), {});\r\n                    node.removeAttribute('on' + event);\r\n                }\r\n            });\r\n        }\r\n\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'on' && this.events[attr.argument]) {\r\n                dmx.eventListener(self, attr.argument, function(event) {\r\n                    if (event.originalEvent) {\r\n                        event = event.originalEvent;\r\n                    }\r\n\r\n                    var returnValue = dmx.parse(attr.value, dmx.DataScope({\r\n                        $event: event.$data,\r\n                        $originalEvent: event\r\n                    }, self));\r\n\r\n                    return returnValue;\r\n                }, attr.modifiers);\r\n\r\n                node.removeAttribute(attr.fullName);\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    $propBinding: function(prop) {\r\n        var options = this.attributes[prop];\r\n        var self = this;\r\n\r\n        return function(value) {\r\n            if (value === undefined) {\r\n                value = options.default;\r\n            }\r\n\r\n            if (options.type == Boolean) {\r\n                value = !!value;\r\n            }\r\n\r\n            if (value != null) {\r\n                if (options.type == Number) {\r\n                    if (value !== '' && !isNaN(Number(value))) {\r\n                        value = Number(value);\r\n                    } else {\r\n                        value = options.default;\r\n                    }\r\n                }\r\n\r\n                if (options.type == String) {\r\n                    value = String(value);\r\n                }\r\n            }\r\n\r\n            if (options.validate && !options.validate(value)) {\r\n                value = options.default;\r\n            }\r\n\r\n            self.props[prop] = dmx.clone(value);\r\n        };\r\n    },\r\n\r\n    $initialData: function() {\r\n        Object.assign(\r\n            this.data,\r\n            { $type: this.type },\r\n            typeof this.initialData == 'function' ? this.initialData() : this.initialData\r\n        );\r\n\r\n        Object.keys(this.methods).forEach(function(method) {\r\n            var self = this;\r\n            this.data['__' + method] = function() {\r\n                return self.methods[method].apply(self, Array.prototype.slice.call(arguments, 1));\r\n            };\r\n        }, this);\r\n    },\r\n\r\n    $mount: function(node) {\r\n        if (this.$placeholder && this.$node) {\r\n            dmx.dom.replace(this.$placeholder, this.$node);\r\n        }\r\n    },\r\n\r\n    $addBinding: function(expression, cb) {\r\n        this.bindings[expression] = this.bindings[expression] || {\r\n            expression: expression,\r\n            value: dmx.parse(expression, this),\r\n            callbacks: [],\r\n            idents: dmx.getIdents(expression)\r\n        };\r\n        this.bindings[expression].callbacks.push(cb);\r\n        cb.call(this, this.bindings[expression].value);\r\n    },\r\n\r\n    $destroy: function() {\r\n        this.dispatchEvent('destroy');\r\n        this.beforeDestroy();\r\n        this.$destroyChildren();\r\n        if (this.parent) {\r\n            this.parent.del(this.name);\r\n        }\r\n        if (this.$node) {\r\n            dmx.dom.remove(this.$node);\r\n        }\r\n        this.destroyed();\r\n    },\r\n\r\n    $destroyChildren: function() {\r\n        this.children.forEach(function(child) {\r\n            child.$destroy();\r\n        });\r\n\r\n        this.children = [];\r\n    },\r\n\r\n    get: function(name, ignoreParents) {\r\n        if (this.data.hasOwnProperty(name)) {\r\n            return this.data[name];\r\n        }\r\n\r\n        if (this.parent && ignoreParents !== true) {\r\n            if (name == 'parent') {\r\n                return this.parent.data;\r\n            }\r\n\r\n            return this.parent.get(name);\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    add: function(name, value) {\r\n        if (this.data[name]) {\r\n            if (Array.isArray(this.data[name])) {\r\n                this.data[name].push(value);\r\n            } else {\r\n                this.data[name] = [this.data[name], value];\r\n            }\r\n        } else {\r\n            this.set(name, value);\r\n        }\r\n        dmx.requestUpdate(name);\r\n        dmx.requestUpdate(this.name);\r\n    },\r\n\r\n    set: function(name, value) {\r\n        if (typeof name == 'object') {\r\n            for (var prop in name) {\r\n                if (name.hasOwnProperty(prop)) {\r\n                    this.set(prop, name[prop]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (!dmx.equal(this.data[name], value)) {\r\n            this.data[name] = value;\r\n            dmx.requestUpdate(name);\r\n            dmx.requestUpdate(this.name);\r\n        }\r\n    },\r\n\r\n    del: function(name) {\r\n        delete this.data[name];\r\n        dmx.requestUpdate(name);\r\n        dmx.requestUpdate(this.name);    }\r\n});\r\n","(function() {\r\n\r\n/**\r\n * Expose `pathToRegexp`.\r\n */\r\ndmx.pathToRegexp = pathToRegexp\r\ndmx.pathToRegexp.parse = parse\r\ndmx.pathToRegexp.compile = compile\r\ndmx.pathToRegexp.tokensToFunction = tokensToFunction\r\ndmx.pathToRegexp.tokensToRegExp = tokensToRegExp\r\n\r\n/**\r\n * Default configs.\r\n */\r\nvar DEFAULT_DELIMITER = '/'\r\n\r\n/**\r\n * The main path matching regexp utility.\r\n *\r\n * @type {RegExp}\r\n */\r\nvar PATH_REGEXP = new RegExp([\r\n  // Match escaped characters that would otherwise appear in future matches.\r\n  // This allows the user to escape special characters that won't transform.\r\n  '(\\\\\\\\.)',\r\n  // Match Express-style parameters and un-named parameters with a prefix\r\n  // and optional suffixes. Matches appear as:\r\n  //\r\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\r\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\r\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\r\n].join('|'), 'g')\r\n\r\n/**\r\n * Parse a string for the raw tokens.\r\n *\r\n * @param  {string}  str\r\n * @param  {Object=} options\r\n * @return {!Array}\r\n */\r\nfunction parse (str, options) {\r\n  var tokens = []\r\n  var key = 0\r\n  var index = 0\r\n  var path = ''\r\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\r\n  var whitelist = (options && options.whitelist) || undefined\r\n  var pathEscaped = false\r\n  var res\r\n\r\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\r\n    var m = res[0]\r\n    var escaped = res[1]\r\n    var offset = res.index\r\n    path += str.slice(index, offset)\r\n    index = offset + m.length\r\n\r\n    // Ignore already escaped sequences.\r\n    if (escaped) {\r\n      path += escaped[1]\r\n      pathEscaped = true\r\n      continue\r\n    }\r\n\r\n    var prev = ''\r\n    var name = res[2]\r\n    var capture = res[3]\r\n    var group = res[4]\r\n    var modifier = res[5]\r\n\r\n    if (!pathEscaped && path.length) {\r\n      var k = path.length - 1\r\n      var c = path[k]\r\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\r\n\r\n      if (matches) {\r\n        prev = c\r\n        path = path.slice(0, k)\r\n      }\r\n    }\r\n\r\n    // Push the current path onto the tokens.\r\n    if (path) {\r\n      tokens.push(path)\r\n      path = ''\r\n      pathEscaped = false\r\n    }\r\n\r\n    var repeat = modifier === '+' || modifier === '*'\r\n    var optional = modifier === '?' || modifier === '*'\r\n    var pattern = capture || group\r\n    var delimiter = prev || defaultDelimiter\r\n\r\n    tokens.push({\r\n      name: name || key++,\r\n      prefix: prev,\r\n      delimiter: delimiter,\r\n      optional: optional,\r\n      repeat: repeat,\r\n      pattern: pattern\r\n        ? escapeGroup(pattern)\r\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\r\n    })\r\n  }\r\n\r\n  // Push any remaining characters.\r\n  if (path || index < str.length) {\r\n    tokens.push(path + str.substr(index))\r\n  }\r\n\r\n  return tokens\r\n}\r\n\r\n/**\r\n * Compile a string to a template function for the path.\r\n *\r\n * @param  {string}             str\r\n * @param  {Object=}            options\r\n * @return {!function(Object=, Object=)}\r\n */\r\nfunction compile (str, options) {\r\n  return tokensToFunction(parse(str, options))\r\n}\r\n\r\n/**\r\n * Expose a method for transforming tokens into the path function.\r\n */\r\nfunction tokensToFunction (tokens) {\r\n  // Compile all the tokens into regexps.\r\n  var matches = new Array(tokens.length)\r\n\r\n  // Compile all the patterns before compilation.\r\n  for (var i = 0; i < tokens.length; i++) {\r\n    if (typeof tokens[i] === 'object') {\r\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\r\n    }\r\n  }\r\n\r\n  return function (data, options) {\r\n    var path = ''\r\n    var encode = (options && options.encode) || encodeURIComponent\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n      var token = tokens[i]\r\n\r\n      if (typeof token === 'string') {\r\n        path += token\r\n        continue\r\n      }\r\n\r\n      var value = data ? data[token.name] : undefined\r\n      var segment\r\n\r\n      if (Array.isArray(value)) {\r\n        if (!token.repeat) {\r\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\r\n        }\r\n\r\n        if (value.length === 0) {\r\n          if (token.optional) continue\r\n\r\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\r\n        }\r\n\r\n        for (var j = 0; j < value.length; j++) {\r\n          segment = encode(value[j], token)\r\n\r\n          if (!matches[i].test(segment)) {\r\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\r\n          }\r\n\r\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\r\n        }\r\n\r\n        continue\r\n      }\r\n\r\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n        segment = encode(String(value), token)\r\n\r\n        if (!matches[i].test(segment)) {\r\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\r\n        }\r\n\r\n        path += token.prefix + segment\r\n        continue\r\n      }\r\n\r\n      if (token.optional) continue\r\n\r\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\r\n    }\r\n\r\n    return path\r\n  }\r\n}\r\n\r\n/**\r\n * Escape a regular expression string.\r\n *\r\n * @param  {string} str\r\n * @return {string}\r\n */\r\nfunction escapeString (str) {\r\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\r\n}\r\n\r\n/**\r\n * Escape the capturing group by escaping special characters and meaning.\r\n *\r\n * @param  {string} group\r\n * @return {string}\r\n */\r\nfunction escapeGroup (group) {\r\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\r\n}\r\n\r\n/**\r\n * Get the flags for a regexp from the options.\r\n *\r\n * @param  {Object} options\r\n * @return {string}\r\n */\r\nfunction flags (options) {\r\n  return options && options.sensitive ? '' : 'i'\r\n}\r\n\r\n/**\r\n * Pull out keys from a regexp.\r\n *\r\n * @param  {!RegExp} path\r\n * @param  {Array=}  keys\r\n * @return {!RegExp}\r\n */\r\nfunction regexpToRegexp (path, keys) {\r\n  if (!keys) return path\r\n\r\n  // Use a negative lookahead to match only capturing groups.\r\n  var groups = path.source.match(/\\((?!\\?)/g)\r\n\r\n  if (groups) {\r\n    for (var i = 0; i < groups.length; i++) {\r\n      keys.push({\r\n        name: i,\r\n        prefix: null,\r\n        delimiter: null,\r\n        optional: false,\r\n        repeat: false,\r\n        pattern: null\r\n      })\r\n    }\r\n  }\r\n\r\n  return path\r\n}\r\n\r\n/**\r\n * Transform an array into a regexp.\r\n *\r\n * @param  {!Array}  path\r\n * @param  {Array=}  keys\r\n * @param  {Object=} options\r\n * @return {!RegExp}\r\n */\r\nfunction arrayToRegexp (path, keys, options) {\r\n  var parts = []\r\n\r\n  for (var i = 0; i < path.length; i++) {\r\n    parts.push(pathToRegexp(path[i], keys, options).source)\r\n  }\r\n\r\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\r\n}\r\n\r\n/**\r\n * Create a path regexp from string input.\r\n *\r\n * @param  {string}  path\r\n * @param  {Array=}  keys\r\n * @param  {Object=} options\r\n * @return {!RegExp}\r\n */\r\nfunction stringToRegexp (path, keys, options) {\r\n  return tokensToRegExp(parse(path, options), keys, options)\r\n}\r\n\r\n/**\r\n * Expose a function for taking tokens and returning a RegExp.\r\n *\r\n * @param  {!Array}  tokens\r\n * @param  {Array=}  keys\r\n * @param  {Object=} options\r\n * @return {!RegExp}\r\n */\r\nfunction tokensToRegExp (tokens, keys, options) {\r\n  options = options || {}\r\n\r\n  var strict = options.strict\r\n  var start = options.start !== false\r\n  var end = options.end !== false\r\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\r\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\r\n  var route = start ? '^' : ''\r\n\r\n  // Iterate over the tokens and create our regexp string.\r\n  for (var i = 0; i < tokens.length; i++) {\r\n    var token = tokens[i]\r\n\r\n    if (typeof token === 'string') {\r\n      route += escapeString(token)\r\n    } else {\r\n      var capture = token.repeat\r\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\r\n        : token.pattern\r\n\r\n      if (keys) keys.push(token)\r\n\r\n      if (token.optional) {\r\n        if (!token.prefix) {\r\n          route += '(' + capture + ')?'\r\n        } else {\r\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\r\n        }\r\n      } else {\r\n        route += escapeString(token.prefix) + '(' + capture + ')'\r\n      }\r\n    }\r\n  }\r\n\r\n  if (end) {\r\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\r\n\r\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\r\n  } else {\r\n    var endToken = tokens[tokens.length - 1]\r\n    var isEndDelimited = typeof endToken === 'string'\r\n      ? endToken[endToken.length - 1] === delimiter\r\n      : endToken === undefined\r\n\r\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\r\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\r\n  }\r\n\r\n  return new RegExp(route, flags(options))\r\n}\r\n\r\n/**\r\n * Normalize the given path string, returning a regular expression.\r\n *\r\n * An empty array can be passed in for the keys, which will hold the\r\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\r\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\r\n *\r\n * @param  {(string|RegExp|Array)} path\r\n * @param  {Array=}                keys\r\n * @param  {Object=}               options\r\n * @return {!RegExp}\r\n */\r\nfunction pathToRegexp (path, keys, options) {\r\n  if (path instanceof RegExp) {\r\n    return regexpToRegexp(path, keys)\r\n  }\r\n\r\n  if (Array.isArray(path)) {\r\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\r\n  }\r\n\r\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\r\n}\r\n\r\n})();\r\n","if (!window.Hjson) {\r\n    window.Hjson = {};\r\n\r\n    Hjson.parse = function(source) {\r\n        // only parse, stripped dsf and comment support\r\n\r\n        var text;\r\n        var at;   // The index of the current character\r\n        var ch;   // The current character\r\n        var escapee = {\r\n            '\"': '\"',\r\n            \"'\": \"'\",\r\n            '\\\\': '\\\\',\r\n            '/': '/',\r\n            b:  '\\b',\r\n            f:  '\\f',\r\n            n:  '\\n',\r\n            r:  '\\r',\r\n            t:  '\\t'\r\n        };\r\n\r\n        function resetAt() {\r\n            at = 0;\r\n            ch = ' ';\r\n        }\r\n\r\n        function isPunctuatorChar(c) {\r\n            return c === '{' || c === '}' || c === '[' || c === ']' || c === ',' || c === ':';\r\n        }\r\n\r\n        // Call error when something is wrong.\r\n        function error(m) {\r\n            var i, col=0, line=1;\r\n            for (i = at-1; i > 0 && text[i] !== '\\n'; i--, col++) {}\r\n            for (; i > 0; i--) if (text[i] === '\\n') line++;\r\n            throw new Error(m + \" at line \" + line + \",\" + col + \" >>>\" + text.substr(at-col, 20) + \" ...\");\r\n        }\r\n\r\n        function next() {\r\n            // get the next character.\r\n            ch = text.charAt(at);\r\n            at++;\r\n            return ch;\r\n        }\r\n\r\n        function peek(offs) {\r\n            // range check is not required\r\n            return text.charAt(at + offs);\r\n        }\r\n\r\n        function string(allowML) {\r\n            // Parse a string value.\r\n            // callers make sure that (ch === '\"' || ch === \"'\")\r\n            var string = '';\r\n\r\n            // When parsing for string values, we must look for \"/' and \\ characters.\r\n            var exitCh = ch;\r\n            while (next()) {\r\n            if (ch === exitCh) {\r\n                next();\r\n                if (allowML && exitCh === \"'\" && ch === \"'\" && string.length === 0) {\r\n                // ''' indicates a multiline string\r\n                next();\r\n                return mlString();\r\n                } else return string;\r\n            }\r\n            if (ch === '\\\\') {\r\n                next();\r\n                if (ch === 'u') {\r\n                var uffff = 0;\r\n                for (var i = 0; i < 4; i++) {\r\n                    next();\r\n                    var c = ch.charCodeAt(0), hex;\r\n                    if (ch >= '0' && ch <= '9') hex = c - 48;\r\n                    else if (ch >= 'a' && ch <= 'f') hex = c - 97 + 0xa;\r\n                    else if (ch >= 'A' && ch <= 'F') hex = c - 65 + 0xa;\r\n                    else error(\"Bad \\\\u char \" + ch);\r\n                    uffff = uffff * 16 + hex;\r\n                }\r\n                string += String.fromCharCode(uffff);\r\n                } else if (typeof escapee[ch] === 'string') {\r\n                string += escapee[ch];\r\n                } else break;\r\n            } else if (ch === '\\n' || ch === '\\r') {\r\n                error(\"Bad string containing newline\");\r\n            } else {\r\n                string += ch;\r\n            }\r\n            }\r\n            error(\"Bad string\");\r\n        }\r\n\r\n        function mlString() {\r\n            // Parse a multiline string value.\r\n            var string = '', triple = 0;\r\n\r\n            // we are at ''' +1 - get indent\r\n            var indent = 0;\r\n            for (;;) {\r\n            var c=peek(-indent-5);\r\n            if (!c || c === '\\n') break;\r\n            indent++;\r\n            }\r\n\r\n            function skipIndent() {\r\n            var skip = indent;\r\n            while (ch && ch <= ' ' && ch !== '\\n' && skip-- > 0) next();\r\n            }\r\n\r\n            // skip white/to (newline)\r\n            while (ch && ch <= ' ' && ch !== '\\n') next();\r\n            if (ch === '\\n') { next(); skipIndent(); }\r\n\r\n            // When parsing multiline string values, we must look for ' characters.\r\n            for (;;) {\r\n            if (!ch) {\r\n                error(\"Bad multiline string\");\r\n            } else if (ch === '\\'') {\r\n                triple++;\r\n                next();\r\n                if (triple === 3) {\r\n                if (string.slice(-1) === '\\n') string=string.slice(0, -1); // remove last EOL\r\n                return string;\r\n                } else continue;\r\n            } else {\r\n                while (triple > 0) {\r\n                string += '\\'';\r\n                triple--;\r\n                }\r\n            }\r\n            if (ch === '\\n') {\r\n                string += '\\n';\r\n                next();\r\n                skipIndent();\r\n            } else {\r\n                if (ch !== '\\r') string += ch;\r\n                next();\r\n            }\r\n            }\r\n        }\r\n\r\n        function keyname() {\r\n            // quotes for keys are optional in Hjson\r\n            // unless they include {}[],: or whitespace.\r\n\r\n            if (ch === '\"' || ch === \"'\") return string(false);\r\n\r\n            var name = \"\", start = at, space = -1;\r\n            for (;;) {\r\n            if (ch === ':') {\r\n                if (!name) error(\"Found ':' but no key name (for an empty key name use quotes)\");\r\n                else if (space >=0 && space !== name.length) { at = start + space; error(\"Found whitespace in your key name (use quotes to include)\"); }\r\n                return name;\r\n            } else if (ch <= ' ') {\r\n                if (!ch) error(\"Found EOF while looking for a key name (check your syntax)\");\r\n                else if (space < 0) space = name.length;\r\n            } else if (isPunctuatorChar(ch)) {\r\n                error(\"Found '\" + ch + \"' where a key name was expected (check your syntax or use quotes if the key name includes {}[],: or whitespace)\");\r\n            } else {\r\n                name += ch;\r\n            }\r\n            next();\r\n            }\r\n        }\r\n\r\n        function white() {\r\n            while (ch) {\r\n            // Skip whitespace.\r\n            while (ch && ch <= ' ') next();\r\n            // Hjson allows comments\r\n            if (ch === '#' || ch === '/' && peek(0) === '/') {\r\n                while (ch && ch !== '\\n') next();\r\n            } else if (ch === '/' && peek(0) === '*') {\r\n                next(); next();\r\n                while (ch && !(ch === '*' && peek(0) === '/')) next();\r\n                if (ch) { next(); next(); }\r\n            } else break;\r\n            }\r\n        }\r\n\r\n        function tfnns() {\r\n            // Hjson strings can be quoteless\r\n            // returns string, true, false, or null.\r\n            var value = ch;\r\n            if (isPunctuatorChar(ch))\r\n            error(\"Found a punctuator character '\" + ch + \"' when expecting a quoteless string (check your syntax)\");\r\n\r\n            for(;;) {\r\n            next();\r\n            // (detection of ml strings was moved to string())\r\n            var isEol = ch === '\\r' || ch === '\\n' || ch === '';\r\n            if (isEol ||\r\n                ch === ',' || ch === '}' || ch === ']' ||\r\n                ch === '#' ||\r\n                ch === '/' && (peek(0) === '/' || peek(0) === '*')\r\n                ) {\r\n                // this tests for the case of {true|false|null|num}\r\n                // followed by { ',' | '}' | ']' | '#' | '//' | '/*' }\r\n                // which needs to be parsed as the specified value\r\n                var chf = value[0];\r\n                switch (chf) {\r\n                case 'f': if (value.trim() === \"false\") return false; break;\r\n                case 'n': if (value.trim() === \"null\") return null; break;\r\n                case 't': if (value.trim() === \"true\") return true; break;\r\n                default:\r\n                    if (chf === '-' || chf >= '0' && chf <= '9') {\r\n                    var n = tryParseNumber(value);\r\n                    if (n !== undefined) return n;\r\n                    }\r\n                }\r\n                if (isEol) {\r\n                // remove any whitespace at the end (ignored in quoteless strings)\r\n                return value.trim();\r\n                }\r\n            }\r\n            value += ch;\r\n            }\r\n        }\r\n\r\n        function tryParseNumber(text, stopAtNext) {\r\n            // try to parse a number\r\n            \r\n            var number, string = '', leadingZeros = 0, testLeading = true;\r\n            var at = 0;\r\n            var ch;\r\n            function next() {\r\n                ch = text.charAt(at);\r\n                at++;\r\n                return ch;\r\n            }\r\n            \r\n            next();\r\n            if (ch === '-') {\r\n                string = '-';\r\n                next();\r\n            }\r\n            while (ch >= '0' && ch <= '9') {\r\n                if (testLeading) {\r\n                    if (ch == '0') leadingZeros++;\r\n                    else testLeading = false;\r\n                }\r\n                string += ch;\r\n                next();\r\n            }\r\n            if (testLeading) leadingZeros--; // single 0 is allowed\r\n            if (ch === '.') {\r\n                string += '.';\r\n                while (next() && ch >= '0' && ch <= '9')\r\n                    string += ch;\r\n            }\r\n            if (ch === 'e' || ch === 'E') {\r\n                string += ch;\r\n                next();\r\n                if (ch === '-' || ch === '+') {\r\n                    string += ch;\r\n                    next();\r\n                }\r\n                while (ch >= '0' && ch <= '9') {\r\n                    string += ch;\r\n                    next();\r\n                }\r\n            }\r\n            \r\n            // skip white/to (newline)\r\n            while (ch && ch <= ' ') next();\r\n            \r\n            if (stopAtNext) {\r\n                // end scan if we find a punctuator character like ,}] or a comment\r\n                if (ch === ',' || ch === '}' || ch === ']' ||\r\n                    ch === '#' || ch === '/' && (text[at] === '/' || text[at] === '*')) ch = 0;\r\n            }\r\n            \r\n            number = +string;\r\n            if (ch || leadingZeros || !isFinite(number)) return undefined;\r\n            else return number;\r\n        }\r\n        \r\n        function errorClosingHint(value) {\r\n            function search(value, ch) {\r\n                var i, k, length, res;\r\n                switch (typeof value) {\r\n                case 'string':\r\n                    if (value.indexOf(ch) >= 0) res = value;\r\n                    break;\r\n                case 'object':\r\n                    if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n                        for (i = 0, length = value.length; i < length; i++) {\r\n                            res=search(value[i], ch) || res;\r\n                        }\r\n                    } else {\r\n                        for (k in value) {\r\n                            if (!Object.prototype.hasOwnProperty.call(value, k)) continue;\r\n                            res=search(value[k], ch) || res;\r\n                        }\r\n                    }\r\n                }\r\n                return res;\r\n            }\r\n        \r\n            function report(ch) {\r\n                var possibleErr=search(value, ch);\r\n                if (possibleErr) {\r\n                    return \"found '\"+ch+\"' in a string value, your mistake could be with:\\n\"+\r\n                        \"  > \"+possibleErr+\"\\n\"+\r\n                        \"  (unquoted strings contain everything up to the next line!)\";\r\n                } else return \"\";\r\n            }\r\n        \r\n            return report('}') || report(']');\r\n        }\r\n\r\n        function array() {\r\n            // Parse an array value.\r\n            // assuming ch === '['\r\n        \r\n            var array = [];\r\n            try {\r\n                next();\r\n                white();\r\n                if (ch === ']') {\r\n                next();\r\n                return array;  // empty array\r\n                }\r\n        \r\n                while (ch) {\r\n                array.push(value());\r\n                white();\r\n                // in Hjson the comma is optional and trailing commas are allowed\r\n                // note that we do not keep comments before the , if there are any\r\n                if (ch === ',') { next(); white(); }\r\n                if (ch === ']') {\r\n                    next();\r\n                    return array;\r\n                }\r\n                white();\r\n                }\r\n        \r\n                error(\"End of input while parsing an array (missing ']')\");\r\n            } catch (e) {\r\n                e.hint=e.hint||errorClosingHint(array);\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        function object(withoutBraces) {\r\n            // Parse an object value.\r\n        \r\n            var key = \"\", object = {};\r\n        \r\n            try {\r\n                if (!withoutBraces) {\r\n                    // assuming ch === '{'\r\n                    next();\r\n                }\r\n\r\n                white();\r\n                if (ch === '}' && !withoutBraces) {\r\n                    next();\r\n                    return object;  // empty object\r\n                }\r\n                while (ch) {\r\n                    key = keyname();\r\n                    white();\r\n                    if (ch !== ':') error(\"Expected ':' instead of '\" + ch + \"'\");\r\n                    next();\r\n                    // duplicate keys overwrite the previous value\r\n                    object[key] = value();\r\n                    white();\r\n                    // in Hjson the comma is optional and trailing commas are allowed\r\n                    // note that we do not keep comments before the , if there are any\r\n                    if (ch === ',') { next(); white(); }\r\n                    if (ch === '}' && !withoutBraces) {\r\n                        next();\r\n                        return object;\r\n                    }\r\n                    white();\r\n                }\r\n        \r\n                if (withoutBraces) return object;\r\n                else error(\"End of input while parsing an object (missing '}')\");\r\n            } catch (e) {\r\n                e.hint=e.hint||errorClosingHint(object);\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        function value() {\r\n            // Parse a Hjson value. It could be an object, an array, a string, a number or a word.\r\n        \r\n            white();\r\n            switch (ch) {\r\n                case '{': return object();\r\n                case '[': return array();\r\n                case \"'\":\r\n                case '\"': return string(true);\r\n                default: return tfnns();\r\n            }\r\n        }\r\n\r\n        function checkTrailing(v) {\r\n            white();\r\n            if (ch) error(\"Syntax error, found trailing characters\");\r\n            return v;\r\n        }\r\n\r\n        function rootValue() {\r\n            white();\r\n            switch (ch) {\r\n                case '{': return checkTrailing(object());\r\n                case '[': return checkTrailing(array());\r\n                default: return checkTrailing(value());\r\n            }\r\n        }\r\n\r\n        if (typeof source!==\"string\") throw new Error(\"source is not a string\");\r\n        text = source;\r\n        resetAt();\r\n        return rootValue();\r\n    };\r\n}","dmx.Flow = dmx.createClass({\r\n\r\n    constructor: function(parent) {\r\n        if (!(this instanceof dmx.Flow)) {\r\n            return new dmx.Flow(parent);\r\n        }\r\n\r\n        if (!window.Promise) {\r\n            console.warn('Promises are not supported, flows can not be used');\r\n        }\r\n\r\n        this._execStep = this._execStep.bind(this);\r\n\r\n        this.scope = new dmx.DataScope({}, parent);\r\n        this.output = {};\r\n    },\r\n\r\n    run: function(flow) {\r\n        var self = this;\r\n\r\n        this.output = {};\r\n\r\n        return this._exec(flow.exec || flow).then(function() {\r\n            if (dmx.debug) {\r\n                console.debug('finished', self.output);\r\n            }\r\n            return self.output;\r\n        });\r\n    },\r\n\r\n    _each: function(arr, fn) {\r\n        return Promise.resolve(arr).then(function(arr) {\r\n            arr = Array.isArray(arr) ? arr : [arr];\r\n\r\n            return arr.reduce(function(prev, curr, i) {\r\n                return prev.then(function() {\r\n                    return fn(curr, i, arr.length).then(function(result) {\r\n                        if (result) {\r\n                            arr[i] = result;\r\n                        }\r\n                    });\r\n                });\r\n            }, Promise.resolve()).then(function() {\r\n                return arr;\r\n            });\r\n        });\r\n    },\r\n\r\n    _exec: function(flow) {\r\n        var self = this;\r\n\r\n        if (flow.steps) {\r\n            var promise = this._each(flow.steps, this._execStep);\r\n            \r\n            if (flow.catch) {\r\n                promise.catch(function(err) {\r\n                    return self._each(flow.catch, self._execStep);\r\n                });\r\n            }\r\n            \r\n            return promise;\r\n        }\r\n\r\n        return this._each(flow, this._execStep);\r\n    },\r\n\r\n    _execStep: function(step) {\r\n        var self = this;\r\n\r\n        if (dmx.debug) {\r\n            console.debug('exec step', step);\r\n        }\r\n\r\n        for (var name in step) {\r\n            if (step.hasOwnProperty(name) && dmx.__actions[name]) {\r\n                var action = dmx.__actions[name].bind(this);\r\n                var options = step[name];\r\n\r\n                if (dmx.debug) {\r\n                    console.debug('exec action', name, options);\r\n                }\r\n\r\n                if (options.disabled) {\r\n                    return Promise.resolve();\r\n                }\r\n                \r\n                return Promise.resolve(action(options)).then(function(output) {\r\n                    if (options.name) {\r\n                        //self.data[options.name] = output\r\n                        if (dmx.debug) {\r\n                            console.debug('set data', options.name, output);\r\n                        }\r\n                        \r\n                        self.scope.set(options.name, output);\r\n\r\n                        if (options.output) {\r\n                            if (dmx.debug) {\r\n                                console.debug('set output', options.name, output);\r\n                            }\r\n                            self.output[options.name] = output;\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                throw new Error('Action ' + name + ' was not found.');\r\n            }\r\n        }\r\n    },\r\n\r\n    parse: function(value) {\r\n        if (value == null) return value;\r\n\r\n        value = value.valueOf();\r\n\r\n        if (typeof value == 'object') {\r\n            var obj = value.slice ? [] : {};\r\n\r\n            for (var key in value) {\r\n                if (value.hasOwnProperty(key)) {\r\n                    obj[key] = this.parse(value[key], this.scope);\r\n                }\r\n            }\r\n\r\n            return obj;\r\n        }\r\n\r\n        if (typeof value == 'string' && value.indexOf('{{') != -1) {\r\n            return dmx.parse(value, this.scope);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n});\r\n\r\ndmx.Flow.run = function(flow, data) {\r\n    var instance = new dmx.Flow(data);\r\n    return instance.run(flow);\r\n};\r\n","dmx.Component('app', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.onload = this.onload.bind(this);\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        query: {}\r\n    },\r\n\r\n    attributes: {},\r\n\r\n    methods: {},\r\n\r\n    events: {\r\n        ready: Event,\r\n        load: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        this.parseQuery();\r\n        this.$parse();\r\n        window.removeEventListener('load', this.onload);\r\n        window.addEventListener('load', this.onload);\r\n        dmx.nextTick(function() {\r\n            this.dispatchEvent('ready');\r\n        }, this);\r\n    },\r\n\r\n    update: function() {\r\n        this.parseQuery();\r\n    },\r\n\r\n    onload: function() {\r\n        this.dispatchEvent('load');\r\n    },\r\n\r\n    parseQuery: function() {\r\n        var querystring = '';\r\n\r\n        if (window.location.search) {\r\n            querystring = window.location.search.substr(1);\r\n        } else if (window.location.hash.indexOf('?')) {\r\n            querystring = window.location.hash.substr(window.location.hash.indexOf('?') + 1);\r\n            if (querystring.indexOf('#') > 0) {\r\n                querystring = querystring.substr(0, querystring.indexOf('#'));\r\n            }\r\n        }\r\n\r\n        var query = querystring.split('&').reduce(function(query, part) {\r\n            var p = part.replace(/\\+/g, ' ').split('=');\r\n            if (p[0]) {\r\n                query[decodeURIComponent(p[0])] = decodeURIComponent(p[1] || '');\r\n            }\r\n            return query;\r\n        }, {});\r\n\r\n        var base = document.querySelector('meta[name=\"ac:base\"]');\r\n        var route = document.querySelector('meta[name=\"ac:route\"]');\r\n        if (route && route.content) {\r\n            var keys = [];\r\n            var path = route.content;\r\n\r\n            if (base && base.content) {\r\n                path = base.content.replace(/\\/$/, '') + path;\r\n            }\r\n\r\n            var re = dmx.pathToRegexp(path, keys, { end: false });\r\n            var match = re.exec(decodeURI(window.location.pathname));\r\n\r\n            if (match) {\r\n                keys.forEach(function(key, index) {\r\n                    query[key.name] = match[index + 1];\r\n                });\r\n            }\r\n        }\r\n\r\n        this.set('query', query);\r\n    }\r\n\r\n});\r\n","dmx.Component('form', {\r\n\r\n    tag: 'form',\r\n\r\n    attributes: {\r\n        novalidate: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        submit: function(direct) {\r\n            if (direct) {\r\n                this._submit();\r\n            } else {\r\n                this.submit();\r\n            }\r\n        },\r\n\r\n        reset: function() {\r\n            this.reset();\r\n        },\r\n\r\n        validate: function() {\r\n            this.validate();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        invalid: Event, // when form validation failed\r\n        submit: Event // on form submit (can cancel submit)\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.$node.noValidate = true;\r\n        this.$node.addEventListener('submit', this.onsubmit.bind(this));\r\n        this.$node.addEventListener('reset', this.onreset.bind(this));\r\n    },\r\n\r\n    submit: function(data) {\r\n        if (this.props.novalidate || this.validate()) {\r\n            if (this.dispatchEvent('submit', { cancelable: true })) {\r\n                this._submit();\r\n            }\r\n        } else {\r\n            dmx.requestUpdate();\r\n            this.dispatchEvent('invalid');\r\n            var elm = dmx.array(this.$node.elements).find(function(elm) {\r\n              if (!elm.validity.valid) return true;\r\n            });\r\n            if (elm) {\r\n              elm.focus();\r\n            }\r\n        }\r\n    },\r\n\r\n    _submit: function() {\r\n        //this.$node.submit();\r\n        HTMLFormElement.prototype.submit.call(this.$node);\r\n    },\r\n\r\n    reset: function() {\r\n        //this.$node.reset();\r\n        HTMLFormElement.prototype.reset.call(this.$node);\r\n    },\r\n\r\n    validate: function() {\r\n        return dmx.validate(this.$node);\r\n    },\r\n\r\n    onsubmit: function(event) {\r\n        event.preventDefault();\r\n        this.submit();\r\n    },\r\n\r\n    onreset: function(event) {\r\n        dmx.validateReset(this.$node);\r\n        if (window.grecaptcha && this.$node.querySelector('.g-recaptcha')) {\r\n            grecaptcha.reset();\r\n        }\r\n        dmx.requestUpdate();\r\n    }\r\n\r\n});\r\n","dmx.Component('form-element', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.updateData = dmx.debounce(this.updateData.bind(this));\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        value: '',\r\n        disabled: false,\r\n        validationMessage: '',\r\n        invalid: false,\r\n        focused: false\r\n    },\r\n\r\n    attributes: {\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(value) {\r\n            this.setValue(value);\r\n        },\r\n\r\n        focus: function() {\r\n            this.focus();\r\n        },\r\n\r\n        disable: function(disable) {\r\n            this.disable(disable);\r\n        },\r\n\r\n        validate: function() {\r\n            this.validate();\r\n        }\r\n    },\r\n\r\n    events: {\r\n        updated: Event,\r\n        changed: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.$node.value = this.props.value || '';\r\n        this.$node.disabled = this.props.disabled;\r\n        this.$node.defaultValue = this.props.value || '';\r\n        this.$node.addEventListener('input', this.updateData.bind(this));\r\n        this.$node.addEventListener('change', this.updateData.bind(this));\r\n        this.$node.addEventListener('invalid', this.updateData.bind(this));\r\n        this.$node.addEventListener('focus', this.updateData.bind(this));\r\n        this.$node.addEventListener('blur', this.updateData.bind(this));\r\n        //this.set('value', this.props.value || '');\r\n        //this.set('disabled', this.props.disabled);\r\n        this.updateData();\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('value')) {\r\n            this.$node.defaultValue = this.props.value || '';\r\n            this.setValue(this.props.value);\r\n        }\r\n\r\n        if (props.disabled != this.props.disabled) {\r\n            this.$node.disabled = this.props.disabled;\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        if (event && this.$node.dirty) {\r\n            dmx.validate(this.$node);\r\n        }\r\n\r\n        if (this.$node.value !== this.data.value) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n                if (event) this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n\r\n        this.set('value', this.$node.value);\r\n        this.set('disabled', this.$node.disabled);\r\n        this.set('focused', this.$node === document.activeElement);\r\n\r\n        if (this.$node.dirty) {\r\n            this.set('invalid', !this.$node.validity.valid);\r\n            this.set('validationMessage', this.$node.validationMessage);\r\n        }\r\n    },\r\n\r\n    setValue: function(value) {\r\n        this.$node.value = value || '';\r\n        this.updateData();\r\n    },\r\n\r\n    focus: function() {\r\n        this.$node.focus();\r\n    },\r\n\r\n    disable: function(disable) {\r\n        this.$node.disabled = (disable === true);\r\n        this.updateData();\r\n    },\r\n\r\n    validate: function() {\r\n        dmx.validate(this.$node);\r\n        this.updateData();\r\n    }\r\n\r\n});\r\n","dmx.Component('textarea', {\r\n\r\n    extends: 'form-element',\r\n\r\n    tag: 'textarea',\r\n\r\n    render: function(node) {\r\n        if (!this.props.value) {\r\n            var value = this.$node.value;\r\n            if (value.indexOf('{{') !== -1) {\r\n                this.props.value = dmx.parse(value, this);\r\n            } else {\r\n                this.props.value = value;\r\n            }\r\n        }\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n    }\r\n\r\n});\r\n","dmx.Component('input', {\r\n    extends: 'form-element',\r\n    tag: 'input'\r\n});\r\n","dmx.Component('input-file', {\r\n\r\n    extends: 'input',\r\n\r\n    initialData:{\r\n        file: null\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.$node.addEventListener('change', this.onchange.bind(this));\r\n        if (this.$node.form) {\r\n            this.$node.form.addEventListener('reset', this.onchange.bind(this));\r\n        }\r\n    },\r\n\r\n    onchange: function() {\r\n        var data = null;\r\n\r\n        if (this.$node.files.length) {\r\n            var file = this.$node.files[0];\r\n\r\n            data = {\r\n                date: (file.lastModified ? new Date(file.lastModified) : file.lastModifiedDate).toISOString(),\r\n                name: file.name,\r\n                size: file.size,\r\n                type: file.type,\r\n                dataUrl: null\r\n            };\r\n\r\n            if (file.type.indexOf('image/') !== -1 && !file.reader) {\r\n                file.reader = new FileReader();\r\n\r\n                file.reader.onload = function(event) {\r\n                    data.dataUrl = event.target.result;\r\n                    dmx.requestUpdate();\r\n                };\r\n\r\n                file.reader.readAsDataURL(file);\r\n            }\r\n        }\r\n\r\n        this.set('file', data);\r\n    },\r\n\r\n    setValue: function() {\r\n        console.warn('Can not set value of a file input!');\r\n    }\r\n\r\n});\r\n","dmx.Component('input-file-multiple', {\r\n\r\n    extends: 'input',\r\n\r\n    initialData: {\r\n        files: []\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.$node.addEventListener('change', this.onchange.bind(this));\r\n        if (this.$node.form) {\r\n            this.$node.form.addEventListener('reset', this.onchange.bind(this));\r\n        }\r\n    },\r\n\r\n    onchange: function() {\r\n        var self = this;\r\n        var files = Array.prototype.slice.call(this.$node.files).map(function(file) {\r\n            var data = {\r\n                date: (file.lastModified ? new Date(file.lastModified) : file.lastModifiedDate).toISOString(),\r\n                name: file.name,\r\n                size: file.size,\r\n                type: file.type,\r\n                dataUrl: null\r\n            };\r\n\r\n            if (file.type.indexOf('image/') !== -1 && !file.reader) {\r\n                file.reader = new FileReader();\r\n\r\n                file.reader.onload = function(event) {\r\n                    data.dataUrl = event.target.result;\r\n                    dmx.requestUpdate();\r\n                };\r\n\r\n                file.reader.readAsDataURL(file);\r\n            }\r\n\r\n            return data;\r\n        });\r\n\r\n        this.set('files', files);\r\n    },\r\n\r\n    setValue: function() {\r\n        console.warn('Can not set value of a file input!');\r\n    }\r\n\r\n});\r\n","dmx.Component('input-number', {\r\n\r\n    extends: 'input',\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.set('value', +this.props.value);\r\n    },\r\n\r\n    updateData: function(event) {\r\n        if (event && this.$node.dirty) {\r\n            dmx.validate(this.$node);\r\n        }\r\n\r\n        if (this.$node.value !== this.data.value) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n                if (event) this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n        this.set('value', this.$node.value ? +this.$node.value : null);\r\n        this.set('disabled', this.$node.disabled);\r\n\r\n        if (this.$node.dirty) {\r\n            this.set('invalid', !this.$node.validity.valid);\r\n            this.set('validationMessage', this.$node.validationMessage);\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Component('button', {\r\n\r\n    extends: 'form-element',\r\n\r\n    tag: 'button',\r\n\r\n    attributes: {\r\n        type: {\r\n            type: String,\r\n            default: 'button', // button, reset, submit\r\n            validate: function(val) {\r\n                return /^(button|submit|reset)$/i.test(val);\r\n            }\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.$node.type = this.props.type;\r\n    }\r\n\r\n});\r\n","dmx.Component('radio', {\r\n\r\n    extends: 'form-element',\r\n\r\n    initialData: {\r\n        checked: false\r\n    },\r\n\r\n    tag: 'input',\r\n\r\n    attributes: {\r\n        checked: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        select: function(check) {\r\n            this.select(check);\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.$node.addEventListener('click', this.updateData.bind(this));\r\n        this.$node.type = 'radio';\r\n        this.$node.checked = this.props.checked;\r\n        this.$node.defaultChecked = this.props.checked;\r\n        this.set('checked', this.props.checked);\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        dmx.Component('form-element').prototype.update.call(this, props, fields);\r\n\r\n        if (props.checked !== this.props.checked) {\r\n            this.$node.checked = this.props.checked;\r\n            this.$node.defaultChecked = this.props.checked;\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        dmx.Component('form-element').prototype.updateData.call(this, event);\r\n        if (this.data.checked != this.$node.checked) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n                if (event) this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n        this.set('checked', this.$node.checked);\r\n    },\r\n\r\n    select: function(check) {\r\n        this.$node.checked = (check !== false);\r\n    }\r\n\r\n});\r\n","dmx.Component('radio-group', {\r\n\r\n    initialData: {\r\n        value: ''\r\n    },\r\n\r\n    tag: 'div',\r\n\r\n    attributes: {\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(value) {\r\n            this.setValue(value);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        updated: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.setValue(this.props.value);\r\n    },\r\n\r\n    update: function(props) {\r\n        dmx.BaseComponent.prototype.update.call(this, props);\r\n\r\n        if (props.value != this.props.value) {\r\n            this.updateValue = true;\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    updated: function() {\r\n        if (this.updateValue) {\r\n            this.updateValue = false;\r\n            this.setValue(this.props.value, true);\r\n        }\r\n\r\n        var values = Array.prototype.slice.call(this.$node.querySelectorAll('input[type=radio]')).filter(function(radio) {\r\n            return !radio.disabled && radio.checked;\r\n        }).map(function(radio) {\r\n            return radio.value || 1;\r\n        });\r\n\r\n        if (!dmx.equal(this.data.value, values[0])) {\r\n        //if (JSON.stringify(this.data.value) != JSON.stringify(values[0])) {\r\n            this.set('value', values[0]);\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    setValue: function(value, isDefault) {\r\n        Array.prototype.slice.call(this.$node.querySelectorAll('input[type=radio]')).forEach(function(radio) {\r\n            radio.checked = radio.value == value;\r\n            if (isDefault) radio.defaultChecked = radio.checked;\r\n        });\r\n        this.updated();\r\n    }\r\n\r\n});\r\n","dmx.Component('checkbox', {\r\n\r\n    extends: 'form-element',\r\n\r\n    initialData: {\r\n        checked: false\r\n    },\r\n\r\n    tag: 'input',\r\n\r\n    attributes: {\r\n        checked: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        select: function(check) {\r\n            this.select(check);\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n        this.$node.addEventListener('click', this.updateData.bind(this));\r\n        this.$node.type = 'checkbox';\r\n        this.$node.checked = this.props.checked;\r\n        this.$node.defaultChecked = this.props.checked;\r\n        this.set('checked', this.props.checked);\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        dmx.Component('form-element').prototype.update.call(this, props, fields);\r\n\r\n        if (props.checked !== this.props.checked) {\r\n            this.$node.checked = this.props.checked;\r\n            this.$node.defaultChecked = this.props.checked;\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        dmx.Component('form-element').prototype.updateData.call(this, event);\r\n        if (this.data.checked != this.$node.checked) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n                if (event) this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n        this.set('checked', this.$node.checked);\r\n    },\r\n\r\n    select: function(check) {\r\n        this.$node.checked = (check !== false);\r\n    }\r\n\r\n});\r\n","dmx.Component('checkbox-group', {\r\n\r\n    initialData: {\r\n        value: []\r\n    },\r\n\r\n    tag: 'div',\r\n\r\n    attributes: {\r\n        value: {\r\n            type: Array,\r\n            default: []\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(value) {\r\n            this.setValue(value);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        updated: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.setValue(this.props.value);\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        dmx.BaseComponent.prototype.update.call(this, props, fields);\r\n\r\n        if (fields.has('value')) {\r\n            this.updateValue = true;\r\n        }\r\n    },\r\n\r\n    updated: function() {\r\n        if (this.updateValue) {\r\n            this.updateValue = false;\r\n            this.setValue(this.props.value);\r\n        }\r\n\r\n        var value = Array.prototype.slice.call(this.$node.querySelectorAll('input[type=checkbox]')).filter(function(checkbox) {\r\n            return !checkbox.disabled && checkbox.checked;\r\n        }).map(function(checkbox) {\r\n            return checkbox.value || 1;\r\n        });\r\n\r\n        if (!dmx.equal(this.data.value, value)) {\r\n        //if (JSON.stringify(this.data.value) != JSON.stringify(value)) {\r\n            this.set('value', value);\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    setValue: function(value, isDefault) {\r\n        if (!Array.isArray(value)) value = [value];\r\n        Array.prototype.slice.call(this.$node.querySelectorAll('input[type=checkbox]')).forEach(function(checkbox) {\r\n            checkbox.checked = value.indexOf(checkbox.value) > -1;\r\n            if (isDefault) checkbox.defaultChecked = checkbox.checked;\r\n        });\r\n        this.updated();\r\n    }\r\n\r\n});\r\n","dmx.Component('select', {\r\n\r\n    extends: 'form-element',\r\n\r\n    initialData: {\r\n        selectedIndex: -1,\r\n        selectedValue: '',\r\n        selectedText: ''\r\n    },\r\n\r\n    tag: 'select',\r\n\r\n    attributes: {\r\n        options: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n        optionText: {\r\n            type: String,\r\n            default: '$value'\r\n        },\r\n        optionValue: {\r\n            type: String,\r\n            default: '$value'\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setSelectedIndex: function(index) {\r\n            this.$node.selectedIndex = index;\r\n            this.updateData();\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        this.options = [];\r\n        if (!this.props.value) {\r\n            this.props.value = this.$node.value;\r\n        } else {\r\n            this.updateValue = true;\r\n        }\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.$node.disabled = this.props.disabled;\r\n        this.$node.addEventListener('change', this.updateData.bind(this));\r\n        this.$node.addEventListener('invalid', this.updateData.bind(this));\r\n        this.$node.addEventListener('focus', this.updateData.bind(this));\r\n        this.$node.addEventListener('blur', this.updateData.bind(this));\r\n        this.renderOptions();\r\n        this.updateData();\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('options')) {\r\n            this.renderOptions();\r\n            this.updateValue = true;\r\n        }\r\n\r\n        if (fields.has('value')) {\r\n            this.updateValue = true;\r\n        }\r\n\r\n        if (props.disabled != this.props.disabled) {\r\n            this.$node.disabled = this.props.disabled;\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updated: function() {\r\n        if (this.updateValue) {\r\n            this.updateValue = false;\r\n            this.setValue(this.props.value, true);\r\n            this.updateData();\r\n        }\r\n    },\r\n\r\n    updateData: function(event) {\r\n        dmx.Component('form-element').prototype.updateData.call(this, event);\r\n        var selectedIndex = this.$node.selectedIndex;\r\n        this.set('selectedIndex', selectedIndex);\r\n        this.set('selectedValue', this.$node.options[selectedIndex] && this.$node.options[selectedIndex].value || '');\r\n        this.set('selectedText', this.$node.options[selectedIndex] && this.$node.options[selectedIndex].text || '');\r\n    },\r\n\r\n    setValue: function(value, isDefault) {\r\n        dmx.array(this.$node.options).forEach(function(option) {\r\n            option.selected = (option.value == value);\r\n            if (isDefault) option.defaultSelected = option.selected;\r\n        });\r\n    },\r\n\r\n    renderOptions: function() {\r\n        this.options.splice(0).forEach(function(node) {\r\n            dmx.dom.remove(node);\r\n        });\r\n        \r\n        dmx.repeatItems(this.props.options).forEach(function(option) {\r\n            if (typeof option != 'object') option = { $value: option };\r\n            var node = document.createElement('option');\r\n            node.value = dmx.parse(this.props.optionValue, dmx.DataScope(option, this));\r\n            node.innerText = dmx.parse(this.props.optionText, dmx.DataScope(option, this));\r\n            this.options.push(this.$node.appendChild(node));\r\n        }, this);\r\n    }\r\n\r\n});\r\n","dmx.Component('select-multiple', {\r\n\r\n    extends: 'select',\r\n\r\n    initialData: {\r\n        value: []\r\n    },\r\n\r\n    attributes: {\r\n        value: {\r\n            type: Array,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setSelectedIndex: function(index) {\r\n            this.$node.selectedIndex = index;\r\n            this.updateData();\r\n        }\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('options')) {\r\n            this.renderOptions();\r\n            this.updateValue = true;\r\n        }\r\n\r\n        if (fields.has('value')) {\r\n            this.updateValue = true;\r\n        }\r\n\r\n        if (props.disabled != this.props.disabled) {\r\n            this.$node.disabled = this.props.disabled;\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        var value = Array.prototype.slice.call(this.$node.options).filter(function(option) {\r\n            return option.selected;\r\n        }).map(function(option) {\r\n            return option.value;\r\n        });\r\n\r\n        if (!dmx.equal(this.data.value, value)) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n                if (event) this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n\r\n        this.set('value', value);\r\n        this.set('disabled', this.$node.disabled);\r\n        this.set('invalid', !this.$node.validity.valid);\r\n        this.set('focused', this.$node === document.activeElement);\r\n        this.set('validationMessage', this.$node.validationMessage);\r\n        \r\n        var selectedIndex = this.$node.selectedIndex;\r\n        this.set('selectedIndex', selectedIndex);\r\n        this.set('selectedValue', this.$node.options[selectedIndex] && this.$node.options[selectedIndex].value || '');\r\n        this.set('selectedText', this.$node.options[selectedIndex] && this.$node.options[selectedIndex].text || '');\r\n    },\r\n\r\n    setValue: function(value, isDefault) {\r\n        if (!Array.isArray(value)) value = [value];\r\n        value = value.map(function(v) { return v.toString(); });\r\n        dmx.array(this.$node.options).forEach(function(option) {\r\n            option.selected = value.indexOf(option.value) > -1;\r\n            if (isDefault) option.defaultSelected = option.selected;\r\n        });\r\n    }\r\n\r\n});\r\n","dmx.Component('value', {\r\n\r\n    initialData: {\r\n        value: null\r\n    },\r\n\r\n    attributes: {\r\n        value: {\r\n            default: null\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(value) {\r\n            if (this.data.value !== value) {\r\n                this.set('value', value);\r\n                dmx.nextTick(function() {\r\n                    this.dispatchEvent('updated');\r\n                }, this);\r\n            }\r\n        }\r\n    },\r\n\r\n    events: {\r\n        updated: Event\r\n    },\r\n\r\n    render: function() {\r\n        this.set('value', this.props.value);\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('value')) {\r\n            this.set('value', this.props.value);\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Component('repeat', {\r\n\r\n    initialData: {\r\n        items: []\r\n    },\r\n\r\n    attributes: {\r\n        repeat: {\r\n            type: [Array, Object, Number],\r\n            default: []\r\n        },\r\n\r\n        key: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        rerender: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    events: {\r\n        update: Event,\r\n        updated: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        this.prevItems = [];\r\n        this.childKeys = {};\r\n        this.$template = document.createDocumentFragment();\r\n        while (this.$node.hasChildNodes()) {\r\n            this.$template.appendChild(this.$node.firstChild);\r\n        }\r\n        // call update for first inital data\r\n        this.update({ repeat: [] }, new Set(['repeat']));\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('repeat')) {\r\n            if (fields.has('key')) this._rerender = true;\r\n            if (!this._willUpdate) {\r\n                this._willUpdate = true;\r\n                //requestAnimationFrame(() => this._update());\r\n                // Want to do DOM updates on animation frame for less DOM updates\r\n                // but then components and data from repeat children comes very late\r\n                // for now on nextTick to do it as fast as posible\r\n                dmx.nextTick(this._update, this);\r\n            }\r\n        }\r\n    },\r\n\r\n    _update: function() {\r\n        this._willUpdate = false;\r\n\r\n        this.dispatchEvent('update');\r\n\r\n        if (this.props.rerender || this._rerender) {\r\n            this._rerender = false;\r\n            this._clear();\r\n        }\r\n\r\n        var RepeatItem = dmx.Component('repeat-item');\r\n        var repeat = this.props.repeat;\r\n        var items = dmx.repeatItems(repeat);\r\n\r\n        if (items.length) {\r\n            if (!this.props.rerender && this.props.key && items[0].hasOwnProperty(this.props.key) && this.prevItems.length) {\r\n                // keyed repeater (https://github.com/localvoid/kivi/blob/master/lib/vnode.ts#L1320-L1513)\r\n                var key = this.props.key;\r\n                var a = this.prevItems;\r\n                var b = this._clone(items);\r\n                var aStart = 0;\r\n                var bStart = 0;\r\n                var aEnd = a.length - 1;\r\n                var bEnd = b.length - 1;\r\n                var i, j, nextPos;\r\n\r\n                outer: while (true) {\r\n                    // remove same keys from start\r\n                    while (a[aStart][key] === b[bStart][key]) {\r\n                        this.childKeys[b[bStart][key]].set(b[bStart]);\r\n                        aStart++;\r\n                        bStart++;\r\n                        if (aStart > aEnd || bStart > bEnd) {\r\n                            break outer;\r\n                        }\r\n                    }\r\n\r\n                    // remove same keys at end\r\n                    while (a[aEnd][key] === b[bEnd][key]) {\r\n                        this.childKeys[b[bEnd][key]].set(b[bEnd]);\r\n                        aEnd--;\r\n                        bEnd--;\r\n                        if (aStart > aEnd || bStart > bEnd) {\r\n                            break outer;\r\n                        }\r\n                    }\r\n\r\n                    // move from right to left\r\n                    if (a[aEnd][key] === b[bStart][key]) {\r\n                        this.childKeys[b[bStart][key]].set(b[bStart]);\r\n                        this._moveChild(b[bStart][key], a[aStart][key]);\r\n                        aEnd--;\r\n                        bStart++;\r\n                        if (aStart > aEnd || bStart > bEnd) {\r\n                            break;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    // move from left to right\r\n                    if (a[aStart][key] === b[bEnd][key]) {\r\n                        nextPos = bEnd + 1;\r\n                        this.childKeys[b[bEnd][key]].set(b[bEnd]);\r\n                        this._moveChild(b[bEnd][key], b[nextPos] && b[nextPos][key]);\r\n                        aStart++;\r\n                        bEnd--;\r\n                        if (aStart > aEnd || bStart > bEnd) {\r\n                            break;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n                if (aStart > aEnd) {\r\n                    // insert rest from b\r\n                    nextPos = bEnd + 1;\r\n                    while (bStart <= bEnd) {\r\n                        this._insertChild(b[bStart++], b[nextPos] && b[nextPos][key]);\r\n                    }\r\n                } else if (bStart > bEnd) {\r\n                    // remove rest from a\r\n                    while (aStart <= aEnd) {\r\n                        this._removeChild(a[aStart++][key]);\r\n                    }\r\n                } else {\r\n                    var aLength = aEnd - aStart + 1;\r\n                    var bLength = bEnd - bStart + 1;\r\n                    var aNullable = a;\r\n                    var sources = new Array(bLength).fill(-1);\r\n\r\n                    var moved = false;\r\n                    var pos = 0;\r\n                    var synced = 0;\r\n\r\n                    if ((bLength <= 4) || ((aLength * bLength) <= 16)) {\r\n                        for (i = aStart; i <= aEnd; i++) {\r\n                            if (synced < bLength) {\r\n                                for (j = bStart; j <= bEnd; j++) {\r\n                                    if (a[i][key] === b[j][key]) {\r\n                                        sources[j - bStart] = i;\r\n\r\n                                        if (pos > j) {\r\n                                            moved = true;\r\n                                        } else {\r\n                                            pos = j;\r\n                                        }\r\n\r\n                                        this.childKeys[b[j][key]].set(b[j]);\r\n\r\n                                        synced++;\r\n                                        aNullable[i] = null;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        var keyIndex = {};\r\n\r\n                        for (i = bStart; i <= bEnd; i++) {\r\n                            keyIndex[b[i][key]] = i;\r\n                        }\r\n\r\n                        for (i = aStart; i <= aEnd; i++) {\r\n                            if (synced < bLength) {\r\n                                j = keyIndex[a[i][key]];\r\n\r\n                                if (j !== undefined) {\r\n                                    sources[j - bStart] = i;\r\n\r\n                                    if (pos > j) {\r\n                                        moved = true;\r\n                                    } else {\r\n                                        pos = j;\r\n                                    }\r\n\r\n                                    this.childKeys[b[j][key]].set(b[j]);\r\n\r\n                                    synced++;\r\n                                    aNullable[i] = null;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (aLength === a.length && synced === 0) {\r\n                        this._clear();\r\n                        while (bStart < bLength) {\r\n                            this._insertChild(b[bStart++], null);\r\n                        }\r\n                    } else {\r\n                        i = aLength - synced;\r\n                        while (i > 0) {\r\n                            if (aNullable[aStart] !== null) {\r\n                                this._removeChild(a[aStart][key]);\r\n                                i--;\r\n                            }\r\n                            aStart++;\r\n                        }\r\n\r\n                        if (moved) {\r\n                            var seq = this._lis(sources);\r\n                            j = seq.length - 1;\r\n                            for (i = bLength - 1; i >= 0; i--) {\r\n                                if (sources[i] === -1) {\r\n                                    pos = i + bStart;\r\n                                    nextPos = pos + 1;\r\n                                    this._insertChild(b[pos], b[nextPos] && b[nextPos][key]);\r\n                                } else {\r\n                                    if (j < 0 || i !== seq[j]) {\r\n                                        pos = i + bStart;\r\n                                        nextPos = pos + 1;\r\n                                        this._moveChild(b[pos][key], b[nextPos] && b[nextPos][key]);\r\n                                    } else {\r\n                                        j--;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else if (synced !== bLength) {\r\n                            for (i = bLength - 1; i >= 0; i--) {\r\n                                if (sources[i] === -1) {\r\n                                    pos = i + bStart;\r\n                                    nextPos = pos + 1;\r\n                                    this._insertChild(b[pos], b[nextPos] && b[nextPos][key]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.children.length > items.length) {\r\n                    // remove some children\r\n                    this.children.splice(items.length).forEach(function(child) {\r\n                        child.$destroy();\r\n                    });\r\n                }\r\n\r\n                if (this.children.length) {\r\n                    // update existing children\r\n                    this.children.forEach(function(child, i) {\r\n                        child.set(items[i]);\r\n                    });\r\n                }\r\n\r\n                if (items.length > this.children.length) {\r\n                    // add new children\r\n                    var fragment = document.createDocumentFragment();\r\n\r\n                    for (var i = this.children.length; i < items.length; i++) {\r\n                        var child = new RepeatItem(this.$template.cloneNode(true), this, items[i]);\r\n                        child.$nodes.forEach(function(node) {\r\n                            fragment.appendChild(node);\r\n                            child.$parse(node);\r\n                        });\r\n                        this.children.push(child);\r\n                    }\r\n\r\n                    this.$node.appendChild(fragment);\r\n                }\r\n            }\r\n        } else {\r\n            this._clear();\r\n        }\r\n\r\n        if (this.props.key) {\r\n            this.prevItems = this._clone(items);\r\n            this.children.forEach(function(child) {\r\n                this.childKeys[child.data[this.props.key]] = child;\r\n            }, this);\r\n        }\r\n\r\n        //this.set('items', items);\r\n        this.set('items', this.children.map(child => child.data));\r\n\r\n        dmx.nextTick(() => this.dispatchEvent('updated'));\r\n    },\r\n\r\n    _lis: function(a) {\r\n        var p = a.slice(0);\r\n        var result = [];\r\n        result.push(0);\r\n        var u, v;\r\n\r\n        for (var i = 0, il = a.length; i < il; i++) {\r\n            if (a[i] === -1) {\r\n                continue;\r\n            }\r\n\r\n            var j = result[result.length - 1];\r\n            if (a[j] < a[i]) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n\r\n            u = 0;\r\n            v = result.length - 1;\r\n\r\n            while (u < v) {\r\n                var c = ((u + v) / 2) | 0;\r\n                if (a[result[c]] < a[i]) {\r\n                    u = c + 1;\r\n                } else {\r\n                    v = c;\r\n                }\r\n            }\r\n\r\n            if (a[i] < a[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n\r\n        u = result.length;\r\n        v = result[u - 1];\r\n\r\n        while (u-- > 0) {\r\n            result[u] = v;\r\n            v = p[v];\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    _clear: function() {\r\n        this.prevItems = [];\r\n        this.childKeys = {};\r\n        this.children.splice(0).forEach(function(child) {\r\n            child.$destroy();\r\n        });\r\n        // remove any other html that was in the repeater\r\n        this.$node.innerHTML = '';\r\n    },\r\n\r\n    _insertChild: function(data, before) {\r\n        var RepeatItem = dmx.Component('repeat-item');\r\n        var child = new RepeatItem(this.$template.cloneNode(true), this, data);\r\n\r\n        child.$nodes.forEach(function(node) {\r\n            if (!before) {\r\n                this.$node.appendChild(node);\r\n            } else {\r\n                if (this.childKeys[before]) {\r\n                    this.$node.insertBefore(node, this.childKeys[before].$nodes[0]);\r\n                } else {\r\n                    console.warn('(insert) can not insert node before key ' + before + '!');\r\n                }\r\n            }\r\n\r\n            child.$parse(node);\r\n        }, this);\r\n\r\n        this.childKeys[data[this.props.key]] = child;\r\n        this.children.push(child);\r\n    },\r\n\r\n    _moveChild: function(key, before) {\r\n        var child = this.childKeys[key];\r\n\r\n        if (child) {\r\n            if (this.childKeys[before]) {\r\n                child.$nodes.forEach(function(node) {\r\n                    this.$node.insertBefore(node, this.childKeys[before].$nodes[0]);\r\n                }, this);\r\n            } else {\r\n                child.$nodes.forEach(function(node) {\r\n                    this.$node.appendChild(node);\r\n                }, this);\r\n            }\r\n        } else {\r\n            console.warn('(move) child with key ' + key + ' not found!');\r\n        }\r\n    },\r\n\r\n    _removeChild: function(key) {\r\n        var child = this.childKeys[key];\r\n        if (child) {\r\n            child.$destroy();\r\n            this.children.splice(this.children.indexOf(child), 1);\r\n            delete this.childKeys[key];\r\n        } else {\r\n            console.warn('(remove) child with key ' + key + ' not found!');\r\n        }\r\n    },\r\n\r\n    _clone: function(o) {\r\n        return dmx.clone(o);\r\n        //return JSON.parse(JSON.stringify(o));\r\n    }\r\n\r\n});\r\n","dmx.Component('repeat-item', {\r\n\r\n    constructor: function(fragment, parent, data, name) {\r\n        this.parent = parent;\r\n        this.bindings = {};\r\n        this.propBindings = {};\r\n        this.children = [];\r\n        this.listeners = [];\r\n        this.props = {};\r\n        this.data = dmx.clone(data || {});\r\n        this.seed = parent.seed;\r\n        this.name = name || 'repeat';\r\n        this.$nodes = [];\r\n        for (var i = 0; i < fragment.childNodes.length; i++) {\r\n            this.$nodes.push(fragment.childNodes[i]);\r\n        }\r\n    },\r\n\r\n    $destroy: function() {\r\n        this.dispatchEvent('destroy');\r\n        for (var i = 0; i < this.$nodes.length; i++) {\r\n            var event = new Event('remove', { cancelable: true });\r\n            if (this.$nodes[i].dispatchEvent(event)) {\r\n                dmx.dom.remove(this.$nodes[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Component('fetch', {\r\n\r\n    constructor: function(node, parent) {\r\n        this.fetch = dmx.debounce(this.fetch.bind(this));\r\n        dmx.BaseComponent.call(this, node, parent);\r\n    },\r\n\r\n    initialData: {\r\n        status: 0,\r\n        data: null,\r\n        links: {},\r\n        paging: {},\r\n        headers: {},\r\n        state: {\r\n            executing: false,\r\n            uploading: false,\r\n            processing: false,\r\n            downloading: false\r\n        },\r\n        uploadProgress: {\r\n            position: 0,\r\n            total: 0,\r\n            percent: 0\r\n        },\r\n        downloadProgress: {\r\n            position: 0,\r\n            total: 0,\r\n            percent: 0\r\n        },\r\n        lastError: {\r\n            status: 0,\r\n            message: '',\r\n            response: null\r\n        }\r\n    },\r\n\r\n    attributes: {\r\n        timeout: {\r\n            type: Number,\r\n            default: 0 // timeout in seconds\r\n        },\r\n\r\n        method: {\r\n            type: String,\r\n            default: 'GET' // HTTP request method to use, such as \"GET\", \"POST\", \"PUT\", \"DELETE\"\r\n        },\r\n\r\n        url: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        params: {\r\n            type: Object,\r\n            default: {}\r\n        },\r\n\r\n        headers: {\r\n            type: Object,\r\n            default: {}\r\n        },\r\n\r\n        data: {\r\n            type: Object,\r\n            default: {}\r\n        },\r\n\r\n        'data-type': {\r\n            type: String,\r\n            default: 'auto' // auto, json, text\r\n        },\r\n\r\n        noload: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        cache: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        ttl: {\r\n            type: Number,\r\n            default: 86400 // cache ttl in seconds (default 1 day)\r\n        },\r\n\r\n        credentials: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        abort: function() {\r\n            this.abort();\r\n        },\r\n\r\n        load: function(params, reload) {\r\n            var options = {};\r\n            if (params) options.params = params;\r\n            if (reload) options.ttl = 0;\r\n            this.fetch(options);\r\n        },\r\n\r\n        reset: function() {\r\n            this.abort();\r\n            this._reset();\r\n            this.set('data', null);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        start: Event, // when starting an ajax call\r\n        done: Event, // when ajax call completed (success and error)\r\n        error: Event, // server error or javascript error (json parse or network transport) or timeout error\r\n        invalid: Event, // 400 status from server\r\n        unauthorized: Event, // 401 status from server\r\n        forbidden: Event, // 403 status from server\r\n        abort: Event, // ajax call was aborted\r\n        success: Event, // successful ajax call,\r\n        upload: ProgressEvent, // on upload progress\r\n        download: ProgressEvent // on download progress\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'param' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.params[attr.argument] = value;\r\n                });\r\n            }\r\n            if (attr.name == 'header' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.headers[attr.argument] = value;\r\n                });\r\n            }\r\n            if (attr.name == 'data' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.data[attr.argument] = value;\r\n                });\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    render: function(node) {\r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.addEventListener('load', this.onload.bind(this));\r\n        this.xhr.addEventListener('abort', this.onabort.bind(this));\r\n        this.xhr.addEventListener('error', this.onerror.bind(this));\r\n        this.xhr.addEventListener('timeout', this.ontimeout.bind(this));\r\n        this.xhr.addEventListener('progress', this.onprogress('download').bind(this));\r\n        if (this.xhr.upload) this.xhr.upload.addEventListener('progress', this.onprogress('upload').bind(this));\r\n\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        // if auto load and url is set\r\n        if (!this.props.noload && this.props.url) {\r\n            // if url or params are changed\r\n            if (props.url != this.props.url || !dmx.equal(props.params, this.props.params)) {\r\n                // delay it a bit so that all update cycles finished first\r\n                requestAnimationFrame(() => this.fetch());\r\n            }\r\n        }\r\n    },\r\n\r\n    abort: function() {\r\n        this.xhr.abort();\r\n    },\r\n\r\n    fetch: function(options) {\r\n        this.xhr.abort();\r\n\r\n        options = dmx.extend(true, this.props, options || {});\r\n\r\n        this._reset();\r\n        this.dispatchEvent('start');\r\n\r\n        var qs = (options.url.indexOf('?') > -1 ? '&' : '?') + Object.keys(options.params).filter(function(key) {\r\n            return options.params[key] != null;\r\n        }, this).map(function(key) {\r\n            var value = options.params[key];\r\n            if (typeof value == 'string' && value.startsWith('{{')) {\r\n                value = dmx.parse(value, this);\r\n            }\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n        }, this).join('&');\r\n\r\n        this._url = options.url + qs;\r\n\r\n        if (window.WebviewProxy) { // Cordova webview proxy plugin\r\n            this._url = window.WebviewProxy.convertProxyUrl(this._url);\r\n        }\r\n\r\n        if (this.props.cache) {\r\n            var cache = dmx.parse(this.props.cache + '.data[\"' + this._url + '\"]', this);\r\n            if (cache) {\r\n                if (Date.now() - cache.created >= options.ttl * 1000) {\r\n                    dmx.parse(this.props.cache + '.remove(\"' + this._url + '\")', this);\r\n                } else {\r\n                    this.set('headers', cache.headers || {});\r\n                    this.set('paging', cache.paging || {});\r\n                    this.set('links', cache.links || {});\r\n                    this.set('data', cache.data);\r\n                    this.dispatchEvent('success');\r\n                    this.dispatchEvent('done');\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.set('state', {\r\n            executing: true,\r\n            uploading: false,\r\n            processing: false,\r\n            downloading: false\r\n        });\r\n\r\n        var data = null;\r\n\r\n        if (this.props.method.toUpperCase() != 'GET') {\r\n            if (this.props['data-type'] == 'text') {\r\n                if (!options.headers['Content-Type']) {\r\n                    options.headers['Content-Type'] = 'application/text';\r\n                }\r\n                data = this.props.data.toString();\r\n            } else if (this.props['data-type'] == 'json') {\r\n                if (!options.headers['Content-Type']) {\r\n                    options.headers['Content-Type'] = 'application/json';\r\n                }\r\n                data = JSON.stringify(this.props.data);\r\n            } else {\r\n                if (this.props.method.toUpperCase() == 'POST') {\r\n                    data = new FormData();\r\n\r\n                    Object.keys(this.props.data).forEach(function(key) {\r\n                        var value = this.props.data[key];\r\n\r\n                        if (Array.isArray(value)) {\r\n                            if (!/\\[\\]$/.test(key)) {\r\n                                key += '[]';\r\n                            }\r\n                            value.forEach(function(val) {\r\n                                data.append(key, val);\r\n                            }, this);\r\n                        } else {\r\n                            data.set(key, value);\r\n                        }\r\n                    }, this);\r\n                } else {\r\n                    if (!options.headers['Content-Type']) {\r\n                        options.headers['Content-Type'] = 'application/text';\r\n                    }\r\n                    data = this.props.data.toString();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.xhr.open(this.props.method.toUpperCase(), this._url);\r\n        this.xhr.timeout = options.timeout * 1000;\r\n        Object.keys(options.headers).forEach(function(header) {\r\n            this.xhr.setRequestHeader(header, options.headers[header]);\r\n        }, this);\r\n        this.xhr.setRequestHeader('accept', 'application/json');\r\n        if (this.props.credentials) {\r\n            this.xhr.withCredentials = true;\r\n        }\r\n        try { this.xhr.send(data); }\r\n        catch (err) { this._done(err); }\r\n    },\r\n\r\n    _reset: function() {\r\n        this.set({\r\n            status: 0,\r\n            links: {},\r\n            headers: {},\r\n            state: {\r\n                executing: false,\r\n                uploading: false,\r\n                processing: false,\r\n                downloading: false\r\n            },\r\n            uploadProgress: {\r\n                position: 0,\r\n                total: 0,\r\n                percent: 0\r\n            },\r\n            downloadProgress: {\r\n                position: 0,\r\n                total: 0,\r\n                percent: 0\r\n            },\r\n            lastError: {\r\n                status: 0,\r\n                message: '',\r\n                response: null\r\n            }\r\n        });\r\n    },\r\n\r\n    _done: function(err) {\r\n        this._reset();\r\n\r\n        if (err) {\r\n            this.set('lastError', {\r\n                status: 0,\r\n                message: err.message,\r\n                response: null\r\n            });\r\n\r\n            this.dispatchEvent('error');\r\n        } else {\r\n            var response = this.xhr.responseText;\r\n\r\n            try {\r\n                response = JSON.parse(response);\r\n            } catch(err) {\r\n                if (this.xhr.status < 400) {\r\n                    this.set('lastError', {\r\n                        status: 0,\r\n                        message: 'Response was not valid JSON',\r\n                        response: response\r\n                    });\r\n\r\n                    this.dispatchEvent('error');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            try {\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example\r\n                var strHeaders = this.xhr.getAllResponseHeaders();\r\n                var arrHeaders = strHeaders.trim().split(/[\\r\\n]+/);\r\n\r\n                this.set('headers', arrHeaders.reduce(function(headers, line) {\r\n                    var parts = line.split(': ');\r\n                    var header = parts.shift();\r\n                    var value = parts.join(': ');\r\n\r\n                    headers[header] = value;\r\n\r\n                    return headers;\r\n                }, {}));\r\n            } catch(err) {\r\n                console.warn('Error parsing response headers', err);\r\n            }\r\n\r\n            try {\r\n                //var linkHeader = this.xhr.getResponseHeader('Link');\r\n                var linkHeader = Object.keys(this.data.headers).find(function(header) {\r\n                    return header.toLowerCase() == 'link';\r\n                });\r\n\r\n                if (linkHeader) {\r\n                    this.set('links', this.data.headers[linkHeader].split(/,\\s*</).map(function(link) {\r\n                        try {\r\n                            var m = link.match(/<?([^>]*)>(.*)/);\r\n                            var linkUrl = m[1];\r\n                            var parts = m[2].split(';');\r\n                            var query = linkUrl.substr(linkUrl.indexOf('?') + 1);\r\n                            if (query.indexOf('#') > 0) query = query.substr(0, query.indexOf('#'));\r\n                            var qry = query.split('&').reduce(function(acc, x) {\r\n                                var p = x.split('=');\r\n\r\n                                if (p[0]) {\r\n                                    acc[decodeURIComponent(p[0])] = decodeURIComponent(p[1] || '');\r\n                                }\r\n\r\n                                return acc;\r\n                            }, {});\r\n\r\n                            parts.shift();\r\n\r\n                            var info = parts.reduce(function(acc, p) {\r\n                                var m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\r\n                                if (m) acc[m[1]] = m[2];\r\n                                return acc;\r\n                            }, {});\r\n\r\n                            info = Object.assign({}, qry, info);\r\n                            info.url = linkUrl;\r\n\r\n                            return info;\r\n                        } catch (err) {\r\n                            console.warn('Error parsing link header part', err);\r\n                            return null;\r\n                        }\r\n                    }).filter(function(x) {\r\n                        return x && x.rel;\r\n                    }).reduce(function(acc, x) {\r\n                        x.rel.split(/\\s+/).forEach(function(rel) {\r\n                            acc[rel] = Object.assign(x, { rel: rel });\r\n                        });\r\n\r\n                        return acc;\r\n                    }, {}));\r\n                }\r\n            } catch (err) {\r\n                console.warn('Error parsing link header', err);\r\n            }\r\n\r\n            try {\r\n                var paging = {\r\n                    page: 1,\r\n                    pages: 1,\r\n                    items: 0,\r\n                    has: {\r\n                        first: false,\r\n                        prev: false,\r\n                        next: false,\r\n                        last: false\r\n                    }\r\n                };\r\n\r\n                if (this.data.links.prev || this.data.links.next) {\r\n                    if (this.data.links.last && this.data.links.last.page) {\r\n                        paging.pages = +this.data.links.last.page;\r\n                    } else if (this.data.links.prev && this.data.prev.page) {\r\n                        paging.pages = +this.data.links.prev.page + 1;\r\n                    }\r\n\r\n                    var countHeader = Object.keys(this.data.headers).find(function(header) {\r\n                        header = header.toLowerCase();\r\n                        return header == 'x-total' || header == 'x-count' || header == 'x-total-count';\r\n                    });\r\n\r\n                    if (countHeader) {\r\n                        paging.items = +this.data.headers[countHeader];\r\n                    }\r\n\r\n                    if (this.data.links.prev && this.data.links.prev.page) {\r\n                        paging.page = +this.data.links.prev.page + 1;\r\n                    } else if (this.data.links.next && this.data.links.next.page) {\r\n                        paging.page = +this.data.links.next.page - 1;\r\n                    }\r\n\r\n                    paging.has = {\r\n                        first: !!this.data.links.first,\r\n                        prev: !!this.data.links.prev,\r\n                        next: !!this.data.links.next,\r\n                        last: !!this.data.links.last\r\n                    }\r\n                }\r\n\r\n                this.set('paging', paging);\r\n            } catch (err) {\r\n                console.warn('Error parsing paging', err);\r\n            }\r\n\r\n            this.set('status', this.xhr.status);\r\n\r\n            if (this.xhr.status < 400) {\r\n                this.set('data', response);\r\n                this.dispatchEvent('success');\r\n\r\n                if (this.props.cache) {\r\n                    dmx.parse(this.props.cache + '.set(\"' + this._url + '\", { headers: headers, paging: paging, links: links, data: data, created: ' + Date.now() + ' })', this);\r\n                }\r\n            } else {\r\n                this.set('lastError', {\r\n                    status: this.xhr.status,\r\n                    message: this.xhr.statusText,\r\n                    response: response\r\n                });\r\n\r\n                if (this.xhr.status == 400) {\r\n                    this.dispatchEvent('invalid');\r\n                } else if (this.xhr.status == 401) {\r\n                    this.dispatchEvent('unauthorized');\r\n                } else if (this.xhr.status == 403) {\r\n                    this.dispatchEvent('forbidden');\r\n                } else {\r\n                    this.dispatchEvent('error');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dispatchEvent('done');\r\n    },\r\n\r\n    onload: function(event) {\r\n        this._done();\r\n    },\r\n\r\n    onabort: function(event) {\r\n        this._reset();\r\n        this.dispatchEvent('abort');\r\n        this.dispatchEvent('done');\r\n    },\r\n\r\n    onerror: function(event) {\r\n        this._done({ message: 'Failed to execute' });\r\n    },\r\n\r\n    ontimeout: function(event) {\r\n        this._done({ message: 'Execution timeout' });\r\n    },\r\n\r\n    onprogress: function(type) {\r\n        return function(event) {\r\n            event.loaded = event.loaded || event.position;\r\n\r\n            var percent = event.lengthComputable ? Math.ceil(event.loaded / event.total * 100) : 0;\r\n\r\n            this.set('state', {\r\n                executing: true,\r\n                uploading: type == 'upload' && percent < 100,\r\n                processing: type == 'upload' && percent == 100,\r\n                downloading: type == 'download'\r\n            });\r\n\r\n            this.set(type + 'Progress', {\r\n                position: event.loaded,\r\n                total: event.total,\r\n                percent: percent\r\n            });\r\n\r\n            this.dispatchEvent(type, {\r\n                lengthComputable: event.lengthComputable,\r\n                loaded: event.loaded,\r\n                total: event.total\r\n            });\r\n        };\r\n    }\r\n\r\n});\r\n","dmx.Component('serverconnect', {\r\n\r\n    extends: 'fetch',\r\n\r\n    attributes: {\r\n        sockets: {\r\n            type: Boolean,\r\n            default: false\r\n        }    \r\n    },\r\n\r\n    render: function(node) {\r\n        if (this.props.sockets) {\r\n            this.eventName = this.props.url.replace(/^(.*?)api\\//, '');\r\n            this.socket = dmx.Socket('/api');\r\n            this.socket.on(this.eventName, this.refresh.bind(this));\r\n            this.update({});\r\n        } else {\r\n            dmx.Component('fetch').prototype.render.call(this, node);\r\n        }\r\n    },\r\n\r\n    fetch: function(options) {\r\n        if (this.props.sockets) {\r\n            this.refresh(options && options.params);\r\n        } else {\r\n            dmx.Component('fetch').prototype.fetch.call(this, options);\r\n        }\r\n    },\r\n\r\n    refresh: function(params) {\r\n        params = dmx.extend(true, {}, this.props.params, params || {});\r\n\r\n        this.dispatchEvent('start');\r\n\r\n        this.set('state', {\r\n            executing: true,\r\n            uploading: false,\r\n            processing: true,\r\n            downloading: false\r\n        });\r\n        \r\n        this.socket.emit(this.eventName, params, function(res) {\r\n            this.set('status', res.status);\r\n            this.set('data', res.data);\r\n            this.set('state', {\r\n                executing: false,\r\n                uploading: false,\r\n                processing: false,\r\n                downloading: false\r\n            });\r\n\r\n            if (res.status < 400) {\r\n                this.dispatchEvent('success');\r\n            } else if (res.status == 400) {\r\n                this.dispatchEvent('invalid');\r\n            } else if (res.status == 401) {\r\n                this.dispatchEvent('unauthorized');\r\n            } else if (res.status == 403) {\r\n                this.dispatchEvent('forbidden');\r\n            } else {\r\n                this.dispatchEvent('error');\r\n            }\r\n\r\n            this.dispatchEvent('done');\r\n        }.bind(this));\r\n    }\r\n\r\n});\r\n","dmx.Component('serverconnect-form', {\r\n\r\n    extends: 'form',\r\n\r\n    initialData: {\r\n        status: 0,\r\n        data: null,\r\n        headers: {},\r\n        state: {\r\n            executing: false,\r\n            uploading: false,\r\n            processing: false,\r\n            downloading: false\r\n        },\r\n        uploadProgress: {\r\n            position: 0,\r\n            total: 0,\r\n            percent: 0\r\n        },\r\n        downloadProgress: {\r\n            position: 0,\r\n            total: 0,\r\n            percent: 0\r\n        },\r\n        lastError: {\r\n            status: 0,\r\n            message: '',\r\n            response: null\r\n        }\r\n    },\r\n\r\n    attributes: {\r\n        timeout: {\r\n            type: Number,\r\n            default: 0 // timeout in seconds\r\n        },\r\n\r\n        autosubmit: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        params: {\r\n            type: Object,\r\n            default: {}\r\n        },\r\n\r\n        headers: {\r\n            type: Object,\r\n            default: {}\r\n        },\r\n\r\n        'post-data': { // only for method post, not for get\r\n            type: String,\r\n            default: 'form' // form, json (default uses form data)\r\n        },\r\n\r\n        credentials: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        abort: function() {\r\n            this.abort();\r\n        },\r\n\r\n        reset: function(clearData) {\r\n            this.reset();\r\n            if (clearData) {\r\n                this.abort();\r\n                this._reset();\r\n                this.set('data', null);\r\n            }\r\n        }\r\n    },\r\n\r\n    events: {\r\n        start: Event, // when starting an ajax call\r\n        done: Event, // when ajax call completed (success and error)\r\n        error: Event, // server error or javascript error (json parse or network transport) or timeout error\r\n        unauthorized: Event, // 401 status from server\r\n        forbidden: Event, // 403 status from server\r\n        abort: Event, // ajax call was aborted\r\n        success: Event, // successful ajax call,\r\n        upload: ProgressEvent, // on upload progress\r\n        download: ProgressEvent // on download progress\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'param' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.params[attr.argument] = value;\r\n                });\r\n            }\r\n            if (attr.name == 'header' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.headers[attr.argument] = value;\r\n                });\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    render: function(node) {\r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.addEventListener('load', this.onload.bind(this));\r\n        this.xhr.addEventListener('abort', this.onabort.bind(this));\r\n        this.xhr.addEventListener('error', this.onerror.bind(this));\r\n        this.xhr.addEventListener('timeout', this.ontimeout.bind(this));\r\n        this.xhr.addEventListener('progress', this.onprogress('download').bind(this));\r\n        if (this.xhr.upload) this.xhr.upload.addEventListener('progress', this.onprogress('upload').bind(this));\r\n\r\n        var checkValidity = node.checkValidity;\r\n\r\n        node.dmxExtraData = {};\r\n        node.dmxExtraElements = [];\r\n        node.checkValidity = function() {\r\n            for (var i = 0; i < node.dmxExtraElements.length; i++) {\r\n                if (node.dmxExtraElements[i].validate) {\r\n                    node.dmxExtraElements[i].validate();\r\n                }\r\n            }\r\n\r\n            return checkValidity.call(node);\r\n        };\r\n\r\n        dmx.Component('form').prototype.render.call(this, node);\r\n\r\n        if (this.props.autosubmit) {\r\n            dmx.nextTick(function() {\r\n                this.submit();\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    abort: function() {\r\n        this.xhr.abort();\r\n    },\r\n\r\n    _submit: function(extra) {\r\n        this.xhr.abort();\r\n\r\n        var method = this.$node.method.toUpperCase();\r\n        var action = this.$node.action;\r\n        var data = null;\r\n\r\n        var qs = Object.keys(this.props.params).filter(function(key) {\r\n            return this.props.params[key] != null;\r\n        }, this).map(function(key) {\r\n            var value = this.props.params[key];\r\n            if (typeof value == 'string' && value.startsWith('{{')) {\r\n                value = dmx.parse(value, this);\r\n            }\r\n            return encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n        }, this).join('&');\r\n\r\n        if (method == 'GET') {\r\n            if (qs.length) qs += '&';\r\n            \r\n            qs += dmx.array(this.$node.elements).filter(function(element) {\r\n                return (!(extra && extra[element.name])) && !element.disabled && ((element.type !== 'radio' && element.type !== 'checkbox') || element.checked);\r\n            }).map(function(element) {\r\n                return encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value);\r\n            }).join('&');\r\n\r\n            if (extra) {\r\n                Object.keys(extra).forEach(function(key) {\r\n                    if (Array.isArray(extra[key])) {\r\n                        extra[key].forEach(function(value) {\r\n                            qs += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(value);\r\n                        });\r\n                    } else {\r\n                        qs += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(extra[key]);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (this.props['post-data'] == 'json') {\r\n                data = {};\r\n\r\n                dmx.array(this.$node.elements).forEach(function(element) {\r\n                    if (element.name && !element.disabled) {\r\n                        if (element.type.toLowerCase == 'radio') {\r\n                            var checked = document.querySelector('input[name=\"' + element.name + '\"]:checked');\r\n\r\n                            if (checked) {\r\n                                data[element.name] = checked.value;\r\n                            }\r\n                        } else if (element.type == 'checkbox') {\r\n                            var group = document.querySelectorAll('input[name=\"' + element.name + '\"]');\r\n\r\n                            if (group.length) {\r\n                                if (group.length == 1) {\r\n                                    data[element.name] = group[0].checked;\r\n                                } else {\r\n                                    data[element.name] = dmx.array(group).filter(function(checkbox) {\r\n                                        return checkbox.checked;\r\n                                    }).map(function(checkbox) {\r\n                                        return checkbox.value;\r\n                                    });\r\n                                }\r\n                            }\r\n                        } else if (element.type == 'select-multiple') {\r\n                            data[element.name] = dmx.array(element.selectedOptions).map(function(option) {\r\n                                return option.value;\r\n                            });\r\n                        } else if (element.type == 'file') {\r\n                            if (element.files.length) {\r\n                                if (element.multiple) {\r\n                                    data[element.name] = element.files.map(function(file) {\r\n                                        return file.name;\r\n                                    });\r\n                                } else {\r\n                                    data[element.name] = element.files[0].name;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            data[element.name] = element.value;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                if (extra) {\r\n                    Object.assign(data, extra);\r\n                }\r\n\r\n                if (this.$node.dmxExtraData) {\r\n                    Object.assign(data, this.$node.dmxExtraData);\r\n                }\r\n\r\n                this.props.headers['Content-Type'] = 'application/json';\r\n                data = JSON.stringify(data);\r\n            } else {\r\n                data = new FormData(this.$node);\r\n\r\n                if (extra) {\r\n                    Object.keys(extra).forEach(function(key) {\r\n                        if (Array.isArray(extra[key])) {\r\n                            if (!/\\[\\]$/.test(key)) {\r\n                                key += '[]';\r\n                            }\r\n                            value.forEach(function(val) {\r\n                                data.append(key, val);\r\n                            }, this);\r\n                        } else {\r\n                            data.set(key, extra[key]);\r\n                        }\r\n                    }, this);\r\n                }\r\n\r\n                if (this.$node.dmxExtraData) {\r\n                    Object.keys(this.$node.dmxExtraData).forEach(function(key) {\r\n                        var value = this.$node.dmxExtraData[key];\r\n\r\n                        if (Array.isArray(value)) {\r\n                            if (!/\\[\\]$/.test(key)) {\r\n                                key += '[]';\r\n                            }\r\n                            value.forEach(function(val) {\r\n                                data.append(key, val);\r\n                            }, this);\r\n                        } else {\r\n                            data.set(key, value);\r\n                        }\r\n                    }, this);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._reset();\r\n        this.dispatchEvent('start');\r\n\r\n        this.set('state', {\r\n            executing: true,\r\n            uploading: false,\r\n            processing: false,\r\n            downloading: false\r\n        });\r\n\r\n        var url = action;\r\n\r\n        if (qs) {\r\n            url += (url.indexOf('?') > -1 ? '&' : '?') + qs;\r\n        }\r\n\r\n        if (window.WebviewProxy) { // Cordova webview proxy plugin\r\n            url = window.WebviewProxy.convertProxyUrl(url);\r\n        }\r\n\r\n        this.xhr.open(method, url);\r\n        this.xhr.timeout = this.props.timeout * 1000;\r\n        Object.keys(this.props.headers).forEach(function(header) {\r\n            this.xhr.setRequestHeader(header, this.props.headers[header]);\r\n        }, this);\r\n        this.xhr.setRequestHeader('accept', 'application/json');\r\n        if (this.props.credentials) {\r\n            this.xhr.withCredentials = true;\r\n        }\r\n        try { this.xhr.send(data); }\r\n        catch (err) { this._done(err); }\r\n    },\r\n\r\n    _reset: function() {\r\n        this.set({\r\n            status: 0,\r\n            headers: {},\r\n            state: {\r\n                executing: false,\r\n                uploading: false,\r\n                processing: false,\r\n                downloading: false\r\n            },\r\n            uploadProgress: {\r\n                position: 0,\r\n                total: 0,\r\n                percent: 0\r\n            },\r\n            downloadProgress: {\r\n                position: 0,\r\n                total: 0,\r\n                percent: 0\r\n            },\r\n            lastError: {\r\n                status: 0,\r\n                message: '',\r\n                response: null\r\n            }\r\n        });\r\n    },\r\n\r\n    _done: function(err) {\r\n        this._reset();\r\n\r\n        if (err) {\r\n            this.set('lastError', {\r\n                status: 0,\r\n                message: err.message,\r\n                response: null\r\n            });\r\n\r\n            this.dispatchEvent('error');\r\n        } else {\r\n            var response = this.xhr.responseText;\r\n\r\n            try {\r\n                response = JSON.parse(response);\r\n            } catch(err) {\r\n                if (this.xhr.status < 400) {\r\n                    this.set('lastError', {\r\n                        status: 0,\r\n                        message: 'Response was not valid JSON',\r\n                        response: response\r\n                    });\r\n\r\n                    this.dispatchEvent('error');\r\n                    return;\r\n                }\r\n            }\r\n\r\n            try {\r\n                // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example\r\n                var strHeaders = this.xhr.getAllResponseHeaders();\r\n                var arrHeaders = strHeaders.trim().split(/[\\r\\n]+/);\r\n\r\n                this.set('headers', arrHeaders.reduce(function(headers, line) {\r\n                    var parts = line.split(': ');\r\n                    var header = parts.shift();\r\n                    var value = parts.join(': ');\r\n\r\n                    headers[header] = value;\r\n\r\n                    return headers;\r\n                }, {}));\r\n            } catch(err) {\r\n                console.warn('Error parsing response headers', err);\r\n            }\r\n\r\n            this.set('status', this.xhr.status);\r\n\r\n            if (dmx.validateReset) {\r\n                dmx.validateReset(this.$node);\r\n            }\r\n            \r\n            if (window.grecaptcha && this.$node.querySelector('.g-recaptcha')) {\r\n                grecaptcha.reset();\r\n            }\r\n    \r\n            if (this.xhr.status < 400) {\r\n                this.set('data', response);\r\n                this.dispatchEvent('success');\r\n            } else {\r\n                // some other server error\r\n                this.set('lastError', {\r\n                    status: this.xhr.status,\r\n                    message: this.xhr.statusText,\r\n                    response: response\r\n                });\r\n\r\n                if (this.xhr.status == 400) {\r\n                    // validation error\r\n                    this.dispatchEvent('invalid');\r\n\r\n                    if (response.form) {\r\n                        for (var name in response.form) {\r\n                            if (response.form.hasOwnProperty(name)) {\r\n                                var element = this.$node.querySelector('[name=\"' + name + '\"]');\r\n                                if (element) {\r\n                                    element.setCustomValidity(response.form[name]);\r\n                                    \r\n                                    dmx.requestUpdate();\r\n                                    \r\n                                    if (dmx.bootstrap5forms) {\r\n                                        dmx.validate.setBootstrap5Message(element, response.form[name]);\r\n                                    } else if (dmx.bootstrap4forms) {\r\n                                        dmx.validate.setBootstrap4Message(element, response.form[name]);\r\n                                    } else if (dmx.bootstrap3forms) {\r\n                                        dmx.validate.setBootstrapMessage(element, response.form[name]);\r\n                                    } else {\r\n                                        dmx.validate.setErrorMessage(element, response.form[name]);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        console.warn('400 error, no form errors in response.', response);\r\n                    }\r\n                } else if (this.xhr.status == 401) {\r\n                    this.dispatchEvent('unauthorized');\r\n                } else if (this.xhr.status == 403) {\r\n                    this.dispatchEvent('forbidden');\r\n                } else {\r\n                    this.dispatchEvent('error');\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dispatchEvent('done');\r\n    },\r\n\r\n    onload: function(event) {\r\n        this._done();\r\n    },\r\n\r\n    onabort: function(event) {\r\n        this._reset();\r\n        this.dispatchEvent('abort');\r\n        this.dispatchEvent('done');\r\n    },\r\n\r\n    onerror: function(event) {\r\n        this._done({ message: 'Failed to execute' });\r\n    },\r\n\r\n    ontimeout: function(event) {\r\n        this._done({ message: 'Execution timeout' });\r\n    },\r\n\r\n    onprogress: function(type) {\r\n        return function(event) {\r\n            event.loaded = event.loaded || event.position;\r\n\r\n            var percent = event.lengthComputable ? Math.ceil(event.loaded / event.total * 100) : 0;\r\n\r\n            this.set('state', {\r\n                executing: true,\r\n                uploading: type == 'upload' && percent < 100,\r\n                processing: type == 'upload' && percent == 100,\r\n                downloading: type == 'download'\r\n            });\r\n\r\n            this.set(type + 'Progress', {\r\n                position: event.loaded,\r\n                total: event.total,\r\n                percent: percent\r\n            });\r\n\r\n            this.dispatchEvent(type, {\r\n                lengthComputable: event.lengthComputable,\r\n                loaded: event.loaded,\r\n                total: event.total\r\n            });\r\n        };\r\n    }\r\n\r\n});\r\n","dmx.Component('if', {\r\n\r\n    attributes: {\r\n        condition: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    events: {\r\n        show: Event,\r\n        hide: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        this.nodes = [];\r\n        this.template = document.createDocumentFragment();\r\n        while (this.$node.firstChild) {\r\n            this.template.appendChild(this.$node.firstChild);\r\n        }\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        if (this.props.condition != props.condition) {\r\n            if (!this._willUpdate) {\r\n                this._willUpdate = true;\r\n                //requestAnimationFrame(() => this._update());\r\n                // Want to do DOM updates on animation frame for less DOM updates\r\n                // but then components and data from the children comes very late\r\n                // for now on nextTick to do it as fast as posible\r\n                dmx.nextTick(this._update, this);\r\n            }\r\n        }\r\n    },\r\n\r\n    _update: function() {\r\n        this._willUpdate = false;\r\n\r\n        if (this.props.condition) {\r\n            this._render();\r\n        } else {\r\n            this._destroy();\r\n        }\r\n    },\r\n\r\n    _render: function() {\r\n        var template = this.template.cloneNode(true);\r\n        this.nodes = Array.prototype.slice.call(template.childNodes);\r\n        this.$node.appendChild(template);\r\n        this.$parse();\r\n        dmx.requestUpdate();\r\n        dmx.nextTick(function() {\r\n            this.dispatchEvent('show');\r\n        }, this);\r\n    },\r\n\r\n    _destroy: function() {\r\n        this.bindings = {};\r\n        this.nodes.splice(0).forEach(function(node) {\r\n            var event = new Event('remove', { cancelable: true });\r\n            if (node.dispatchEvent(event)) {\r\n                dmx.dom.remove(node);\r\n            }\r\n        });\r\n        this.children.splice(0).forEach(function(child) {\r\n            child.$destroy();\r\n        });\r\n        dmx.nextTick(function() {\r\n            this.dispatchEvent('hide');\r\n        }, this);\r\n    }\r\n\r\n});\r\n","dmx.Component('datetime', {\r\n\r\n    initialData: function() {\r\n        return {\r\n            datetime: this.datetime()\r\n        };\r\n    },\r\n\r\n    attributes: {\r\n        interval: {\r\n            type: String,\r\n            default: 'seconds' // seconds, minutes, hours, days\r\n        },\r\n\r\n        utc: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        this.timer();\r\n    },\r\n\r\n    timer: function() {\r\n        this.set('datetime', this.datetime());\r\n        requestAnimationFrame(this.timer.bind(this));\r\n    },\r\n\r\n    datetime: function() {\r\n        var date = new Date(), year, month, day, hours, minutes, seconds;\r\n        var pad = function(n, d) { return ('0000' + n).substr(-d); };\r\n\r\n        if (this.props.utc) {\r\n            year = date.getUTCFullYear();\r\n            month = date.getUTCMonth() + 1;\r\n            day = date.getUTCDate();\r\n            hours = date.getUTCHours();\r\n            minutes = date.getUTCMinutes();\r\n            seconds = date.getUTCSeconds();\r\n        } else {\r\n            year = date.getFullYear();\r\n            month = date.getMonth() + 1;\r\n            day = date.getDate();\r\n            hours = date.getHours();\r\n            minutes = date.getMinutes();\r\n            seconds = date.getSeconds();\r\n        }\r\n\r\n        var dateString = pad(year, 4) + '-' + pad(month, 2) + '-' + pad(day, 2);\r\n        var tz = this.props.utc ? 'Z' : '';\r\n\r\n        switch (this.props.interval) {\r\n            case 'days': return dateString + 'T00:00:00' + tz;\r\n            case 'hours': return dateString + 'T' + pad(hours, 2) + ':00:00' + tz;\r\n            case 'minutes': return dateString + 'T' + pad(hours, 2) + ':' + pad(minutes, 2) + ':00' + tz;\r\n        }\r\n\r\n        return dateString + 'T' + pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(seconds, 2) + tz;\r\n    }\r\n\r\n});\r\n","dmx.Component('api-action', {\r\n    extends: 'fetch'\r\n});\r\n","dmx.Component('api-form', {\r\n    extends: 'serverconnect-form'\r\n});\r\n","dmx.Component('array', {\r\n\r\n    initialData: {\r\n        items: [],\r\n        count: 0\r\n    },\r\n\r\n    attributes: {\r\n        items: {\r\n            type: Array,\r\n            default: []\r\n        }\r\n    },\r\n\r\n    events: {\r\n        updated: Event\r\n    },\r\n\r\n    methods: {\r\n        add: function(newItem) {\r\n            this.splice(this.count(), 0, newItem);\r\n        },\r\n\r\n        addUniq: function(newItem) {\r\n            // Only add when not exists\r\n            if (this.indexOf(newItem) == -1) {\r\n                this.splice(this.count(), 0, newItem);\r\n            }\r\n        },\r\n\r\n        insert: function(index, newItem) {\r\n            this.splice(index, 0, newItem);\r\n        },\r\n\r\n        insertBefore: function(item, newItem) {\r\n            var index = this.indexOf(item);\r\n            if (index != -1) {\r\n                this.splice(index, 0, newItem);\r\n            }\r\n        },\r\n\r\n        insertAfter: function(item, newItem) {\r\n            var index = this.indexOf(item);\r\n            if (index != -1) {\r\n                this.splice(index + 1, 0, newItem);\r\n            }\r\n        },\r\n\r\n        replace: function(item, newItem) {\r\n            var index = this.indexOf(item);\r\n            if (index != -1) {\r\n                this.splice(index, 1, newItem);\r\n            }\r\n        },\r\n\r\n        replaceAt: function(index, newItem) {\r\n            this.splice(index, 1, newItem);\r\n        },\r\n\r\n        remove: function(item) {\r\n            var index = this.indexOf(item);\r\n            if (index != -1) {\r\n                this.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        removeAt: function(index) {\r\n            this.splice(index, 1);\r\n        },\r\n\r\n        reverse: function() {\r\n            this.reverse();\r\n        },\r\n\r\n        sort: function() {\r\n            this.sort();\r\n        },\r\n\r\n        empty: function() {\r\n            this.updateData([]);\r\n        }\r\n    },\r\n\r\n    render: function() {\r\n        var arr = dmx.array(this.props.items);\r\n        this.set('items', arr);\r\n        this.set('count', arr.length);\r\n    },\r\n\r\n    update: function(props, fields) {\r\n        if (fields.has('items')) {\r\n            this.updateData(dmx.array(this.props.items));\r\n        }\r\n    },\r\n\r\n    count: function() {\r\n        return this.data.items.length;\r\n    },\r\n\r\n    indexOf: function(item) {\r\n        return this.data.items.indexOf(item);\r\n    },\r\n\r\n    splice: function(index, remove, item) {\r\n        var arr = dmx.clone(this.data.items);\r\n\r\n        if (item !== undefined) {\r\n            arr.splice(index, remove, item);\r\n        } else {\r\n            arr.splice(index, remove);\r\n        }\r\n\r\n        this.updateData(arr);\r\n    },\r\n\r\n    reverse: function() {\r\n        var arr = dmx.clone(this.data.items);\r\n        arr.reverse();\r\n        this.updateData(arr);\r\n    },\r\n\r\n    sort: function() {\r\n        var arr = dmx.clone(this.data.items);\r\n        arr.sort();\r\n        this.updateData(arr);\r\n    },\r\n\r\n    updateData: function(arr) {\r\n        if (!dmx.equal(this.data.items, arr)) {\r\n        //if (JSON.stringify(this.data.items) != JSON.stringify(arr)) {\r\n            this.set('items', arr);\r\n            this.set('count', arr.length);\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Component('group', { render: function(node) { this.$parse(); } });","dmx.Component('flow', {\r\n\r\n    initialData: {\r\n        $param: null,\r\n        data: null,\r\n        running: false,\r\n        lastError: null\r\n    },\r\n\r\n    attributes: {\r\n        src: {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        preload: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        autorun: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        params: {\r\n            type: Object,\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        run: function(param, throwError) {\r\n            return this.run(param, throwError);\r\n        },\r\n\r\n        runSub: function(param) {\r\n            return this.runSub(param);\r\n        }\r\n    },\r\n\r\n    events: {\r\n        start: Event,\r\n        done: Event,\r\n        error: Event\r\n    },\r\n\r\n    $parseAttributes: function(node) {\r\n        dmx.BaseComponent.prototype.$parseAttributes.call(this, node);\r\n        dmx.dom.getAttributes(node).forEach(function(attr) {\r\n            if (attr.name == 'param' && attr.argument) {\r\n                this.$addBinding(attr.value, function(value) {\r\n                    this.props.params[attr.argument] = value;\r\n                });\r\n            }\r\n        }, this);\r\n    },\r\n\r\n    render: function(node) {\r\n        if (this.props.src) {\r\n            if (this.props.preload || this.props.autorun) {\r\n                this.load(this.props.src);\r\n            }\r\n        } else {\r\n            try {\r\n                this.flow = (window.Hjson ? Hjson : JSON).parse(node.textContent);\r\n                if (this.props.autorun) {\r\n                    this.run();\r\n                }\r\n            } catch (e) {\r\n                console.error(e);\r\n                if (dmx.debug) {\r\n                    console.debug(node.textContent);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    load: function(uri) {\r\n        var self = this;\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onload = function() {\r\n                try {\r\n                    self.flow = (window.Hjson ? Hjson : JSON).parse(xhr.responseText);\r\n                    if (self.props.autorun) {\r\n                        self.run();\r\n                    }\r\n                    resolve();\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    if (dmx.debug) {\r\n                        console.debug(xhr.responseText);\r\n                    }\r\n                    reject(e);\r\n                }\r\n            }\r\n            xhr.onabort = reject;\r\n            xhr.onerror = reject;\r\n            xhr.ontimeout = reject;\r\n            xhr.open('GET', uri);\r\n            xhr.send();\r\n        });\r\n    },\r\n\r\n    runSub: function(param) {\r\n        var self = this;\r\n\r\n        if (!this.flow) {\r\n            if (this.props.src) {\r\n                return this.load(this.props.src).then(function() {\r\n                    return dmx.Flow.run(self.flow, self);\r\n                });\r\n            }\r\n\r\n            throw new Error('No flow');\r\n        }\r\n\r\n        return dmx.Flow.run(this.flow, this);\r\n    },\r\n\r\n    run: function(param, throwError) {\r\n        var self = this;\r\n\r\n        if (this.flow) {\r\n            if (this.data.running) {\r\n                console.info('Flow ' + this.name + ' is already running.');\r\n                return;\r\n            }\r\n\r\n            this.set('running', true);\r\n            this.set('log', {});\r\n            this.set('$param', Object.assign({}, this.props.params, param));\r\n            this.set('lastError', null);\r\n\r\n            this.dispatchEvent('start');\r\n\r\n            return dmx.Flow.run(this.flow, this).then(function(data) {\r\n                self.set('running', false);\r\n                self.set('data', data);\r\n                self.dispatchEvent('done');\r\n                if (dmx.debug) {\r\n                    console.debug('done', data);\r\n                }\r\n                return data;\r\n            }).catch(function(err) {\r\n                self.set('running', false);\r\n                self.set('lastError', err && err.message);\r\n                self.dispatchEvent('error');\r\n                //if (dmx.debug) {\r\n                    // show error debug by default\r\n                    console.error(err);\r\n                //}\r\n                if (throwError) {\r\n                    throw err;\r\n                }\r\n            });\r\n        } else if (this.props.src) {\r\n            return this.load(this.props.src).then(function() {\r\n                return self.run(param, throwError);\r\n            });\r\n        }\r\n    }\r\n\r\n});\r\n","dmx.Component('toggle', {\r\n\r\n  initialData: {\r\n    checked: false\r\n  },\r\n\r\n  attributes: {\r\n    checked: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    check: function() {\r\n      if (!this.data.checked) {\r\n        this.set('checked', true);\r\n        this.isUpdated();\r\n      }\r\n    },\r\n\r\n    uncheck: function() {\r\n      if (this.data.checked) {\r\n        this.set('checked', false);\r\n        this.isUpdated();\r\n      }\r\n    },\r\n\r\n    toggle: function() {\r\n      this.set('checked', !this.data.checked);\r\n      this.isUpdated();\r\n    }\r\n  },\r\n\r\n  events: {\r\n      updated: Event\r\n  },\r\n\r\n  render: function() {\r\n      this.set('checked', this.props.checked);\r\n  },\r\n\r\n  update: function(props) {\r\n    if (props.checked != this.props.checked) {\r\n      this.set('checked', this.props.checked);\r\n      this.isUpdated();\r\n    }\r\n  },\r\n\r\n  isUpdated: function() {\r\n    dmx.nextTick(function() {\r\n      this.dispatchEvent('updated');\r\n    }, this);\r\n  }\r\n\r\n});\r\n","dmx.Attribute('bind', 'mounted', function(node, attr) {\r\n    var name = attr.argument;\r\n    var toggle = dmx.reToggleAttribute.test(name);\r\n\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (toggle) {\r\n            //node[name] = !!value;\r\n            if (!!value) {\r\n                node.setAttribute(name, '');\r\n            } else {\r\n                node.removeAttribute(name);\r\n            }\r\n        } else {\r\n            if (name === 'style' && typeof value === 'object') {\r\n                for (var prop in value) {\r\n                    if (value.hasOwnProperty(prop)) {\r\n                        node.style[prop] = value[prop];\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (value != null) {\r\n                node.setAttribute(name, value);\r\n            } else {\r\n                node.removeAttribute(name);\r\n            }\r\n\r\n            if (name === 'src') {\r\n                if (node.nodeName === 'VIDEO' || node.nodeName === 'AUDIO') {\r\n                    node.load();\r\n                } else if (node.nodeName === 'SOURCE' && node.parentNode) {\r\n                    node.parentNode.load();\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","dmx.Attribute('on', 'mounted', function(node, attr) {\r\n    var self = this;\r\n\r\n    dmx.eventListener(node, attr.argument, function(event) {\r\n        if (event.originalEvent) {\r\n            event = event.originalEvent;\r\n        }\r\n\r\n        var returnValue = dmx.parse(attr.value, dmx.DataScope({\r\n            $event: event.$data,\r\n            $originalEvent: event\r\n        }, self));\r\n\r\n        if (typeof returnValue == 'string') {\r\n            try {\r\n                returnValue = (new Function('event', returnValue)).call(this, event);\r\n            } catch(e) {\r\n                console.warn('Error executing \"' + returnValue + '\"', e);\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }, attr.modifiers);\r\n});\r\n","dmx.Attribute('repeat', 'before', function(node, attr) {\r\n    if (this.node != node) {\r\n        var component = this;\r\n        var prevCount = 0;\r\n        var children = [];\r\n        var template = document.createDocumentFragment();\r\n        var placeholder = document.createComment('Repeat ' + attr.value);\r\n        var RepeatItem = dmx.Component('repeat-item');\r\n        var name = attr.argument || 'repeat';\r\n\r\n        node.parentNode.replaceChild(placeholder, node);\r\n        node.removeAttribute('dmx-repeat');\r\n\r\n        template.appendChild(node);\r\n\r\n        component.set(name, []);\r\n\r\n        this.$addBinding(attr.value, function(repeat) {\r\n            var RepeatItem = dmx.Component('repeat-item');\r\n            var items = dmx.repeatItems(repeat);\r\n\r\n            if (!attr.modifiers.fast) {\r\n                var fragment = document.createDocumentFragment();\r\n\r\n                children.forEach(function(child) {\r\n                    component.children.splice(component.children.indexOf(child), 1);\r\n                    child.$destroy();\r\n                });\r\n\r\n                children = [];\r\n\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var child = new RepeatItem(template.cloneNode(true), component, items[i]);\r\n                    child.$nodes.forEach(function(node) {\r\n                        fragment.appendChild(node);\r\n                        child.$parse(node);\r\n                    });\r\n                    children.push(child);\r\n                    component.children.push(child);\r\n                }\r\n\r\n                placeholder.parentNode.insertBefore(fragment, placeholder);\r\n            } else {\r\n                if (children.length > items.length) {\r\n                    // remove some children\r\n                    children.splice(items.length).forEach(function(child) {\r\n                        component.children.splice(component.children.indexOf(child), 1);\r\n                        child.$destroy();\r\n                    });\r\n                }\r\n\r\n                if (children.length) {\r\n                    // update existing children\r\n                    children.forEach(function(child, i) {\r\n                        child.set(items[i]);\r\n                    });\r\n                }\r\n\r\n                if (items.length > children.length) {\r\n                    // add new children\r\n                    var fragment = document.createDocumentFragment();\r\n\r\n                    for (var i = children.length; i < items.length; i++) {\r\n                        var child = new RepeatItem(template.cloneNode(true), component, items[i]);\r\n                        child.$nodes.forEach(function(node) {\r\n                            fragment.appendChild(node);\r\n                            child.$parse(node);\r\n                        });\r\n                        children.push(child);\r\n                        component.children.push(child);\r\n                    }\r\n\r\n                    placeholder.parentNode.insertBefore(fragment, placeholder);\r\n                }\r\n            }\r\n\r\n            component.set(name, children.map(function(child) { return child.data }));\r\n        });\r\n    }\r\n});\r\n","dmx.Attribute('class', 'mounted', function(node, attr) {\r\n    var className = attr.argument;\r\n\r\n    this.$addBinding(attr.value, function(value, oldValue) {\r\n        if (value != oldValue) {\r\n            node.classList[value ? 'add' : 'remove'](className);\r\n        }\r\n    });\r\n});\r\n","dmx.Attribute('hide', 'mounted', function(node, attr) {\r\n    var orgValue = node.style.getPropertyValue('display');\r\n    var orgPriority = node.style.getPropertyPriority('display');\r\n\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (value) {\r\n            node.style.setProperty('display', 'none', 'important');\r\n        } else {\r\n            node.style.setProperty('display', orgValue, orgPriority);\r\n        }\r\n    });\r\n});\r\n","dmx.Attribute('show', 'mounted', function(node, attr) {\r\n    var orgValue = node.style.getPropertyValue('display');\r\n    var orgPriority = node.style.getPropertyPriority('display');\r\n\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (!value) {\r\n            node.style.setProperty('display', 'none', 'important');\r\n        } else {\r\n            node.style.setProperty('display', orgValue, orgPriority);\r\n        }\r\n    })\r\n});\r\n","dmx.Attribute('html', 'mounted', function(node, attr) {\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (value != null) {\r\n            node.innerHTML = value;\r\n        } else {\r\n            node.innerHTML = '';\r\n        }\r\n    });\r\n});\r\n","dmx.Attribute('text', 'mounted', function(node, attr) {\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (value != null) {\r\n            node.innerText = value;\r\n        } else {\r\n            node.innerText = '';\r\n        }\r\n    });\r\n});\r\n","dmx.Attribute('style', 'mounted', function(node, attr) {\r\n    var property = attr.argument;\r\n    var important = attr.modifiers.important ? 'important' : '';\r\n\r\n    this.$addBinding(attr.value, function(value) {\r\n        if (value != null) {\r\n            node.style.setProperty(property, value, important);\r\n        }\r\n    });\r\n});\r\n","dmx.Formatters('global', {\r\n\r\n    // json(obj:Any):String\r\n    json: function(obj) {\r\n        return JSON.stringify(obj);\r\n    },\r\n\r\n    // log(obj:Any):Any\r\n    log: function(obj) {\r\n        console.log(obj);\r\n        return obj;\r\n    },\r\n\r\n    // run(flow:Any, param:Any):Undefined\r\n    run: function(flow, param) {\r\n        var scope = dmx.DataScope({\r\n            $param: param\r\n        }, this);\r\n\r\n        dmx.Flow.run(flow, scope);\r\n    }\r\n\r\n});\r\n","dmx.Actions({\r\n\r\n    'subflow': function(options) {\r\n        var subflow = this.parse(options.flow);\r\n        var param = this.parse(options.param);\r\n        \r\n        return this.parse(subflow + '.runSub(' + JSON.stringify(param) + ')');\r\n    },\r\n\r\n    'comment': function(options) {\r\n        if (dmx.debug) {\r\n            console.debug(options.message);\r\n        }\r\n    },\r\n\r\n    'wait': function(options) {\r\n        var delay = this.parse(options.delay);\r\n\r\n        if (typeof delay != 'number') {\r\n            throw new Error('wait: Invalid delay');\r\n        }\r\n\r\n        return new Promise(function(resolve) {\r\n            setTimeout(resolve, delay);\r\n        });\r\n    },\r\n\r\n    'now': function(options) {\r\n        return (new Date()).toISOString();\r\n    },\r\n\r\n    'random': function(options) {\r\n        var lower = this.parse(options.lower);\r\n        var upper = this.parse(options.upper);\r\n        var floating = !!this.parse(options.floating);\r\n\r\n        if (typeof lower != 'number' || !isFinite(lower)) {\r\n            lower = 0;\r\n        }\r\n\r\n        if (typeof upper != 'number' || !isFinite(upper)) {\r\n            upper = 1;\r\n        }\r\n\r\n        var rnd = lower + (Math.random() * (upper - lower));\r\n\r\n        if (!floating && Math.floor(lower) == lower && Math.floor(upper) == upper) {\r\n            rnd = Math.round(rnd);\r\n        }\r\n\r\n        return rnd;\r\n    },\r\n\r\n    'confirm': function(options) {\r\n        var message = this.parse(options.message);\r\n\r\n        if (typeof message != 'string') {\r\n            throw new Error('confirm: Invalid message');\r\n        }\r\n\r\n        var result = confirm(message);\r\n\r\n        if (result) {\r\n            if (options.then) {\r\n                return this._exec(options.then).then(function() {\r\n                    return result;\r\n                });\r\n            }\r\n        } else if (options.else) {\r\n            return this._exec(options.else).then(function() {\r\n                return result;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    'prompt': function(options) {\r\n        var message = this.parse(options.message);\r\n\r\n        if (typeof message != 'string') {\r\n            throw new Error('prompt: Invalid message');\r\n        }\r\n\r\n        return prompt(message);\r\n    },\r\n\r\n    'alert': function(options) {\r\n        var message = this.parse(options.message);\r\n\r\n        if (typeof message != 'string') {\r\n            throw new Error('alert: Invalid message');\r\n        }\r\n\r\n        return alert(message);\r\n    },\r\n\r\n    'repeat': function(options) {\r\n        var items = dmx.clone(this.parse(options.repeat));\r\n\r\n        if (!items) return;\r\n\r\n        if (typeof items == 'boolean') {\r\n            items = items ? [0] : [];\r\n        } else if (typeof items == 'string') {\r\n            items = items.split(/\\s*,\\s*/);\r\n        } else if (typeof items == 'number') {\r\n            var arr = [];\r\n            for (var i = 0; i < items; i++) {\r\n                arr.push(i + 1);\r\n            }\r\n            items = arr;\r\n        }\r\n\r\n        if (typeof items != 'object') {\r\n            throw new Error('repeat: data is not repeatable');\r\n        }\r\n\r\n        var self = this;\r\n        var parentScope = this.scope;\r\n        var parentOutput = this.output;\r\n        return this._each(items, function(value, index) {\r\n            self.scope = new dmx.DataScope(Object.assign({\r\n                $value: value,\r\n                $index: index,\r\n                $name: index,\r\n                $key: index,\r\n                $number: index + 1,\r\n                $oddeven: index % 2\r\n            }, value), parentScope);\r\n\r\n            self.output = {};\r\n\r\n            if (Array.isArray(options.outputFields) && value instanceof Object) {\r\n                options.outputFields.forEach(function(field) {\r\n                    self.output[field] = value[field];\r\n                });\r\n            }\r\n\r\n            return self._exec(options.exec).then(function() {\r\n                var output = self.output;\r\n                self.scope = parentScope;\r\n                self.output = parentOutput;\r\n                return output\r\n            });\r\n        });\r\n    },\r\n\r\n    'condition': function(options) {\r\n        var result = !!this.parse(options.if);\r\n\r\n        if (result) {\r\n            if (options.then) {\r\n                return this._exec(options.then).then(function() {\r\n                    return result;\r\n                });\r\n            }\r\n        } else if (options.else) {\r\n            return this._exec(options.else).then(function() {\r\n                return result;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    'conditions': function(options) {\r\n        if (Array.isArray(options.conditions)) {\r\n            for (var i = 0; i < options.conditions.length; i++) {\r\n                var condition = options.conditions[i];\r\n\r\n                if (this.parse(condition.when)) {\r\n                    return this._exec(condition.then);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    'select': function(options) {\r\n        var expression = this.parse(options.expression);\r\n\r\n        if (Array.isArray(options.cases)) {\r\n            for (var i = 0; i < options.cases.length; i++) {\r\n                var item = options.cases[i];\r\n\r\n                if (this.parse(item.value) == expression) {\r\n                    return this._exec(item.exec);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    'group': function(options) {\r\n        if (options.name) {\r\n            var self = this;\r\n            var parentOutput = this.output;\r\n            this.output = {};\r\n\r\n            return this._exec(options.exec).then(function() {\r\n                var output = self.output;\r\n                self.output = parentOutput;\r\n                return output;\r\n            });\r\n        }\r\n            \r\n        return this._exec(options.exec)\r\n    },\r\n\r\n    'while': function(options) {\r\n        var self = this;\r\n        var loop = function() {\r\n            return new Promise(function(resolve) {\r\n                if (!self.parse(options.condition)) return resolve();\r\n                self._exec(options.exec).then(loop).then(resolve);\r\n            });\r\n        };\r\n\r\n        return loop();\r\n    },\r\n\r\n    'switch': function(options) {\r\n        /*\r\n            {\r\n                switch: {\r\n                    expression: \"{{myVar}}\",\r\n                    cases: [\r\n                        { case: 1, exec: { console.log: { message: \"Case 1\" }}}\r\n                        { case: 2, exec: { console.log: { message: \"Case 2\" }}}\r\n                        { case: 3, exec: { console.log: { message: \"Case 3\" }}}\r\n                    ],\r\n                    default: { console.log: { message: \"Default Case\" }}\r\n                }\r\n            }\r\n         */\r\n        var expression = this.parse(options.expression);\r\n        for (var i = 0; i < options.cases.length; i++) {\r\n            if (this.parse(options.cases[i].case) === expression) {\r\n                return this._exec(options.cases[i].exec);\r\n            }\r\n        }\r\n        if (options.default) {\r\n            return this._exec(options.default);\r\n        }\r\n    },\r\n\r\n    'tryCatch': function(options) {\r\n        var self = this;\r\n        return Promise.resolve(self._exec(options.try)).catch(function() {\r\n            return self._exec(options.catch);\r\n        });\r\n    },\r\n\r\n    'run': function(options) {\r\n        if (!options.action) {\r\n            throw new Error('run: missing action');\r\n        }\r\n\r\n        return this.parse(options.action);\r\n    },\r\n\r\n    'runJS': function(options) {\r\n        if (!options.function) {\r\n            throw new Error('runJS: missing function');\r\n        }\r\n\r\n        var func = this.parse(options.function);\r\n        var args = this.parse(options.args);\r\n\r\n        return window[func].apply(null, args);\r\n    },\r\n\r\n    'assign': function(options) {\r\n        return this.parse(options.value);\r\n    },\r\n\r\n    'setGlobal': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('setGlobal: key must be a string');\r\n        }\r\n\r\n        dmx.global.set(key, value);\r\n\r\n        return value;\r\n    },\r\n\r\n    'setSession': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('setSession: key must be a string');\r\n        }\r\n\r\n        sessionStorage.setItem(key, JSON.stringify(value));\r\n\r\n        return value;\r\n    },\r\n\r\n    'getSession': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('getSession: key must be a string');\r\n        }\r\n\r\n        return JSON.parse(sessionStorage.getItem(key));\r\n    },\r\n\r\n    'removeSession': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('removeSession: key must be a string');\r\n        }\r\n\r\n        sessionStorage.removeItem(key);\r\n\r\n        return true;\r\n    },\r\n\r\n    'setStorage': function(options) {\r\n        var key = this.parse(options.key);\r\n        var value = this.parse(options.value);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('setStorage: key must be a string');\r\n        }\r\n\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n\r\n        return value;\r\n    },\r\n\r\n    'getStorage': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('getStorage: key must be a string');\r\n        }\r\n\r\n        return JSON.parse(localStorage.getItem(key));\r\n    },\r\n\r\n    'removeStorage': function(options) {\r\n        var key = this.parse(options.key);\r\n\r\n        if (typeof key != 'string') {\r\n            throw new Error('removeStorage: key must be a string');\r\n        }\r\n\r\n        localStorage.removeItem(key);\r\n\r\n        return true;\r\n    },\r\n\r\n    'fetch': function(options) {\r\n        var url = this.parse(options.url);\r\n        var method = this.parse(options.method);\r\n        var timeout = this.parse(options.timeout);\r\n        var dataType = this.parse(options.dataType);\r\n        var data = this.parse(options.data);\r\n        var params = this.parse(options.params);\r\n        var headers = this.parse(options.headers);\r\n        var body = null;\r\n\r\n        if (typeof url != 'string') {\r\n            throw new Error('fetch: invalid url ' + url);\r\n        }\r\n\r\n        if (!['GET', 'POST', 'PUT', 'DELETE'].includes(method)) {\r\n            //throw new Error('fetch: invalid method ' + method);\r\n            method = 'GET';\r\n        }\r\n\r\n        if (!['auto', 'json', 'text'].includes(dataType)) {\r\n            dataType = 'auto';\r\n        }\r\n\r\n        if (typeof timeout != 'number') {\r\n            timeout = 0;\r\n        }\r\n\r\n        if (typeof params == 'object') {\r\n            for (var param in params) {\r\n                if (params.hasOwnProperty(param)) {\r\n                    url += (url.indexOf('?') != -1 ? '&' : '?')\r\n                        + decodeURIComponent(param) + '=' + decodeURIComponent(params[param]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (method != 'GET') {\r\n            if (dataType == 'text') {\r\n                if (!headers['Content-Type']) {\r\n                    headers['Content-Type'] = 'application/text';\r\n                }\r\n                body = data.toString();\r\n            } else if (dataType == 'json') {\r\n                if (!headers['Content-Type']) {\r\n                    headers['Content-Type'] = 'application/json';\r\n                }\r\n                data = JSON.stringify(data);\r\n            } else {\r\n                if (method == 'POST') {\r\n                    body = new FormData();\r\n\r\n                    if (typeof data == 'object' && !Array.isArray(data)) {\r\n                        for (var key in data) {\r\n                            if (data.hasOwnProperty(key)) {\r\n                                var value = data[key];\r\n\r\n                                if (Array.isArray(value)) {\r\n                                    if (!/\\[\\]$/.test(key)) {\r\n                                        key += '[]';\r\n                                    }\r\n                                    for (var i in value) {\r\n                                        if (value.hasOwnProperty(i)) {\r\n                                            body.append(key, value[i]);\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    body.set(key, value);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!headers['Content-Type']) {\r\n                        headers['Content-Type'] = 'application/text';\r\n                    }\r\n                    data = data.toString();\r\n                }\r\n            }\r\n        }\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n\r\n            xhr.onerror = reject;\r\n            xhr.onabort = reject;\r\n            xhr.ontimeout = reject;\r\n            xhr.onload = function() {\r\n                var response = xhr.responseText;\r\n                var headers = (function(raw) {\r\n                    var arr = raw.trim().split(/[\\r\\n]+/);\r\n\r\n                    return arr.reduce(function(headers, line) {\r\n                        var parts = line.split(': ');\r\n                        var header = parts.shift();\r\n                        var value = parts.join(': ');\r\n\r\n                        headers[header.toLowerCase()] = value;\r\n\r\n                        return headers;\r\n                    }, {});\r\n                })(xhr.getAllResponseHeaders());\r\n\r\n                if (/^application\\/json/.test(headers['content-type'])) {\r\n                    response = JSON.parse(response);\r\n                }\r\n\r\n                resolve({\r\n                    status: xhr.status,\r\n                    headers: headers,\r\n                    data: response\r\n                });\r\n            }\r\n\r\n            xhr.open(method, url);\r\n\r\n            xhr.timeout = timeout * 1000;\r\n\r\n            for (var header in headers) {\r\n                if (headers.hasOwnProperty(header)) {\r\n                    xhr.setRequestHeader(header, headers[header]);\r\n                }\r\n            }\r\n\r\n            xhr.send(body);\r\n        });\r\n    }\r\n\r\n});\r\n\r\n// aliasses\r\ndmx.__actions['setValue'] = dmx.__actions['assign'];\r\ndmx.__actions['api'] = dmx.__actions['fetch'];\r\ndmx.__actions['api.send'] = dmx.__actions['fetch'];\r\ndmx.__actions['serverConnect'] = dmx.__actions['fetch'];","dmx.Actions({\r\n    /**\r\n     * Add new columns to the collection\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {Object.<string,*>} options.add - Object with column name as key and the value\r\n     * @param {boolean} [options.overwrite=false] - Overwrite existing columns\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.addColumns': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var add = options.add;\r\n        var overwrite = !!this.parse(options.overwrite);\r\n\r\n        if (!collection.length) return [];\r\n        \r\n        var output = [];\r\n        \r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = dmx.clone(collection[i]);\r\n\r\n            for (var column in add) {\r\n                if (add.hasOwnProperty(column)) {\r\n                    var scope = new dmx.DataScope(row, this.scope);\r\n\r\n                    if (overwrite || row[column] == null) {\r\n                        row[column] = dmx.parse(add[column], scope);\r\n                    }\r\n                }\r\n            }\r\n\r\n            output.push(row);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Remove entire specified columns from the collection\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {string[]} options.columns - The columns\r\n     * @param {boolean} [options.keep=false] - Keep or remove the columns\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.filterColumns': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var columns = this.parse(options.columns);\r\n        var keep = !!this.parse(options.keep);\r\n\r\n        if (!collection.length) return [];\r\n\r\n        var output = [];\r\n\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = collection[i];\r\n            var newRow = {};\r\n\r\n            for (var column in row) {\r\n                if (row.hasOwnProperty(column)) {\r\n                    if (columns.includes(column)) {\r\n                        if (keep) {\r\n                            newRow[column] = dmx.clone(row[column]);\r\n                        }\r\n                    } else if (!keep) {\r\n                        newRow[column] = dmx.clone(row[column]);\r\n                    }\r\n                }\r\n            }\r\n\r\n            output.push(newRow);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Rename columns in the collection\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {Object.<string,string>} options.rename - Object with old name as key and new name as value\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.renameColumns': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var rename = this.parse(options.rename);\r\n\r\n        if (!collection.length) return [];\r\n \r\n        var output = [];\r\n\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = collection[i];\r\n            var newRow = {};\r\n\r\n            for (var column in row) {\r\n                if (row.hasOwnProperty(column)) {\r\n                    newRow[rename[column] || column] = dmx.clone(row[column]);\r\n                }\r\n            }\r\n\r\n            output.push(newRow);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Fills empty rows with the row above's value\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {string[]} options.columns - The columns to fill\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.fillDown': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var columns = this.parse(options.columns);\r\n\r\n        if (!collection.length) return [];\r\n\r\n        var output = [];\r\n        var toFill = {};\r\n\r\n        for (var i = 0, l = columns.length; i < l; i++) {\r\n            toFill[columns[i]] = null;\r\n        }\r\n\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = dmx.clone(collection[i]);\r\n\r\n            for (var column in toFill) {\r\n                if (toFill.hasOwnProperty(column)) {\r\n                    if (row[column] == null) {\r\n                        row[column] = toFill[column];\r\n                    } else {\r\n                        toFill[column] = row[column];\r\n                    }\r\n                }\r\n            }\r\n\r\n            output.push(row);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Add new rows to the collection\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {Object[]} options.rows - The rows to add\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.addRows': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var rows = this.parse(options.rows);\r\n\r\n        return dmx.clone(collection).concat(dmx.clone(rows));\r\n    },\r\n\r\n    /**\r\n     * Add row numbers to the collection\r\n     * @param {Object} options \r\n     * @param {Object[]} options.collection - The collection\r\n     * @param {string} options.column - The name for the column\r\n     * @param {number} options.startAt - The row number to start with\r\n     * @param {boolean} [options.desc=false] - Order descending\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.addRowNumbers': function(options) {\r\n        var collection = this.parse(options.collection);\r\n        var column = this.parse(options.column);\r\n        var startAt = this.parse(options.startAt);\r\n        var desc = !!this.parse(options.desc);\r\n\r\n        var output = [];\r\n\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = dmx.clone(collection[i]);\r\n            row[column] = desc ? l + startAt - i : startAt + i;\r\n            output.push(row);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Join two collections (Left join)\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection1 - Left collection\r\n     * @param {Object[]} options.collection2 - Right collection\r\n     * @param {Object.<string,string>} options.matches - Columns to match\r\n     * @param {boolean} [options.matchAll=false] - Match columns using AND instead of OR\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'colections.join': function(options) {\r\n        var collection1 = this.parse(options.collection1);\r\n        var collection2 = this.parse(options.collection2);\r\n        var matches = this.parse(options.matches);\r\n        var matchAll = !!this.parse(options.matchAll);\r\n\r\n        var output = [];\r\n\r\n        for (var i = 0, l = collection1.length; i < l; i++) {\r\n            var row = dmx.clone(collection1[i]);\r\n\r\n            for (var j = 0, l2 = collection2.length; j < l2; j++) {\r\n                var row2 = collection2[j];\r\n                var hasMatch = false;\r\n\r\n                for (var match in matches) {\r\n                    if (matches.hasOwnProperty(match)) {\r\n                        if (row[match] == row2[matches[match]]) {\r\n                            hasMatch = true;\r\n                            if (!matchAll) break;\r\n                        } else if (matchAll) {\r\n                            hasMatch = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (hasMatch) {\r\n                    for (var column in row2) {\r\n                        if (row2.hasOwnProperty(column)) {\r\n                            // TODO duplicate row from collection1 when multiple matches exist in collection2\r\n                            // TODO check for duplicate column names\r\n                            row[column] = dmx.clone(row2[column]);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            output.push(row);\r\n        }\r\n\r\n        return output;\r\n    },\r\n\r\n    /**\r\n     * Normalize all rows, add missing columns with NULL value\r\n     * @param {Object} options\r\n     * @param {Object[]} options.collection - The collection\r\n     * @returns {Object[]} - New collection\r\n     */\r\n    'collections.mormalize': function(options) {\r\n        var collection = this.parse(options.collection);\r\n\r\n        var columns = [];\r\n        var output = [];\r\n\r\n        // first collect all columns from collection\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            for (var column in collection[i]) {\r\n                if (collection[i].hasOwnProperty(column)) {\r\n                    if (columns.indexOf(column) == -1) {\r\n                        columns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0, l = collection.length; i < l; i++) {\r\n            var row = {};\r\n\r\n            for (var j = 0, l2 = columns.length; j < l2; j++) {\r\n                var column = columns[j];\r\n                var value = dmx.clone(collection[column]);\r\n                row[column] = value != null ? value : null;\r\n            }\r\n\r\n            output.push(row);\r\n        }\r\n\r\n        return output;\r\n    }\r\n\r\n});","dmx.Actions({\r\n\r\n    'console.log': function(options) {\r\n        console.log(this.parse(options.message));\r\n    },\r\n\r\n    'console.info': function(options) {\r\n        console.info(this.parse(options.message));\r\n    },\r\n\r\n    'console.warn': function(options) {\r\n        console.warn(this.parse(options.message));\r\n    },\r\n\r\n    'console.error': function(options) {\r\n        console.error(this.parse(options.message));\r\n    },\r\n\r\n    'console.count': function(options) {\r\n        console.count(this.parse(options.label));\r\n    },\r\n\r\n    'console.time': function(options) {\r\n        console.time(this.parse(options.label));\r\n    },\r\n\r\n    'console.timeEnd': function(options) {\r\n        console.timeEnd(this.parse(options.label));\r\n    },\r\n\r\n    'console.group': function(options) {\r\n        console.group();\r\n    },\r\n\r\n    'console.groupEnd': function(options) {\r\n        console.groupEnd();\r\n    },\r\n\r\n    'console.clear': function(options) {\r\n        console.clear();\r\n    }\r\n\r\n});"]}