{"version":3,"sources":["components/datePicker.js","components/dateRangePicker.js"],"names":["dmx","Component","extends","attributes","name","type","String","default","showdropdowns","Boolean","minyear","Number","maxyear","opens","dropsup","showweeknumbers","mindate","maxdate","format","invaliddates","Array","customdates","disableweekends","direction","weeklabel","applylabel","cancellabel","timepicker","use24hours","utc","events","show","Event","hide","apply","cancel","render","node","prototype","call","this","createHiddenInput","$node","removeAttribute","autocomplete","update","input","document","createElement","value","parentNode","insertBefore","props","JSON","stringify","$","daterangepicker","singleDatePicker","autoUpdateInput","showWeekNumbers","showDropdowns","minYear","undefined","maxYear","drops","minDate","formatDate","maxDate","locale","weekLabel","applyLabel","cancelLabel","buttonClasses","applyButtonClasses","cancelButtonClasses","isCustomDate","bind","isInvalidDate","timePicker","timePicker24Hour","timePickerIncrement","updateValue","on","onChange","onApply","dispatchEvent","data","moment","toISOString","substring","defaultValue","setValue","disabled","updateData","event","dirty","validate","nextTick","set","validity","valid","validationMessage","str","m","isValid","date","day","some","range","isInRange","filter","map","start","end","isSameOrAfter","isSameOrBefore","oldValue","startDate","setStartDate","setEndDate","destroy","off","clickDate","e","container","find","length","initialData","startdate","enddate","autoapply","separator","unlinked","methods","endDate","input1","input2","autoApply","linkedCalendars","maxSpan","years","months","weeks","days","oldValue1","oldValue2"],"mappings":"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","file":"../dmxDatePicker/dmxDatePicker.js","sourcesContent":["dmx.Component('date-picker', {\r\n\r\n    extends: 'input',\r\n\r\n    attributes: {\r\n        name: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        showdropdowns: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        minyear: {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        maxyear: {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        opens: {\r\n            type: String,\r\n            default: 'right' // left, right, center\r\n        },\r\n\r\n        dropsup: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        showweeknumbers: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        mindate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        maxdate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        format: {\r\n            type: String,\r\n            default: null\r\n        },\r\n\r\n        invaliddates: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'invaliddates-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'invaliddates-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        customdates: {\r\n            type: Array,\r\n            default: []\r\n        },\r\n\r\n        'customdates-start': {\r\n            type: String,\r\n            default: 'start'\r\n        },\r\n\r\n        'customdates-end': {\r\n            type: String,\r\n            default: 'end'\r\n        },\r\n\r\n        'customdates-class': {\r\n            type: String,\r\n            default: 'class'\r\n        },\r\n\r\n        disableweekends: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        direction: {\r\n            type: String,\r\n            default: 'ltr'\r\n        },\r\n\r\n        weeklabel: {\r\n            type: String,\r\n            default: 'W'\r\n        },\r\n\r\n        applylabel: {\r\n            type: String,\r\n            default: 'Apply'\r\n        },\r\n\r\n        cancellabel: {\r\n            type: String,\r\n            default: 'Cancel'\r\n        },\r\n\r\n        timepicker: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        use24hours: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'minutes-increment': {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n\r\n        utc: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    events: {\r\n        show: Event,\r\n        hide: Event,\r\n        apply: Event,\r\n        cancel: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.Component('form-element').prototype.render.call(this, node);\r\n\r\n        this.createHiddenInput();\r\n\r\n        this.$node.removeAttribute('name');\r\n        this.$node.autocomplete = 'off';\r\n\r\n        this.update({});\r\n    },\r\n\r\n    createHiddenInput: function() {\r\n        this.input = document.createElement('input');\r\n        if (this.$node.name) this.input.name = this.$node.name;\r\n        this.input.value = this.$node.value;\r\n        this.input.type = 'hidden';\r\n\r\n        this.$node.parentNode.insertBefore(this.input, this.$node);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (this.props.name) {\r\n            this.input.name = this.props.name;\r\n        }\r\n\r\n        if (JSON.stringify(props) != JSON.stringify(this.props)) {\r\n            if (!this.props.format) {\r\n                this.props.format = this.props.timepicker ? 'L LT' : 'L';\r\n            }\r\n    \r\n            $(this.$node).daterangepicker({\r\n                singleDatePicker: true,\r\n                autoUpdateInput: false,\r\n                showWeekNumbers: !!this.props.showweeknumbers,\r\n                showDropdowns: !!this.props.showdropdowns,\r\n                minYear: this.props.minyear || undefined,\r\n                maxYear: this.props.maxyear || undefined,\r\n                opens: this.props.opens,\r\n                drops: !!this.props.dropsup ? 'up' : 'down',\r\n                minDate: this.formatDate(this.props.mindate),\r\n                maxDate: this.formatDate(this.props.maxdate),\r\n                locale: {\r\n                    format: this.props.format,\r\n                    direction: this.props.direction,\r\n                    weekLabel: this.props.weeklabel,\r\n                    applyLabel: this.props.applylabel,\r\n                    cancelLabel: this.props.cancellabel\r\n                },\r\n                buttonClasses: '',\r\n                applyButtonClasses: '',\r\n                cancelButtonClasses: '',\r\n                isCustomDate: this.isCustomDate.bind(this),\r\n                isInvalidDate: this.isInvalidDate.bind(this),\r\n                timePicker: this.props.timepicker,\r\n                timePicker24Hour: this.props.use24hours,\r\n                timePickerIncrement: this.props['minutes-increment']\r\n            }, this.updateValue.bind(this));\r\n\r\n            $(this.$node).on('change.daterangepicker', this.onChange.bind(this));\r\n            $(this.$node).on('apply.daterangepicker', this.onApply.bind(this));\r\n    \r\n            $(this.$node).on('show.daterangepicker', this.dispatchEvent.bind(this, 'show'));\r\n            $(this.$node).on('hide.daterangepicker', this.dispatchEvent.bind(this, 'hide'));\r\n            $(this.$node).on('apply.daterangepicker', this.dispatchEvent.bind(this, 'apply'));\r\n            $(this.$node).on('cancel.daterangepicker', this.dispatchEvent.bind(this, 'cancel'));\r\n\r\n            this.daterangepicker = $(this.$node).data('daterangepicker');\r\n\r\n            if (props.value !== this.props.value) {\r\n                var value = this.props.value;\r\n                if (value == 'now' || value == 'today') {\r\n                    value = this.props.utc ? moment().toISOString() : moment().format('YYYY-MM-DD HH:mm:ss');\r\n                }\r\n                if (!this.props.timepicker) {\r\n                    value = value.substring(0, 10);\r\n                }\r\n                this.$node.defaultValue = this.formatDate(value) || '';\r\n                this.input.defaultValue = value || '';\r\n                this.setValue(value);\r\n            }\r\n\r\n            if (props.disabled != this.props.disabled) {\r\n                this.$node.disabled = this.props.disabled;\r\n                this.input.disabled = this.props.disabled;\r\n            }\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        if (event && this.$node.dirty) {\r\n            dmx.validate(this.$node);\r\n        }\r\n\r\n        if (this.input.value !== this.data.value) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n\r\n        this.set('value', this.input.value);\r\n        this.set('disabled', this.$node.disabled);\r\n\r\n        if (this.$node.dirty) {\r\n            this.set('invalid', !this.$node.validity.valid);\r\n            this.set('validationMessage', this.$node.validationMessage);\r\n        }\r\n    },\r\n\r\n    formatDate: function(str) {\r\n        if (!str) return undefined;\r\n        if (str == 'now' || str == 'today') return moment().format(this.props.format);\r\n        var m = moment(str);\r\n        return m.isValid() ? m.format(this.props.format) : undefined;\r\n    },\r\n\r\n    isInvalidDate: function(date) {\r\n        if (this.props.disableweekends) {\r\n            var day = date.day();\r\n            if (day === 0 || day === 6) return true;\r\n        }\r\n\r\n        return this.props.invaliddates.some(function(range) {\r\n            return this.isInRange(date, range, this.props['invaliddates-start'], this.props['invaliddates-end']);\r\n        }, this);\r\n    },\r\n\r\n    isCustomDate: function(date) {\r\n        return this.props.customdates.filter(function(range) {\r\n            return this.isInRange(date, range, this.props['customdates-start'], this.props['customdates-end']);\r\n        }, this).map(function(range) {\r\n            return range[this.props['customdates-class']];\r\n        }, this);\r\n    },\r\n\r\n    isInRange: function(date, range, start, end) {\r\n        if (range[start] && range[end]) {\r\n            return date.isSameOrAfter(range[start]) && date.isSameOrBefore(range[end]);\r\n        }\r\n\r\n        if (range[start]) {\r\n            return date.isSameOrAfter(range[start]);\r\n        }\r\n\r\n        if (range[end]) {\r\n            return date.isSameOrBefore(range[end]);\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    onChange: function(event) {\r\n        if (!moment(this.$node.value, this.props.format).isValid()) {\r\n            this.setValue('');\r\n        }\r\n    },\r\n\r\n    onApply: function(event) {\r\n        var oldValue = this.data.value;\r\n        this.updateValue(this.daterangepicker.startDate);\r\n        if (this.input.value !== oldValue) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    updateValue: function(date) {\r\n        var value = this.props.utc ? date.toISOString() : date.format('YYYY-MM-DD HH:mm:ss');\r\n        if (!this.props.timepicker) {\r\n            value = value.substring(0, 10);\r\n        }\r\n        this.setValue(value);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        if (value) {\r\n            this.daterangepicker.setStartDate(this.formatDate(value));\r\n            this.daterangepicker.setEndDate(this.formatDate(value));\r\n        }\r\n        this.$node.value = this.formatDate(value) || '';\r\n        this.input.value = value || '';\r\n        this.updateData(true);\r\n    },\r\n\r\n    format: function(date) {\r\n        if (!date) return '';\r\n        return moment(date).format(this.props.format);\r\n    },\r\n\r\n    destroy: function() {\r\n        this.input.off('.daterangepicker');\r\n    }\r\n\r\n});\r\n","(function() {\r\n    // hack original clickDate method to disallow selecting range with invalid dates in it\r\n    var clickDate = daterangepicker.prototype.clickDate;\r\n    daterangepicker.prototype.clickDate = function(e) {\r\n        if (this.container.find('.in-range:not(.available)').length) return;\r\n        return clickDate.call(this, e);\r\n    };\r\n})();\r\n\r\ndmx.Component('date-range-picker', {\r\n\r\n    extends: 'date-picker',\r\n\r\n    initialData: {\r\n        start: '',\r\n        end: ''\r\n    },\r\n\r\n    attributes: {\r\n        startdate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        enddate: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        autoapply: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        separator: {\r\n            type: String,\r\n            default: ' - '\r\n        },\r\n\r\n        unlinked: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        'maxspan-years': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-months': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-weeks': {\r\n            type: Number,\r\n            default: null\r\n        },\r\n\r\n        'maxspan-days': {\r\n            type: Number,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        setValue: function(startDate, endDate) {\r\n            this.setValue(startDate, endDate);\r\n        }\r\n    },\r\n\r\n    createHiddenInput: function() {\r\n        dmx.Component('date-picker').prototype.createHiddenInput.call(this);\r\n\r\n        this.input1 = document.createElement('input');\r\n        if (this.$node.name) this.input1.name = this.$node.name + '_start';\r\n        this.input1.value = this.props.startDate;\r\n        this.input1.type = 'hidden';\r\n\r\n        this.input2 = document.createElement('input');\r\n        if (this.$node.name) this.input2.name = this.$node.name + '_end';\r\n        this.input2.value = this.props.startDate;\r\n        this.input2.type = 'hidden';\r\n\r\n        this.$node.parentNode.insertBefore(this.input1, this.$node);\r\n        this.$node.parentNode.insertBefore(this.input2, this.$node);\r\n    },\r\n\r\n    update: function(props) {\r\n        if (this.props.name) {\r\n            this.input.name = this.props.name;\r\n            this.input1.name = this.props.name + '_start';\r\n            this.input2.name = this.props.name + '_end';\r\n        }\r\n\r\n        if (JSON.stringify(props) != JSON.stringify(this.props)) {\r\n            if (!this.props.format) {\r\n                this.props.format = this.props.timepicker ? 'L LT' : 'L';\r\n            }\r\n            \r\n            $(this.$node).daterangepicker({\r\n                autoUpdateInput: false,\r\n                autoApply: !!this.props.autoapply,\r\n                linkedCalendars: !this.props.unlinked,\r\n                showWeekNumbers: !!this.props.showweeknumbers,\r\n                showDropdowns: !!this.props.showdropdowns,\r\n                minYear: this.props.minYear || undefined,\r\n                maxYear: this.props.maxYear || undefined,\r\n                opens: this.props.opens,\r\n                drops: !!this.props.dropsup ? 'up' : 'down',\r\n                minDate: this.formatDate(this.props.mindate),\r\n                maxDate: this.formatDate(this.props.maxdate),\r\n                maxSpan: this.props['maxspan-years'] || this.props['maxspan-months'] ||\r\n                         this.props['maxspan-weeks'] || this.props['maxspan-days'] ? {\r\n                    years: this.props['maxspan-years'],\r\n                    months: this.props['maxspan-months'],\r\n                    weeks: this.props['maxspan-weeks'],\r\n                    days: this.props['maxspan-days']\r\n                } : undefined,\r\n                locale: {\r\n                    format: this.props.format,\r\n                    separator: this.props.separator,\r\n                    direction: this.props.direction,\r\n                    weekLabel: this.props.weeklabel,\r\n                    applyLabel: this.props.applylabel,\r\n                    cancelLabel: this.props.cancellabel\r\n                },\r\n                buttonClasses: '',\r\n                applyButtonClasses: '',\r\n                cancelButtonClasses: '',\r\n                isCustomDate: this.isCustomDate.bind(this),\r\n                isInvalidDate: this.isInvalidDate.bind(this),\r\n                timePicker: this.props.timepicker,\r\n                timePicker24Hour: this.props.use24hours,\r\n                timePickerIncrement: this.props['minutes-increment']\r\n            }, this.updateValue.bind(this));\r\n\r\n            $(this.$node).on('change.daterangepicker', this.onChange.bind(this));\r\n            $(this.$node).on('apply.daterangepicker', this.onApply.bind(this));\r\n    \r\n            $(this.$node).on('show.daterangepicker', this.dispatchEvent.bind(this, 'show'));\r\n            $(this.$node).on('hide.daterangepicker', this.dispatchEvent.bind(this, 'hide'));\r\n            $(this.$node).on('apply.daterangepicker', this.dispatchEvent.bind(this, 'apply'));\r\n            $(this.$node).on('cancel.daterangepicker', this.dispatchEvent.bind(this, 'cancel'));\r\n\r\n            this.daterangepicker = $(this.$node).data('daterangepicker');\r\n\r\n            if (props.startdate !== this.props.startdate || props.enddate !== this.props.enddate) {\r\n                var startDate = this.props.startdate;\r\n                var endDate = this.props.enddate;\r\n                if (startDate == 'now' || startDate == 'today') {\r\n                    startDate = this.props.utc ? moment().toISOString() : moment().format('YYYY-MM-DD HH:mm:ss');\r\n                }\r\n                if (endDate == 'now' || endDate == 'today') {\r\n                    endDate = this.props.utc ? moment().toISOString() : moment().format('YYYY-MM-DD HH:mm:ss');\r\n                }\r\n                if (!this.props.timepicker) {\r\n                    startDate = startDate.substring(0, 10);\r\n                    endDate = endDate.substring(0, 10);\r\n                }\r\n                this.$node.defaultValue = startDate && endDate ? this.formatDate(startDate) + this.props.separator + this.formatDate(endDate) : '';\r\n                this.input.defaultValue = startDate && endDate ? startDate + '/' + endDate : '';\r\n                this.input1.defaultValue = startDate || '';\r\n                this.input2.defaultValue = endDate || '';\r\n                this.setValue(startDate, endDate);\r\n            }\r\n\r\n            if (props.disabled != this.props.disabled) {\r\n                this.$node.disabled = this.props.disabled;\r\n                this.input1.disabled = this.props.disabled;\r\n                this.input2.disabled = this.props.disabled;\r\n            }\r\n        }\r\n\r\n        this.updateData();\r\n    },\r\n\r\n    updateData: function(event) {\r\n        if (this.input1.value !== this.data.start || this.input2.value !== this.data.end) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('updated');\r\n            }, this);\r\n        }\r\n\r\n        dmx.Component('date-picker').prototype.updateData.call(this, event);\r\n    },\r\n\r\n    onApply: function(event) {\r\n        var oldValue1 = this.data.start;\r\n        var oldValue2 = this.data.end;\r\n        this.updateValue(this.daterangepicker.startDate, this.daterangepicker.endDate);\r\n        if (this.input1.value !== oldValue1 || this.input2.value !== oldValue2) {\r\n            dmx.nextTick(function() {\r\n                this.dispatchEvent('changed');\r\n            }, this);\r\n        }\r\n    },\r\n\r\n    updateValue: function(startDate, endDate) {\r\n        var start = this.props.utc ? startDate.toISOString() : startDate.format('YYYY-MM-DD HH:mm:ss');\r\n        var end = this.props.utc ? endDate.toISOString() : endDate.format('YYYY-MM-DD HH:mm:ss');\r\n        if (!this.props.timepicker) {\r\n            start = start.substring(0, 10);\r\n            end = end.substring(0, 10);\r\n        }\r\n        this.setValue(start, end);\r\n    },\r\n\r\n    setValue: function(startDate, endDate) {\r\n        if (startDate) this.daterangepicker.setStartDate(this.formatDate(startDate));\r\n        if (endDate) this.daterangepicker.setEndDate(this.formatDate(endDate));\r\n        this.$node.value = startDate && endDate ? this.formatDate(startDate) + this.props.separator + this.formatDate(endDate) : '';\r\n        this.input.value = startDate && endDate ? startDate + '/' + endDate : '';\r\n        this.input1.value = startDate || '';\r\n        this.input2.value = endDate || '';\r\n        this.set('start', startDate);\r\n        this.set('end', endDate);\r\n        this.updateData(true);\r\n    }\r\n\r\n});\r\n"]}